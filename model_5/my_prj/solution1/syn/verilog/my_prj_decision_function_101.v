// ==============================================================
// Generated by Vitis HLS v2024.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module my_prj_decision_function_101 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        x_4_val,
        x_6_val,
        x_9_val,
        x_11_val,
        x_14_val,
        x_16_val,
        x_17_val,
        x_18_val,
        x_19_val,
        x_21_val,
        x_22_val,
        x_24_val,
        x_25_val,
        x_33_val,
        x_34_val,
        x_37_val,
        x_39_val,
        x_40_val,
        x_42_val,
        x_43_val,
        x_44_val,
        x_45_val,
        x_50_val,
        x_51_val,
        x_52_val,
        ap_return
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [17:0] x_4_val;
input  [17:0] x_6_val;
input  [17:0] x_9_val;
input  [17:0] x_11_val;
input  [17:0] x_14_val;
input  [17:0] x_16_val;
input  [17:0] x_17_val;
input  [17:0] x_18_val;
input  [17:0] x_19_val;
input  [17:0] x_21_val;
input  [17:0] x_22_val;
input  [17:0] x_24_val;
input  [17:0] x_25_val;
input  [17:0] x_33_val;
input  [17:0] x_34_val;
input  [17:0] x_37_val;
input  [17:0] x_39_val;
input  [17:0] x_40_val;
input  [17:0] x_42_val;
input  [17:0] x_43_val;
input  [17:0] x_44_val;
input  [17:0] x_45_val;
input  [17:0] x_50_val;
input  [17:0] x_51_val;
input  [17:0] x_52_val;
output  [11:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln86_fu_436_p2;
reg   [0:0] icmp_ln86_reg_1516;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln86_1976_fu_448_p2;
reg   [0:0] icmp_ln86_1976_reg_1525;
wire   [0:0] icmp_ln86_1979_fu_466_p2;
reg   [0:0] icmp_ln86_1979_reg_1531;
wire   [0:0] icmp_ln86_1980_fu_472_p2;
reg   [0:0] icmp_ln86_1980_reg_1537;
wire   [0:0] icmp_ln86_1985_fu_502_p2;
reg   [0:0] icmp_ln86_1985_reg_1543;
wire   [0:0] icmp_ln86_1986_fu_508_p2;
reg   [0:0] icmp_ln86_1986_reg_1549;
reg   [0:0] tmp_reg_1555;
wire   [0:0] icmp_ln86_1987_fu_522_p2;
reg   [0:0] icmp_ln86_1987_reg_1561;
wire   [0:0] icmp_ln86_1995_fu_590_p2;
reg   [0:0] icmp_ln86_1995_reg_1567;
wire   [0:0] icmp_ln86_1996_fu_596_p2;
reg   [0:0] icmp_ln86_1996_reg_1572;
wire   [0:0] icmp_ln86_1997_fu_602_p2;
reg   [0:0] icmp_ln86_1997_reg_1577;
wire   [0:0] icmp_ln86_1998_fu_618_p2;
reg   [0:0] icmp_ln86_1998_reg_1582;
wire   [0:0] icmp_ln86_1999_fu_624_p2;
reg   [0:0] icmp_ln86_1999_reg_1587;
wire   [0:0] icmp_ln86_2000_fu_630_p2;
reg   [0:0] icmp_ln86_2000_reg_1592;
wire   [0:0] icmp_ln86_2001_fu_636_p2;
reg   [0:0] icmp_ln86_2001_reg_1597;
wire   [0:0] icmp_ln86_2002_fu_642_p2;
reg   [0:0] icmp_ln86_2002_reg_1602;
wire   [3:0] select_ln117_1932_fu_1010_p3;
reg   [3:0] select_ln117_1932_reg_1607;
wire    ap_block_pp0_stage0;
wire   [10:0] tmp_35_fu_552_p4;
wire   [13:0] tmp_36_fu_574_p4;
wire   [16:0] tmp_37_fu_608_p4;
wire   [0:0] icmp_ln86_1975_fu_442_p2;
wire   [0:0] xor_ln104_945_fu_654_p2;
wire   [0:0] icmp_ln86_1977_fu_454_p2;
wire   [0:0] and_ln102_fu_648_p2;
wire   [0:0] xor_ln104_947_fu_672_p2;
wire   [0:0] icmp_ln86_1978_fu_460_p2;
wire   [0:0] and_ln104_fu_660_p2;
wire   [0:0] xor_ln104_948_fu_690_p2;
wire   [0:0] icmp_ln86_1981_fu_478_p2;
wire   [0:0] and_ln102_2235_fu_666_p2;
wire   [0:0] icmp_ln86_1982_fu_484_p2;
wire   [0:0] and_ln104_374_fu_678_p2;
wire   [0:0] icmp_ln86_1983_fu_490_p2;
wire   [0:0] and_ln102_2236_fu_684_p2;
wire   [0:0] icmp_ln86_1984_fu_496_p2;
wire   [0:0] and_ln104_375_fu_696_p2;
wire   [0:0] icmp_ln86_1988_fu_528_p2;
wire   [0:0] and_ln102_2239_fu_702_p2;
wire   [0:0] icmp_ln86_1989_fu_534_p2;
wire   [0:0] xor_ln104_951_fu_708_p2;
wire   [0:0] and_ln102_2248_fu_756_p2;
wire   [0:0] icmp_ln86_1990_fu_540_p2;
wire   [0:0] xor_ln104_952_fu_720_p2;
wire   [0:0] and_ln102_2250_fu_768_p2;
wire   [0:0] icmp_ln86_1991_fu_546_p2;
wire   [0:0] and_ln102_2241_fu_726_p2;
wire   [0:0] icmp_ln86_1992_fu_562_p2;
wire   [0:0] xor_ln104_953_fu_732_p2;
wire   [0:0] and_ln102_2253_fu_786_p2;
wire   [0:0] icmp_ln86_1993_fu_568_p2;
wire   [0:0] and_ln102_2242_fu_738_p2;
wire   [0:0] icmp_ln86_1994_fu_584_p2;
wire   [0:0] xor_ln104_954_fu_744_p2;
wire   [0:0] and_ln102_2256_fu_804_p2;
wire   [0:0] and_ln102_2240_fu_714_p2;
wire   [0:0] and_ln102_2247_fu_750_p2;
wire   [0:0] xor_ln117_fu_822_p2;
wire   [0:0] or_ln117_fu_816_p2;
wire   [1:0] zext_ln117_fu_828_p1;
wire   [0:0] or_ln117_1798_fu_832_p2;
wire   [0:0] and_ln102_2249_fu_762_p2;
wire   [1:0] select_ln117_fu_838_p3;
wire   [1:0] select_ln117_1920_fu_852_p3;
wire   [0:0] or_ln117_1799_fu_846_p2;
wire   [2:0] zext_ln117_214_fu_860_p1;
wire   [0:0] or_ln117_1800_fu_864_p2;
wire   [0:0] and_ln102_2251_fu_774_p2;
wire   [2:0] select_ln117_1921_fu_870_p3;
wire   [0:0] or_ln117_1801_fu_878_p2;
wire   [2:0] select_ln117_1922_fu_884_p3;
wire   [0:0] and_ln102_2252_fu_780_p2;
wire   [2:0] select_ln117_1923_fu_892_p3;
wire   [2:0] select_ln117_1924_fu_906_p3;
wire   [0:0] or_ln117_1802_fu_900_p2;
wire   [3:0] zext_ln117_215_fu_914_p1;
wire   [0:0] or_ln117_1803_fu_918_p2;
wire   [0:0] and_ln102_2254_fu_792_p2;
wire   [3:0] select_ln117_1925_fu_924_p3;
wire   [0:0] or_ln117_1804_fu_932_p2;
wire   [3:0] select_ln117_1926_fu_938_p3;
wire   [0:0] or_ln117_1805_fu_946_p2;
wire   [0:0] and_ln102_2255_fu_798_p2;
wire   [3:0] select_ln117_1927_fu_952_p3;
wire   [0:0] or_ln117_1806_fu_960_p2;
wire   [3:0] select_ln117_1928_fu_966_p3;
wire   [0:0] or_ln117_1807_fu_974_p2;
wire   [0:0] and_ln102_2257_fu_810_p2;
wire   [3:0] select_ln117_1929_fu_980_p3;
wire   [0:0] or_ln117_1808_fu_988_p2;
wire   [3:0] select_ln117_1930_fu_994_p3;
wire   [3:0] select_ln117_1931_fu_1002_p3;
wire   [0:0] xor_ln104_fu_1018_p2;
wire   [0:0] xor_ln104_946_fu_1028_p2;
wire   [0:0] and_ln102_2234_fu_1023_p2;
wire   [0:0] xor_ln104_949_fu_1044_p2;
wire   [0:0] and_ln104_373_fu_1033_p2;
wire   [0:0] xor_ln104_950_fu_1060_p2;
wire   [0:0] and_ln102_2237_fu_1039_p2;
wire   [0:0] and_ln104_376_fu_1049_p2;
wire   [0:0] and_ln102_2238_fu_1055_p2;
wire   [0:0] and_ln104_377_fu_1065_p2;
wire   [0:0] and_ln102_2243_fu_1071_p2;
wire   [0:0] xor_ln104_955_fu_1076_p2;
wire   [0:0] and_ln102_2259_fu_1116_p2;
wire   [0:0] and_ln102_2244_fu_1081_p2;
wire   [0:0] xor_ln104_956_fu_1086_p2;
wire   [0:0] and_ln102_2262_fu_1132_p2;
wire   [0:0] and_ln102_2245_fu_1091_p2;
wire   [0:0] xor_ln104_957_fu_1096_p2;
wire   [0:0] and_ln102_2265_fu_1148_p2;
wire   [0:0] and_ln102_2246_fu_1101_p2;
wire   [0:0] xor_ln104_958_fu_1106_p2;
wire   [0:0] and_ln102_2268_fu_1164_p2;
wire   [0:0] and_ln102_2258_fu_1111_p2;
wire   [0:0] or_ln117_1809_fu_1175_p2;
wire   [4:0] zext_ln117_216_fu_1180_p1;
wire   [0:0] or_ln117_1810_fu_1183_p2;
wire   [0:0] and_ln102_2260_fu_1121_p2;
wire   [4:0] select_ln117_1933_fu_1188_p3;
wire   [0:0] or_ln117_1811_fu_1196_p2;
wire   [4:0] select_ln117_1934_fu_1202_p3;
wire   [0:0] or_ln117_1812_fu_1210_p2;
wire   [0:0] and_ln102_2261_fu_1127_p2;
wire   [4:0] select_ln117_1935_fu_1215_p3;
wire   [0:0] or_ln117_1813_fu_1223_p2;
wire   [4:0] select_ln117_1936_fu_1229_p3;
wire   [0:0] or_ln117_1814_fu_1237_p2;
wire   [0:0] and_ln102_2263_fu_1137_p2;
wire   [4:0] select_ln117_1937_fu_1243_p3;
wire   [0:0] or_ln117_1815_fu_1251_p2;
wire   [4:0] select_ln117_1938_fu_1257_p3;
wire   [0:0] or_ln117_1816_fu_1265_p2;
wire   [0:0] and_ln102_2264_fu_1143_p2;
wire   [4:0] select_ln117_1939_fu_1270_p3;
wire   [0:0] or_ln117_1817_fu_1278_p2;
wire   [4:0] select_ln117_1940_fu_1284_p3;
wire   [0:0] or_ln117_1818_fu_1292_p2;
wire   [0:0] and_ln102_2266_fu_1153_p2;
wire   [4:0] select_ln117_1941_fu_1298_p3;
wire   [0:0] or_ln117_1819_fu_1306_p2;
wire   [4:0] select_ln117_1942_fu_1312_p3;
wire   [0:0] or_ln117_1820_fu_1320_p2;
wire   [0:0] and_ln102_2267_fu_1159_p2;
wire   [4:0] select_ln117_1943_fu_1326_p3;
wire   [0:0] or_ln117_1821_fu_1334_p2;
wire   [4:0] select_ln117_1944_fu_1340_p3;
wire   [0:0] or_ln117_1822_fu_1348_p2;
wire   [0:0] and_ln102_2269_fu_1169_p2;
wire   [4:0] select_ln117_1945_fu_1354_p3;
wire   [0:0] or_ln117_1823_fu_1362_p2;
wire   [4:0] select_ln117_1946_fu_1368_p3;
wire   [11:0] agg_result_fu_1384_p63;
wire   [4:0] agg_result_fu_1384_p64;
wire   [11:0] agg_result_fu_1384_p65;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to0;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
wire   [4:0] agg_result_fu_1384_p1;
wire   [4:0] agg_result_fu_1384_p3;
wire   [4:0] agg_result_fu_1384_p5;
wire   [4:0] agg_result_fu_1384_p7;
wire   [4:0] agg_result_fu_1384_p9;
wire   [4:0] agg_result_fu_1384_p11;
wire   [4:0] agg_result_fu_1384_p13;
wire   [4:0] agg_result_fu_1384_p15;
wire   [4:0] agg_result_fu_1384_p17;
wire   [4:0] agg_result_fu_1384_p19;
wire   [4:0] agg_result_fu_1384_p21;
wire   [4:0] agg_result_fu_1384_p23;
wire   [4:0] agg_result_fu_1384_p25;
wire   [4:0] agg_result_fu_1384_p27;
wire   [4:0] agg_result_fu_1384_p29;
wire   [4:0] agg_result_fu_1384_p31;
wire  signed [4:0] agg_result_fu_1384_p33;
wire  signed [4:0] agg_result_fu_1384_p35;
wire  signed [4:0] agg_result_fu_1384_p37;
wire  signed [4:0] agg_result_fu_1384_p39;
wire  signed [4:0] agg_result_fu_1384_p41;
wire  signed [4:0] agg_result_fu_1384_p43;
wire  signed [4:0] agg_result_fu_1384_p45;
wire  signed [4:0] agg_result_fu_1384_p47;
wire  signed [4:0] agg_result_fu_1384_p49;
wire  signed [4:0] agg_result_fu_1384_p51;
wire  signed [4:0] agg_result_fu_1384_p53;
wire  signed [4:0] agg_result_fu_1384_p55;
wire  signed [4:0] agg_result_fu_1384_p57;
wire  signed [4:0] agg_result_fu_1384_p59;
wire  signed [4:0] agg_result_fu_1384_p61;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

(* dissolve_hierarchy = "yes" *) my_prj_sparsemux_63_5_12_1_1_x6 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 5'h0 ),
    .din0_WIDTH( 12 ),
    .CASE1( 5'h1 ),
    .din1_WIDTH( 12 ),
    .CASE2( 5'h2 ),
    .din2_WIDTH( 12 ),
    .CASE3( 5'h3 ),
    .din3_WIDTH( 12 ),
    .CASE4( 5'h4 ),
    .din4_WIDTH( 12 ),
    .CASE5( 5'h5 ),
    .din5_WIDTH( 12 ),
    .CASE6( 5'h6 ),
    .din6_WIDTH( 12 ),
    .CASE7( 5'h7 ),
    .din7_WIDTH( 12 ),
    .CASE8( 5'h8 ),
    .din8_WIDTH( 12 ),
    .CASE9( 5'h9 ),
    .din9_WIDTH( 12 ),
    .CASE10( 5'hA ),
    .din10_WIDTH( 12 ),
    .CASE11( 5'hB ),
    .din11_WIDTH( 12 ),
    .CASE12( 5'hC ),
    .din12_WIDTH( 12 ),
    .CASE13( 5'hD ),
    .din13_WIDTH( 12 ),
    .CASE14( 5'hE ),
    .din14_WIDTH( 12 ),
    .CASE15( 5'hF ),
    .din15_WIDTH( 12 ),
    .CASE16( 5'h10 ),
    .din16_WIDTH( 12 ),
    .CASE17( 5'h11 ),
    .din17_WIDTH( 12 ),
    .CASE18( 5'h12 ),
    .din18_WIDTH( 12 ),
    .CASE19( 5'h13 ),
    .din19_WIDTH( 12 ),
    .CASE20( 5'h14 ),
    .din20_WIDTH( 12 ),
    .CASE21( 5'h15 ),
    .din21_WIDTH( 12 ),
    .CASE22( 5'h16 ),
    .din22_WIDTH( 12 ),
    .CASE23( 5'h17 ),
    .din23_WIDTH( 12 ),
    .CASE24( 5'h18 ),
    .din24_WIDTH( 12 ),
    .CASE25( 5'h19 ),
    .din25_WIDTH( 12 ),
    .CASE26( 5'h1A ),
    .din26_WIDTH( 12 ),
    .CASE27( 5'h1B ),
    .din27_WIDTH( 12 ),
    .CASE28( 5'h1C ),
    .din28_WIDTH( 12 ),
    .CASE29( 5'h1D ),
    .din29_WIDTH( 12 ),
    .CASE30( 5'h1E ),
    .din30_WIDTH( 12 ),
    .def_WIDTH( 12 ),
    .sel_WIDTH( 5 ),
    .dout_WIDTH( 12 ))
sparsemux_63_5_12_1_1_x6_U2514(
    .din0(12'd136),
    .din1(12'd620),
    .din2(12'd3940),
    .din3(12'd32),
    .din4(12'd813),
    .din5(12'd3622),
    .din6(12'd3056),
    .din7(12'd3195),
    .din8(12'd3795),
    .din9(12'd1096),
    .din10(12'd3711),
    .din11(12'd3461),
    .din12(12'd80),
    .din13(12'd907),
    .din14(12'd147),
    .din15(12'd1644),
    .din16(12'd3951),
    .din17(12'd3814),
    .din18(12'd3375),
    .din19(12'd247),
    .din20(12'd1185),
    .din21(12'd3628),
    .din22(12'd319),
    .din23(12'd3931),
    .din24(12'd746),
    .din25(12'd3926),
    .din26(12'd171),
    .din27(12'd787),
    .din28(12'd3954),
    .din29(12'd206),
    .din30(12'd4091),
    .def(agg_result_fu_1384_p63),
    .sel(agg_result_fu_1384_p64),
    .dout(agg_result_fu_1384_p65)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln86_1976_reg_1525 <= icmp_ln86_1976_fu_448_p2;
        icmp_ln86_1979_reg_1531 <= icmp_ln86_1979_fu_466_p2;
        icmp_ln86_1980_reg_1537 <= icmp_ln86_1980_fu_472_p2;
        icmp_ln86_1985_reg_1543 <= icmp_ln86_1985_fu_502_p2;
        icmp_ln86_1986_reg_1549 <= icmp_ln86_1986_fu_508_p2;
        icmp_ln86_1987_reg_1561 <= icmp_ln86_1987_fu_522_p2;
        icmp_ln86_1995_reg_1567 <= icmp_ln86_1995_fu_590_p2;
        icmp_ln86_1996_reg_1572 <= icmp_ln86_1996_fu_596_p2;
        icmp_ln86_1997_reg_1577 <= icmp_ln86_1997_fu_602_p2;
        icmp_ln86_1998_reg_1582 <= icmp_ln86_1998_fu_618_p2;
        icmp_ln86_1999_reg_1587 <= icmp_ln86_1999_fu_624_p2;
        icmp_ln86_2000_reg_1592 <= icmp_ln86_2000_fu_630_p2;
        icmp_ln86_2001_reg_1597 <= icmp_ln86_2001_fu_636_p2;
        icmp_ln86_2002_reg_1602 <= icmp_ln86_2002_fu_642_p2;
        icmp_ln86_reg_1516 <= icmp_ln86_fu_436_p2;
        select_ln117_1932_reg_1607 <= select_ln117_1932_fu_1010_p3;
        tmp_reg_1555 <= x_51_val[32'd17];
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_idle_pp0_0to0 == 1'b1) & (ap_start == 1'b0))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign agg_result_fu_1384_p63 = 'bx;

assign agg_result_fu_1384_p64 = ((or_ln117_1823_fu_1362_p2[0:0] == 1'b1) ? select_ln117_1946_fu_1368_p3 : 5'd30);

assign and_ln102_2234_fu_1023_p2 = (xor_ln104_fu_1018_p2 & icmp_ln86_1976_reg_1525);

assign and_ln102_2235_fu_666_p2 = (icmp_ln86_1977_fu_454_p2 & and_ln102_fu_648_p2);

assign and_ln102_2236_fu_684_p2 = (icmp_ln86_1978_fu_460_p2 & and_ln104_fu_660_p2);

assign and_ln102_2237_fu_1039_p2 = (icmp_ln86_1979_reg_1531 & and_ln102_2234_fu_1023_p2);

assign and_ln102_2238_fu_1055_p2 = (icmp_ln86_1980_reg_1537 & and_ln104_373_fu_1033_p2);

assign and_ln102_2239_fu_702_p2 = (icmp_ln86_1981_fu_478_p2 & and_ln102_2235_fu_666_p2);

assign and_ln102_2240_fu_714_p2 = (icmp_ln86_1982_fu_484_p2 & and_ln104_374_fu_678_p2);

assign and_ln102_2241_fu_726_p2 = (icmp_ln86_1983_fu_490_p2 & and_ln102_2236_fu_684_p2);

assign and_ln102_2242_fu_738_p2 = (icmp_ln86_1984_fu_496_p2 & and_ln104_375_fu_696_p2);

assign and_ln102_2243_fu_1071_p2 = (icmp_ln86_1985_reg_1543 & and_ln102_2237_fu_1039_p2);

assign and_ln102_2244_fu_1081_p2 = (icmp_ln86_1986_reg_1549 & and_ln104_376_fu_1049_p2);

assign and_ln102_2245_fu_1091_p2 = (tmp_reg_1555 & and_ln102_2238_fu_1055_p2);

assign and_ln102_2246_fu_1101_p2 = (icmp_ln86_1987_reg_1561 & and_ln104_377_fu_1065_p2);

assign and_ln102_2247_fu_750_p2 = (icmp_ln86_1988_fu_528_p2 & and_ln102_2239_fu_702_p2);

assign and_ln102_2248_fu_756_p2 = (xor_ln104_951_fu_708_p2 & icmp_ln86_1989_fu_534_p2);

assign and_ln102_2249_fu_762_p2 = (and_ln102_2248_fu_756_p2 & and_ln102_2235_fu_666_p2);

assign and_ln102_2250_fu_768_p2 = (xor_ln104_952_fu_720_p2 & icmp_ln86_1990_fu_540_p2);

assign and_ln102_2251_fu_774_p2 = (and_ln104_374_fu_678_p2 & and_ln102_2250_fu_768_p2);

assign and_ln102_2252_fu_780_p2 = (icmp_ln86_1991_fu_546_p2 & and_ln102_2241_fu_726_p2);

assign and_ln102_2253_fu_786_p2 = (xor_ln104_953_fu_732_p2 & icmp_ln86_1992_fu_562_p2);

assign and_ln102_2254_fu_792_p2 = (and_ln102_2253_fu_786_p2 & and_ln102_2236_fu_684_p2);

assign and_ln102_2255_fu_798_p2 = (icmp_ln86_1993_fu_568_p2 & and_ln102_2242_fu_738_p2);

assign and_ln102_2256_fu_804_p2 = (xor_ln104_954_fu_744_p2 & icmp_ln86_1994_fu_584_p2);

assign and_ln102_2257_fu_810_p2 = (and_ln104_375_fu_696_p2 & and_ln102_2256_fu_804_p2);

assign and_ln102_2258_fu_1111_p2 = (icmp_ln86_1995_reg_1567 & and_ln102_2243_fu_1071_p2);

assign and_ln102_2259_fu_1116_p2 = (xor_ln104_955_fu_1076_p2 & icmp_ln86_1996_reg_1572);

assign and_ln102_2260_fu_1121_p2 = (and_ln102_2259_fu_1116_p2 & and_ln102_2237_fu_1039_p2);

assign and_ln102_2261_fu_1127_p2 = (icmp_ln86_1997_reg_1577 & and_ln102_2244_fu_1081_p2);

assign and_ln102_2262_fu_1132_p2 = (xor_ln104_956_fu_1086_p2 & icmp_ln86_1998_reg_1582);

assign and_ln102_2263_fu_1137_p2 = (and_ln104_376_fu_1049_p2 & and_ln102_2262_fu_1132_p2);

assign and_ln102_2264_fu_1143_p2 = (icmp_ln86_1999_reg_1587 & and_ln102_2245_fu_1091_p2);

assign and_ln102_2265_fu_1148_p2 = (xor_ln104_957_fu_1096_p2 & icmp_ln86_2000_reg_1592);

assign and_ln102_2266_fu_1153_p2 = (and_ln102_2265_fu_1148_p2 & and_ln102_2238_fu_1055_p2);

assign and_ln102_2267_fu_1159_p2 = (icmp_ln86_2001_reg_1597 & and_ln102_2246_fu_1101_p2);

assign and_ln102_2268_fu_1164_p2 = (xor_ln104_958_fu_1106_p2 & icmp_ln86_2002_reg_1602);

assign and_ln102_2269_fu_1169_p2 = (and_ln104_377_fu_1065_p2 & and_ln102_2268_fu_1164_p2);

assign and_ln102_fu_648_p2 = (icmp_ln86_fu_436_p2 & icmp_ln86_1975_fu_442_p2);

assign and_ln104_373_fu_1033_p2 = (xor_ln104_fu_1018_p2 & xor_ln104_946_fu_1028_p2);

assign and_ln104_374_fu_678_p2 = (xor_ln104_947_fu_672_p2 & and_ln102_fu_648_p2);

assign and_ln104_375_fu_696_p2 = (xor_ln104_948_fu_690_p2 & and_ln104_fu_660_p2);

assign and_ln104_376_fu_1049_p2 = (xor_ln104_949_fu_1044_p2 & and_ln102_2234_fu_1023_p2);

assign and_ln104_377_fu_1065_p2 = (xor_ln104_950_fu_1060_p2 & and_ln104_373_fu_1033_p2);

assign and_ln104_fu_660_p2 = (xor_ln104_945_fu_654_p2 & icmp_ln86_fu_436_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_return = agg_result_fu_1384_p65;

assign icmp_ln86_1975_fu_442_p2 = (($signed(x_4_val) < $signed(18'd48789)) ? 1'b1 : 1'b0);

assign icmp_ln86_1976_fu_448_p2 = (($signed(x_25_val) < $signed(18'd39)) ? 1'b1 : 1'b0);

assign icmp_ln86_1977_fu_454_p2 = (($signed(x_4_val) < $signed(18'd48182)) ? 1'b1 : 1'b0);

assign icmp_ln86_1978_fu_460_p2 = (($signed(x_19_val) < $signed(18'd122)) ? 1'b1 : 1'b0);

assign icmp_ln86_1979_fu_466_p2 = (($signed(x_21_val) < $signed(18'd94)) ? 1'b1 : 1'b0);

assign icmp_ln86_1980_fu_472_p2 = (($signed(x_24_val) < $signed(18'd162)) ? 1'b1 : 1'b0);

assign icmp_ln86_1981_fu_478_p2 = (($signed(x_43_val) < $signed(18'd39)) ? 1'b1 : 1'b0);

assign icmp_ln86_1982_fu_484_p2 = (($signed(x_18_val) < $signed(18'd762)) ? 1'b1 : 1'b0);

assign icmp_ln86_1983_fu_490_p2 = (($signed(x_24_val) < $signed(18'd125)) ? 1'b1 : 1'b0);

assign icmp_ln86_1984_fu_496_p2 = (($signed(x_40_val) < $signed(18'd60)) ? 1'b1 : 1'b0);

assign icmp_ln86_1985_fu_502_p2 = (($signed(x_50_val) < $signed(18'd80440)) ? 1'b1 : 1'b0);

assign icmp_ln86_1986_fu_508_p2 = (($signed(x_21_val) < $signed(18'd95)) ? 1'b1 : 1'b0);

assign icmp_ln86_1987_fu_522_p2 = (($signed(x_39_val) < $signed(18'd654)) ? 1'b1 : 1'b0);

assign icmp_ln86_1988_fu_528_p2 = (($signed(x_9_val) < $signed(18'd176)) ? 1'b1 : 1'b0);

assign icmp_ln86_1989_fu_534_p2 = (($signed(x_11_val) < $signed(18'd968)) ? 1'b1 : 1'b0);

assign icmp_ln86_1990_fu_540_p2 = (($signed(x_14_val) < $signed(18'd39)) ? 1'b1 : 1'b0);

assign icmp_ln86_1991_fu_546_p2 = (($signed(x_33_val) < $signed(18'd784)) ? 1'b1 : 1'b0);

assign icmp_ln86_1992_fu_562_p2 = (($signed(tmp_35_fu_552_p4) < $signed(11'd1)) ? 1'b1 : 1'b0);

assign icmp_ln86_1993_fu_568_p2 = (($signed(x_52_val) < $signed(18'd41473)) ? 1'b1 : 1'b0);

assign icmp_ln86_1994_fu_584_p2 = (($signed(tmp_36_fu_574_p4) < $signed(14'd1)) ? 1'b1 : 1'b0);

assign icmp_ln86_1995_fu_590_p2 = (($signed(x_22_val) < $signed(18'd35)) ? 1'b1 : 1'b0);

assign icmp_ln86_1996_fu_596_p2 = (($signed(x_42_val) < $signed(18'd89)) ? 1'b1 : 1'b0);

assign icmp_ln86_1997_fu_602_p2 = (($signed(x_6_val) < $signed(18'd9319)) ? 1'b1 : 1'b0);

assign icmp_ln86_1998_fu_618_p2 = (($signed(tmp_37_fu_608_p4) < $signed(17'd1)) ? 1'b1 : 1'b0);

assign icmp_ln86_1999_fu_624_p2 = (($signed(x_6_val) < $signed(18'd6682)) ? 1'b1 : 1'b0);

assign icmp_ln86_2000_fu_630_p2 = (($signed(x_34_val) < $signed(18'd445)) ? 1'b1 : 1'b0);

assign icmp_ln86_2001_fu_636_p2 = (($signed(x_16_val) < $signed(18'd27)) ? 1'b1 : 1'b0);

assign icmp_ln86_2002_fu_642_p2 = (($signed(x_40_val) < $signed(18'd203)) ? 1'b1 : 1'b0);

assign icmp_ln86_fu_436_p2 = (($signed(x_44_val) < $signed(18'd9)) ? 1'b1 : 1'b0);

assign or_ln117_1798_fu_832_p2 = (and_ln102_2240_fu_714_p2 | and_ln102_2239_fu_702_p2);

assign or_ln117_1799_fu_846_p2 = (or_ln117_1798_fu_832_p2 | and_ln102_2249_fu_762_p2);

assign or_ln117_1800_fu_864_p2 = (and_ln102_2240_fu_714_p2 | and_ln102_2235_fu_666_p2);

assign or_ln117_1801_fu_878_p2 = (or_ln117_1800_fu_864_p2 | and_ln102_2251_fu_774_p2);

assign or_ln117_1802_fu_900_p2 = (and_ln102_fu_648_p2 | and_ln102_2252_fu_780_p2);

assign or_ln117_1803_fu_918_p2 = (and_ln102_fu_648_p2 | and_ln102_2241_fu_726_p2);

assign or_ln117_1804_fu_932_p2 = (or_ln117_1803_fu_918_p2 | and_ln102_2254_fu_792_p2);

assign or_ln117_1805_fu_946_p2 = (and_ln102_fu_648_p2 | and_ln102_2236_fu_684_p2);

assign or_ln117_1806_fu_960_p2 = (or_ln117_1805_fu_946_p2 | and_ln102_2255_fu_798_p2);

assign or_ln117_1807_fu_974_p2 = (or_ln117_1805_fu_946_p2 | and_ln102_2242_fu_738_p2);

assign or_ln117_1808_fu_988_p2 = (or_ln117_1807_fu_974_p2 | and_ln102_2257_fu_810_p2);

assign or_ln117_1809_fu_1175_p2 = (icmp_ln86_reg_1516 | and_ln102_2258_fu_1111_p2);

assign or_ln117_1810_fu_1183_p2 = (icmp_ln86_reg_1516 | and_ln102_2243_fu_1071_p2);

assign or_ln117_1811_fu_1196_p2 = (or_ln117_1810_fu_1183_p2 | and_ln102_2260_fu_1121_p2);

assign or_ln117_1812_fu_1210_p2 = (icmp_ln86_reg_1516 | and_ln102_2237_fu_1039_p2);

assign or_ln117_1813_fu_1223_p2 = (or_ln117_1812_fu_1210_p2 | and_ln102_2261_fu_1127_p2);

assign or_ln117_1814_fu_1237_p2 = (or_ln117_1812_fu_1210_p2 | and_ln102_2244_fu_1081_p2);

assign or_ln117_1815_fu_1251_p2 = (or_ln117_1814_fu_1237_p2 | and_ln102_2263_fu_1137_p2);

assign or_ln117_1816_fu_1265_p2 = (icmp_ln86_reg_1516 | and_ln102_2234_fu_1023_p2);

assign or_ln117_1817_fu_1278_p2 = (or_ln117_1816_fu_1265_p2 | and_ln102_2264_fu_1143_p2);

assign or_ln117_1818_fu_1292_p2 = (or_ln117_1816_fu_1265_p2 | and_ln102_2245_fu_1091_p2);

assign or_ln117_1819_fu_1306_p2 = (or_ln117_1818_fu_1292_p2 | and_ln102_2266_fu_1153_p2);

assign or_ln117_1820_fu_1320_p2 = (or_ln117_1816_fu_1265_p2 | and_ln102_2238_fu_1055_p2);

assign or_ln117_1821_fu_1334_p2 = (or_ln117_1820_fu_1320_p2 | and_ln102_2267_fu_1159_p2);

assign or_ln117_1822_fu_1348_p2 = (or_ln117_1820_fu_1320_p2 | and_ln102_2246_fu_1101_p2);

assign or_ln117_1823_fu_1362_p2 = (or_ln117_1822_fu_1348_p2 | and_ln102_2269_fu_1169_p2);

assign or_ln117_fu_816_p2 = (and_ln102_2247_fu_750_p2 | and_ln102_2240_fu_714_p2);

assign select_ln117_1920_fu_852_p3 = ((or_ln117_1798_fu_832_p2[0:0] == 1'b1) ? select_ln117_fu_838_p3 : 2'd3);

assign select_ln117_1921_fu_870_p3 = ((or_ln117_1799_fu_846_p2[0:0] == 1'b1) ? zext_ln117_214_fu_860_p1 : 3'd4);

assign select_ln117_1922_fu_884_p3 = ((or_ln117_1800_fu_864_p2[0:0] == 1'b1) ? select_ln117_1921_fu_870_p3 : 3'd5);

assign select_ln117_1923_fu_892_p3 = ((or_ln117_1801_fu_878_p2[0:0] == 1'b1) ? select_ln117_1922_fu_884_p3 : 3'd6);

assign select_ln117_1924_fu_906_p3 = ((and_ln102_fu_648_p2[0:0] == 1'b1) ? select_ln117_1923_fu_892_p3 : 3'd7);

assign select_ln117_1925_fu_924_p3 = ((or_ln117_1802_fu_900_p2[0:0] == 1'b1) ? zext_ln117_215_fu_914_p1 : 4'd8);

assign select_ln117_1926_fu_938_p3 = ((or_ln117_1803_fu_918_p2[0:0] == 1'b1) ? select_ln117_1925_fu_924_p3 : 4'd9);

assign select_ln117_1927_fu_952_p3 = ((or_ln117_1804_fu_932_p2[0:0] == 1'b1) ? select_ln117_1926_fu_938_p3 : 4'd10);

assign select_ln117_1928_fu_966_p3 = ((or_ln117_1805_fu_946_p2[0:0] == 1'b1) ? select_ln117_1927_fu_952_p3 : 4'd11);

assign select_ln117_1929_fu_980_p3 = ((or_ln117_1806_fu_960_p2[0:0] == 1'b1) ? select_ln117_1928_fu_966_p3 : 4'd12);

assign select_ln117_1930_fu_994_p3 = ((or_ln117_1807_fu_974_p2[0:0] == 1'b1) ? select_ln117_1929_fu_980_p3 : 4'd13);

assign select_ln117_1931_fu_1002_p3 = ((or_ln117_1808_fu_988_p2[0:0] == 1'b1) ? select_ln117_1930_fu_994_p3 : 4'd14);

assign select_ln117_1932_fu_1010_p3 = ((icmp_ln86_fu_436_p2[0:0] == 1'b1) ? select_ln117_1931_fu_1002_p3 : 4'd15);

assign select_ln117_1933_fu_1188_p3 = ((or_ln117_1809_fu_1175_p2[0:0] == 1'b1) ? zext_ln117_216_fu_1180_p1 : 5'd16);

assign select_ln117_1934_fu_1202_p3 = ((or_ln117_1810_fu_1183_p2[0:0] == 1'b1) ? select_ln117_1933_fu_1188_p3 : 5'd17);

assign select_ln117_1935_fu_1215_p3 = ((or_ln117_1811_fu_1196_p2[0:0] == 1'b1) ? select_ln117_1934_fu_1202_p3 : 5'd18);

assign select_ln117_1936_fu_1229_p3 = ((or_ln117_1812_fu_1210_p2[0:0] == 1'b1) ? select_ln117_1935_fu_1215_p3 : 5'd19);

assign select_ln117_1937_fu_1243_p3 = ((or_ln117_1813_fu_1223_p2[0:0] == 1'b1) ? select_ln117_1936_fu_1229_p3 : 5'd20);

assign select_ln117_1938_fu_1257_p3 = ((or_ln117_1814_fu_1237_p2[0:0] == 1'b1) ? select_ln117_1937_fu_1243_p3 : 5'd21);

assign select_ln117_1939_fu_1270_p3 = ((or_ln117_1815_fu_1251_p2[0:0] == 1'b1) ? select_ln117_1938_fu_1257_p3 : 5'd22);

assign select_ln117_1940_fu_1284_p3 = ((or_ln117_1816_fu_1265_p2[0:0] == 1'b1) ? select_ln117_1939_fu_1270_p3 : 5'd23);

assign select_ln117_1941_fu_1298_p3 = ((or_ln117_1817_fu_1278_p2[0:0] == 1'b1) ? select_ln117_1940_fu_1284_p3 : 5'd24);

assign select_ln117_1942_fu_1312_p3 = ((or_ln117_1818_fu_1292_p2[0:0] == 1'b1) ? select_ln117_1941_fu_1298_p3 : 5'd25);

assign select_ln117_1943_fu_1326_p3 = ((or_ln117_1819_fu_1306_p2[0:0] == 1'b1) ? select_ln117_1942_fu_1312_p3 : 5'd26);

assign select_ln117_1944_fu_1340_p3 = ((or_ln117_1820_fu_1320_p2[0:0] == 1'b1) ? select_ln117_1943_fu_1326_p3 : 5'd27);

assign select_ln117_1945_fu_1354_p3 = ((or_ln117_1821_fu_1334_p2[0:0] == 1'b1) ? select_ln117_1944_fu_1340_p3 : 5'd28);

assign select_ln117_1946_fu_1368_p3 = ((or_ln117_1822_fu_1348_p2[0:0] == 1'b1) ? select_ln117_1945_fu_1354_p3 : 5'd29);

assign select_ln117_fu_838_p3 = ((or_ln117_fu_816_p2[0:0] == 1'b1) ? zext_ln117_fu_828_p1 : 2'd2);

assign tmp_35_fu_552_p4 = {{x_45_val[17:7]}};

assign tmp_36_fu_574_p4 = {{x_37_val[17:4]}};

assign tmp_37_fu_608_p4 = {{x_17_val[17:1]}};

assign xor_ln104_945_fu_654_p2 = (icmp_ln86_1975_fu_442_p2 ^ 1'd1);

assign xor_ln104_946_fu_1028_p2 = (icmp_ln86_1976_reg_1525 ^ 1'd1);

assign xor_ln104_947_fu_672_p2 = (icmp_ln86_1977_fu_454_p2 ^ 1'd1);

assign xor_ln104_948_fu_690_p2 = (icmp_ln86_1978_fu_460_p2 ^ 1'd1);

assign xor_ln104_949_fu_1044_p2 = (icmp_ln86_1979_reg_1531 ^ 1'd1);

assign xor_ln104_950_fu_1060_p2 = (icmp_ln86_1980_reg_1537 ^ 1'd1);

assign xor_ln104_951_fu_708_p2 = (icmp_ln86_1981_fu_478_p2 ^ 1'd1);

assign xor_ln104_952_fu_720_p2 = (icmp_ln86_1982_fu_484_p2 ^ 1'd1);

assign xor_ln104_953_fu_732_p2 = (icmp_ln86_1983_fu_490_p2 ^ 1'd1);

assign xor_ln104_954_fu_744_p2 = (icmp_ln86_1984_fu_496_p2 ^ 1'd1);

assign xor_ln104_955_fu_1076_p2 = (icmp_ln86_1985_reg_1543 ^ 1'd1);

assign xor_ln104_956_fu_1086_p2 = (icmp_ln86_1986_reg_1549 ^ 1'd1);

assign xor_ln104_957_fu_1096_p2 = (tmp_reg_1555 ^ 1'd1);

assign xor_ln104_958_fu_1106_p2 = (icmp_ln86_1987_reg_1561 ^ 1'd1);

assign xor_ln104_fu_1018_p2 = (icmp_ln86_reg_1516 ^ 1'd1);

assign xor_ln117_fu_822_p2 = (1'd1 ^ and_ln102_2240_fu_714_p2);

assign zext_ln117_214_fu_860_p1 = select_ln117_1920_fu_852_p3;

assign zext_ln117_215_fu_914_p1 = select_ln117_1924_fu_906_p3;

assign zext_ln117_216_fu_1180_p1 = select_ln117_1932_reg_1607;

assign zext_ln117_fu_828_p1 = xor_ln117_fu_822_p2;

endmodule //my_prj_decision_function_101

// ==============================================================
// Generated by Vitis HLS v2024.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module myproject_relu_ap_fixed_17_15_5_3_0_ap_ufixed_13_11_5_3_0_ReLU_config16_s (
        ap_ready,
        data_9_val,
        data_11_val,
        data_14_val,
        data_16_val,
        data_21_val,
        data_25_val,
        data_28_val,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5,
        ap_return_6,
        ap_rst
);


output   ap_ready;
input  [16:0] data_9_val;
input  [16:0] data_11_val;
input  [16:0] data_14_val;
input  [16:0] data_16_val;
input  [16:0] data_21_val;
input  [16:0] data_25_val;
input  [16:0] data_28_val;
output  [12:0] ap_return_0;
output  [12:0] ap_return_1;
output  [12:0] ap_return_2;
output  [12:0] ap_return_3;
output  [12:0] ap_return_4;
output  [12:0] ap_return_5;
output  [12:0] ap_return_6;
input   ap_rst;

wire   [0:0] icmp_ln45_fu_72_p2;
wire   [12:0] trunc_ln46_fu_78_p1;
wire   [0:0] icmp_ln45_1_fu_90_p2;
wire   [12:0] trunc_ln46_1_fu_96_p1;
wire   [0:0] icmp_ln45_2_fu_108_p2;
wire   [12:0] trunc_ln46_2_fu_114_p1;
wire   [0:0] icmp_ln45_3_fu_126_p2;
wire   [12:0] trunc_ln46_3_fu_132_p1;
wire   [0:0] icmp_ln45_4_fu_144_p2;
wire   [12:0] trunc_ln46_4_fu_150_p1;
wire   [0:0] icmp_ln45_5_fu_162_p2;
wire   [12:0] trunc_ln46_5_fu_168_p1;
wire   [0:0] icmp_ln45_6_fu_180_p2;
wire   [12:0] trunc_ln46_6_fu_186_p1;
wire   [12:0] select_ln45_fu_82_p3;
wire   [12:0] select_ln45_1_fu_100_p3;
wire   [12:0] select_ln45_2_fu_118_p3;
wire   [12:0] select_ln45_3_fu_136_p3;
wire   [12:0] select_ln45_4_fu_154_p3;
wire   [12:0] select_ln45_5_fu_172_p3;
wire   [12:0] select_ln45_6_fu_190_p3;

assign ap_ready = 1'b1;

assign select_ln45_1_fu_100_p3 = ((icmp_ln45_1_fu_90_p2[0:0] == 1'b1) ? trunc_ln46_1_fu_96_p1 : 13'd0);

assign select_ln45_2_fu_118_p3 = ((icmp_ln45_2_fu_108_p2[0:0] == 1'b1) ? trunc_ln46_2_fu_114_p1 : 13'd0);

assign select_ln45_3_fu_136_p3 = ((icmp_ln45_3_fu_126_p2[0:0] == 1'b1) ? trunc_ln46_3_fu_132_p1 : 13'd0);

assign select_ln45_4_fu_154_p3 = ((icmp_ln45_4_fu_144_p2[0:0] == 1'b1) ? trunc_ln46_4_fu_150_p1 : 13'd0);

assign select_ln45_5_fu_172_p3 = ((icmp_ln45_5_fu_162_p2[0:0] == 1'b1) ? trunc_ln46_5_fu_168_p1 : 13'd0);

assign select_ln45_6_fu_190_p3 = ((icmp_ln45_6_fu_180_p2[0:0] == 1'b1) ? trunc_ln46_6_fu_186_p1 : 13'd0);

assign select_ln45_fu_82_p3 = ((icmp_ln45_fu_72_p2[0:0] == 1'b1) ? trunc_ln46_fu_78_p1 : 13'd0);

assign trunc_ln46_1_fu_96_p1 = data_11_val[12:0];

assign trunc_ln46_2_fu_114_p1 = data_14_val[12:0];

assign trunc_ln46_3_fu_132_p1 = data_16_val[12:0];

assign trunc_ln46_4_fu_150_p1 = data_21_val[12:0];

assign trunc_ln46_5_fu_168_p1 = data_25_val[12:0];

assign trunc_ln46_6_fu_186_p1 = data_28_val[12:0];

assign trunc_ln46_fu_78_p1 = data_9_val[12:0];

assign ap_return_0 = select_ln45_fu_82_p3;

assign ap_return_1 = select_ln45_1_fu_100_p3;

assign ap_return_2 = select_ln45_2_fu_118_p3;

assign ap_return_3 = select_ln45_3_fu_136_p3;

assign ap_return_4 = select_ln45_4_fu_154_p3;

assign ap_return_5 = select_ln45_5_fu_172_p3;

assign ap_return_6 = select_ln45_6_fu_190_p3;

assign icmp_ln45_1_fu_90_p2 = (($signed(data_11_val) > $signed(17'd0)) ? 1'b1 : 1'b0);

assign icmp_ln45_2_fu_108_p2 = (($signed(data_14_val) > $signed(17'd0)) ? 1'b1 : 1'b0);

assign icmp_ln45_3_fu_126_p2 = (($signed(data_16_val) > $signed(17'd0)) ? 1'b1 : 1'b0);

assign icmp_ln45_4_fu_144_p2 = (($signed(data_21_val) > $signed(17'd0)) ? 1'b1 : 1'b0);

assign icmp_ln45_5_fu_162_p2 = (($signed(data_25_val) > $signed(17'd0)) ? 1'b1 : 1'b0);

assign icmp_ln45_6_fu_180_p2 = (($signed(data_28_val) > $signed(17'd0)) ? 1'b1 : 1'b0);

assign icmp_ln45_fu_72_p2 = (($signed(data_9_val) > $signed(17'd0)) ? 1'b1 : 1'b0);

endmodule //myproject_relu_ap_fixed_17_15_5_3_0_ap_ufixed_13_11_5_3_0_ReLU_config16_s

// ==============================================================
// Generated by Vitis HLS v2024.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module conifer_jettag_accelerator_decision_function_95 (
        ap_clk,
        ap_rst,
        p_read1,
        p_read2,
        p_read3,
        p_read4,
        p_read5,
        p_read6,
        p_read7,
        p_read8,
        p_read9,
        p_read10,
        p_read11,
        p_read12,
        p_read13,
        p_read14,
        ap_return,
        ap_ce
);


input   ap_clk;
input   ap_rst;
input  [17:0] p_read1;
input  [17:0] p_read2;
input  [17:0] p_read3;
input  [17:0] p_read4;
input  [17:0] p_read5;
input  [17:0] p_read6;
input  [17:0] p_read7;
input  [17:0] p_read8;
input  [17:0] p_read9;
input  [17:0] p_read10;
input  [17:0] p_read11;
input  [17:0] p_read12;
input  [17:0] p_read13;
input  [17:0] p_read14;
output  [11:0] ap_return;
input   ap_ce;

wire   [0:0] icmp_ln86_fu_262_p2;
reg   [0:0] icmp_ln86_reg_822;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln86_113_fu_268_p2;
reg   [0:0] icmp_ln86_113_reg_830;
wire   [0:0] icmp_ln86_114_fu_274_p2;
reg   [0:0] icmp_ln86_114_reg_836;
wire   [0:0] icmp_ln86_115_fu_280_p2;
reg   [0:0] icmp_ln86_115_reg_842;
reg   [0:0] icmp_ln86_115_reg_842_pp0_iter1_reg;
wire   [0:0] icmp_ln86_116_fu_286_p2;
reg   [0:0] icmp_ln86_116_reg_847;
reg   [0:0] icmp_ln86_116_reg_847_pp0_iter1_reg;
wire   [0:0] icmp_ln86_117_fu_292_p2;
reg   [0:0] icmp_ln86_117_reg_853;
wire   [0:0] icmp_ln86_118_fu_298_p2;
reg   [0:0] icmp_ln86_118_reg_859;
reg   [0:0] icmp_ln86_118_reg_859_pp0_iter1_reg;
wire   [0:0] icmp_ln86_119_fu_304_p2;
reg   [0:0] icmp_ln86_119_reg_865;
reg   [0:0] icmp_ln86_119_reg_865_pp0_iter1_reg;
wire   [0:0] icmp_ln86_120_fu_310_p2;
reg   [0:0] icmp_ln86_120_reg_870;
reg   [0:0] icmp_ln86_120_reg_870_pp0_iter1_reg;
reg   [0:0] icmp_ln86_120_reg_870_pp0_iter2_reg;
wire   [0:0] icmp_ln86_121_fu_316_p2;
reg   [0:0] icmp_ln86_121_reg_876;
reg   [0:0] icmp_ln86_121_reg_876_pp0_iter1_reg;
reg   [0:0] icmp_ln86_121_reg_876_pp0_iter2_reg;
wire   [0:0] icmp_ln86_122_fu_322_p2;
reg   [0:0] icmp_ln86_122_reg_882;
reg   [0:0] icmp_ln86_122_reg_882_pp0_iter1_reg;
reg   [0:0] icmp_ln86_122_reg_882_pp0_iter2_reg;
reg   [0:0] icmp_ln86_122_reg_882_pp0_iter3_reg;
reg   [0:0] icmp_ln86_122_reg_882_pp0_iter4_reg;
wire   [0:0] icmp_ln86_123_fu_328_p2;
reg   [0:0] icmp_ln86_123_reg_888;
reg   [0:0] icmp_ln86_123_reg_888_pp0_iter1_reg;
wire   [0:0] icmp_ln86_124_fu_334_p2;
reg   [0:0] icmp_ln86_124_reg_893;
reg   [0:0] icmp_ln86_124_reg_893_pp0_iter1_reg;
reg   [0:0] icmp_ln86_124_reg_893_pp0_iter2_reg;
wire   [0:0] icmp_ln86_125_fu_340_p2;
reg   [0:0] icmp_ln86_125_reg_898;
reg   [0:0] icmp_ln86_125_reg_898_pp0_iter1_reg;
reg   [0:0] icmp_ln86_125_reg_898_pp0_iter2_reg;
wire   [0:0] icmp_ln86_126_fu_346_p2;
reg   [0:0] icmp_ln86_126_reg_903;
reg   [0:0] icmp_ln86_126_reg_903_pp0_iter1_reg;
reg   [0:0] icmp_ln86_126_reg_903_pp0_iter2_reg;
wire   [0:0] icmp_ln86_127_fu_352_p2;
reg   [0:0] icmp_ln86_127_reg_908;
reg   [0:0] icmp_ln86_127_reg_908_pp0_iter1_reg;
reg   [0:0] icmp_ln86_127_reg_908_pp0_iter2_reg;
reg   [0:0] icmp_ln86_127_reg_908_pp0_iter3_reg;
wire   [0:0] icmp_ln86_128_fu_358_p2;
reg   [0:0] icmp_ln86_128_reg_913;
reg   [0:0] icmp_ln86_128_reg_913_pp0_iter1_reg;
reg   [0:0] icmp_ln86_128_reg_913_pp0_iter2_reg;
reg   [0:0] icmp_ln86_128_reg_913_pp0_iter3_reg;
reg   [0:0] icmp_ln86_128_reg_913_pp0_iter4_reg;
wire   [0:0] xor_ln104_fu_364_p2;
reg   [0:0] xor_ln104_reg_918;
wire   [0:0] and_ln102_fu_370_p2;
reg   [0:0] and_ln102_reg_924;
wire   [0:0] and_ln104_fu_379_p2;
reg   [0:0] and_ln104_reg_930;
wire   [0:0] and_ln104_22_fu_393_p2;
reg   [0:0] and_ln104_22_reg_935;
wire   [0:0] and_ln102_141_fu_409_p2;
reg   [0:0] and_ln102_141_reg_941;
reg   [0:0] and_ln102_141_reg_941_pp0_iter2_reg;
wire   [0:0] or_ln117_fu_425_p2;
reg   [0:0] or_ln117_reg_947;
wire   [0:0] or_ln117_109_fu_431_p2;
reg   [0:0] or_ln117_109_reg_952;
wire   [0:0] or_ln117_111_fu_437_p2;
reg   [0:0] or_ln117_111_reg_958;
wire   [0:0] or_ln117_115_fu_442_p2;
reg   [0:0] or_ln117_115_reg_965;
reg   [0:0] or_ln117_115_reg_965_pp0_iter2_reg;
wire   [0:0] and_ln102_142_fu_451_p2;
reg   [0:0] and_ln102_142_reg_973;
wire   [0:0] and_ln104_25_fu_460_p2;
reg   [0:0] and_ln104_25_reg_979;
reg   [0:0] and_ln104_25_reg_979_pp0_iter3_reg;
reg   [0:0] and_ln104_25_reg_979_pp0_iter4_reg;
wire   [0:0] and_ln102_146_fu_478_p2;
reg   [0:0] and_ln102_146_reg_985;
wire   [0:0] or_ln117_113_fu_548_p2;
reg   [0:0] or_ln117_113_reg_991;
wire   [3:0] select_ln117_116_fu_565_p3;
reg   [3:0] select_ln117_116_reg_996;
wire   [0:0] or_ln117_119_fu_657_p2;
reg   [0:0] or_ln117_119_reg_1001;
wire   [3:0] select_ln117_122_fu_669_p3;
reg   [3:0] select_ln117_122_reg_1007;
wire   [0:0] or_ln117_121_fu_691_p2;
reg   [0:0] or_ln117_121_reg_1012;
wire   [4:0] select_ln117_124_fu_707_p3;
reg   [4:0] select_ln117_124_reg_1017;
wire    ap_block_pp0_stage0;
wire   [0:0] xor_ln104_54_fu_374_p2;
wire   [0:0] xor_ln104_55_fu_388_p2;
wire   [0:0] xor_ln104_56_fu_398_p2;
wire   [0:0] and_ln102_139_fu_384_p2;
wire   [0:0] xor_ln104_57_fu_414_p2;
wire   [0:0] and_ln104_23_fu_403_p2;
wire   [0:0] and_ln104_24_fu_419_p2;
wire   [0:0] xor_ln104_58_fu_455_p2;
wire   [0:0] and_ln102_143_fu_465_p2;
wire   [0:0] and_ln102_145_fu_474_p2;
wire   [0:0] and_ln102_140_fu_447_p2;
wire   [0:0] xor_ln117_fu_488_p2;
wire   [1:0] zext_ln117_fu_494_p1;
wire   [1:0] select_ln117_fu_498_p3;
wire   [1:0] select_ln117_111_fu_505_p3;
wire   [0:0] and_ln102_144_fu_469_p2;
wire   [2:0] zext_ln117_13_fu_512_p1;
wire   [0:0] or_ln117_110_fu_516_p2;
wire   [2:0] select_ln117_112_fu_521_p3;
wire   [0:0] and_ln102_148_fu_483_p2;
wire   [2:0] select_ln117_113_fu_528_p3;
wire   [0:0] or_ln117_112_fu_536_p2;
wire   [2:0] select_ln117_114_fu_541_p3;
wire   [2:0] select_ln117_115_fu_553_p3;
wire   [3:0] zext_ln117_14_fu_561_p1;
wire   [0:0] xor_ln104_59_fu_573_p2;
wire   [0:0] and_ln102_149_fu_583_p2;
wire   [0:0] xor_ln104_60_fu_578_p2;
wire   [0:0] and_ln102_152_fu_597_p2;
wire   [0:0] and_ln102_150_fu_588_p2;
wire   [0:0] or_ln117_114_fu_607_p2;
wire   [0:0] and_ln102_151_fu_593_p2;
wire   [3:0] select_ln117_117_fu_612_p3;
wire   [0:0] or_ln117_116_fu_619_p2;
wire   [3:0] select_ln117_118_fu_624_p3;
wire   [0:0] or_ln117_117_fu_631_p2;
wire   [0:0] and_ln102_153_fu_602_p2;
wire   [3:0] select_ln117_119_fu_635_p3;
wire   [0:0] or_ln117_118_fu_643_p2;
wire   [3:0] select_ln117_120_fu_649_p3;
wire   [3:0] select_ln117_121_fu_661_p3;
wire   [0:0] and_ln102_147_fu_677_p2;
wire   [0:0] and_ln102_154_fu_681_p2;
wire   [0:0] or_ln117_120_fu_686_p2;
wire   [3:0] select_ln117_123_fu_696_p3;
wire   [4:0] zext_ln117_15_fu_703_p1;
wire   [0:0] xor_ln104_61_fu_715_p2;
wire   [0:0] and_ln102_155_fu_720_p2;
wire   [0:0] and_ln102_156_fu_725_p2;
wire   [0:0] or_ln117_122_fu_730_p2;
wire   [11:0] agg_result_fu_742_p37;
wire   [4:0] agg_result_fu_742_p38;
wire   [11:0] agg_result_fu_742_p39;
reg   [17:0] p_read1_int_reg;
reg   [17:0] p_read2_int_reg;
reg   [17:0] p_read3_int_reg;
reg   [17:0] p_read4_int_reg;
reg   [17:0] p_read5_int_reg;
reg   [17:0] p_read6_int_reg;
reg   [17:0] p_read7_int_reg;
reg   [17:0] p_read8_int_reg;
reg   [17:0] p_read9_int_reg;
reg   [17:0] p_read10_int_reg;
reg   [17:0] p_read11_int_reg;
reg   [17:0] p_read12_int_reg;
reg   [17:0] p_read13_int_reg;
reg   [17:0] p_read14_int_reg;
wire   [4:0] agg_result_fu_742_p1;
wire   [4:0] agg_result_fu_742_p3;
wire   [4:0] agg_result_fu_742_p5;
wire   [4:0] agg_result_fu_742_p7;
wire   [4:0] agg_result_fu_742_p9;
wire   [4:0] agg_result_fu_742_p11;
wire   [4:0] agg_result_fu_742_p13;
wire   [4:0] agg_result_fu_742_p15;
wire   [4:0] agg_result_fu_742_p17;
wire   [4:0] agg_result_fu_742_p19;
wire   [4:0] agg_result_fu_742_p21;
wire   [4:0] agg_result_fu_742_p23;
wire   [4:0] agg_result_fu_742_p25;
wire   [4:0] agg_result_fu_742_p27;
wire   [4:0] agg_result_fu_742_p29;
wire   [4:0] agg_result_fu_742_p31;
wire  signed [4:0] agg_result_fu_742_p33;
wire  signed [4:0] agg_result_fu_742_p35;
wire    ap_ce_reg;

(* dissolve_hierarchy = "yes" *) conifer_jettag_accelerator_sparsemux_37_5_12_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 5'h0 ),
    .din0_WIDTH( 12 ),
    .CASE1( 5'h1 ),
    .din1_WIDTH( 12 ),
    .CASE2( 5'h2 ),
    .din2_WIDTH( 12 ),
    .CASE3( 5'h3 ),
    .din3_WIDTH( 12 ),
    .CASE4( 5'h4 ),
    .din4_WIDTH( 12 ),
    .CASE5( 5'h5 ),
    .din5_WIDTH( 12 ),
    .CASE6( 5'h6 ),
    .din6_WIDTH( 12 ),
    .CASE7( 5'h7 ),
    .din7_WIDTH( 12 ),
    .CASE8( 5'h8 ),
    .din8_WIDTH( 12 ),
    .CASE9( 5'h9 ),
    .din9_WIDTH( 12 ),
    .CASE10( 5'hA ),
    .din10_WIDTH( 12 ),
    .CASE11( 5'hB ),
    .din11_WIDTH( 12 ),
    .CASE12( 5'hC ),
    .din12_WIDTH( 12 ),
    .CASE13( 5'hD ),
    .din13_WIDTH( 12 ),
    .CASE14( 5'hE ),
    .din14_WIDTH( 12 ),
    .CASE15( 5'hF ),
    .din15_WIDTH( 12 ),
    .CASE16( 5'h10 ),
    .din16_WIDTH( 12 ),
    .CASE17( 5'h11 ),
    .din17_WIDTH( 12 ),
    .def_WIDTH( 12 ),
    .sel_WIDTH( 5 ),
    .dout_WIDTH( 12 ))
sparsemux_37_5_12_1_1_U2791(
    .din0(12'd3683),
    .din1(12'd1100),
    .din2(12'd3556),
    .din3(12'd3629),
    .din4(12'd3786),
    .din5(12'd623),
    .din6(12'd12),
    .din7(12'd1801),
    .din8(12'd247),
    .din9(12'd3762),
    .din10(12'd4092),
    .din11(12'd76),
    .din12(12'd3871),
    .din13(12'd4085),
    .din14(12'd137),
    .din15(12'd3360),
    .din16(12'd3217),
    .din17(12'd4095),
    .def(agg_result_fu_742_p37),
    .sel(agg_result_fu_742_p38),
    .dout(agg_result_fu_742_p39)
);

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce))) begin
        and_ln102_141_reg_941 <= and_ln102_141_fu_409_p2;
        and_ln102_141_reg_941_pp0_iter2_reg <= and_ln102_141_reg_941;
        and_ln102_142_reg_973 <= and_ln102_142_fu_451_p2;
        and_ln102_146_reg_985 <= and_ln102_146_fu_478_p2;
        and_ln102_reg_924 <= and_ln102_fu_370_p2;
        and_ln104_22_reg_935 <= and_ln104_22_fu_393_p2;
        and_ln104_25_reg_979 <= and_ln104_25_fu_460_p2;
        and_ln104_25_reg_979_pp0_iter3_reg <= and_ln104_25_reg_979;
        and_ln104_25_reg_979_pp0_iter4_reg <= and_ln104_25_reg_979_pp0_iter3_reg;
        and_ln104_reg_930 <= and_ln104_fu_379_p2;
        icmp_ln86_113_reg_830 <= icmp_ln86_113_fu_268_p2;
        icmp_ln86_114_reg_836 <= icmp_ln86_114_fu_274_p2;
        icmp_ln86_115_reg_842 <= icmp_ln86_115_fu_280_p2;
        icmp_ln86_115_reg_842_pp0_iter1_reg <= icmp_ln86_115_reg_842;
        icmp_ln86_116_reg_847 <= icmp_ln86_116_fu_286_p2;
        icmp_ln86_116_reg_847_pp0_iter1_reg <= icmp_ln86_116_reg_847;
        icmp_ln86_117_reg_853 <= icmp_ln86_117_fu_292_p2;
        icmp_ln86_118_reg_859 <= icmp_ln86_118_fu_298_p2;
        icmp_ln86_118_reg_859_pp0_iter1_reg <= icmp_ln86_118_reg_859;
        icmp_ln86_119_reg_865 <= icmp_ln86_119_fu_304_p2;
        icmp_ln86_119_reg_865_pp0_iter1_reg <= icmp_ln86_119_reg_865;
        icmp_ln86_120_reg_870 <= icmp_ln86_120_fu_310_p2;
        icmp_ln86_120_reg_870_pp0_iter1_reg <= icmp_ln86_120_reg_870;
        icmp_ln86_120_reg_870_pp0_iter2_reg <= icmp_ln86_120_reg_870_pp0_iter1_reg;
        icmp_ln86_121_reg_876 <= icmp_ln86_121_fu_316_p2;
        icmp_ln86_121_reg_876_pp0_iter1_reg <= icmp_ln86_121_reg_876;
        icmp_ln86_121_reg_876_pp0_iter2_reg <= icmp_ln86_121_reg_876_pp0_iter1_reg;
        icmp_ln86_122_reg_882 <= icmp_ln86_122_fu_322_p2;
        icmp_ln86_122_reg_882_pp0_iter1_reg <= icmp_ln86_122_reg_882;
        icmp_ln86_122_reg_882_pp0_iter2_reg <= icmp_ln86_122_reg_882_pp0_iter1_reg;
        icmp_ln86_122_reg_882_pp0_iter3_reg <= icmp_ln86_122_reg_882_pp0_iter2_reg;
        icmp_ln86_122_reg_882_pp0_iter4_reg <= icmp_ln86_122_reg_882_pp0_iter3_reg;
        icmp_ln86_123_reg_888 <= icmp_ln86_123_fu_328_p2;
        icmp_ln86_123_reg_888_pp0_iter1_reg <= icmp_ln86_123_reg_888;
        icmp_ln86_124_reg_893 <= icmp_ln86_124_fu_334_p2;
        icmp_ln86_124_reg_893_pp0_iter1_reg <= icmp_ln86_124_reg_893;
        icmp_ln86_124_reg_893_pp0_iter2_reg <= icmp_ln86_124_reg_893_pp0_iter1_reg;
        icmp_ln86_125_reg_898 <= icmp_ln86_125_fu_340_p2;
        icmp_ln86_125_reg_898_pp0_iter1_reg <= icmp_ln86_125_reg_898;
        icmp_ln86_125_reg_898_pp0_iter2_reg <= icmp_ln86_125_reg_898_pp0_iter1_reg;
        icmp_ln86_126_reg_903 <= icmp_ln86_126_fu_346_p2;
        icmp_ln86_126_reg_903_pp0_iter1_reg <= icmp_ln86_126_reg_903;
        icmp_ln86_126_reg_903_pp0_iter2_reg <= icmp_ln86_126_reg_903_pp0_iter1_reg;
        icmp_ln86_127_reg_908 <= icmp_ln86_127_fu_352_p2;
        icmp_ln86_127_reg_908_pp0_iter1_reg <= icmp_ln86_127_reg_908;
        icmp_ln86_127_reg_908_pp0_iter2_reg <= icmp_ln86_127_reg_908_pp0_iter1_reg;
        icmp_ln86_127_reg_908_pp0_iter3_reg <= icmp_ln86_127_reg_908_pp0_iter2_reg;
        icmp_ln86_128_reg_913 <= icmp_ln86_128_fu_358_p2;
        icmp_ln86_128_reg_913_pp0_iter1_reg <= icmp_ln86_128_reg_913;
        icmp_ln86_128_reg_913_pp0_iter2_reg <= icmp_ln86_128_reg_913_pp0_iter1_reg;
        icmp_ln86_128_reg_913_pp0_iter3_reg <= icmp_ln86_128_reg_913_pp0_iter2_reg;
        icmp_ln86_128_reg_913_pp0_iter4_reg <= icmp_ln86_128_reg_913_pp0_iter3_reg;
        icmp_ln86_reg_822 <= icmp_ln86_fu_262_p2;
        or_ln117_109_reg_952 <= or_ln117_109_fu_431_p2;
        or_ln117_111_reg_958 <= or_ln117_111_fu_437_p2;
        or_ln117_113_reg_991 <= or_ln117_113_fu_548_p2;
        or_ln117_115_reg_965 <= or_ln117_115_fu_442_p2;
        or_ln117_115_reg_965_pp0_iter2_reg <= or_ln117_115_reg_965;
        or_ln117_119_reg_1001 <= or_ln117_119_fu_657_p2;
        or_ln117_121_reg_1012 <= or_ln117_121_fu_691_p2;
        or_ln117_reg_947 <= or_ln117_fu_425_p2;
        select_ln117_116_reg_996 <= select_ln117_116_fu_565_p3;
        select_ln117_122_reg_1007 <= select_ln117_122_fu_669_p3;
        select_ln117_124_reg_1017 <= select_ln117_124_fu_707_p3;
        xor_ln104_reg_918 <= xor_ln104_fu_364_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        p_read10_int_reg <= p_read10;
        p_read11_int_reg <= p_read11;
        p_read12_int_reg <= p_read12;
        p_read13_int_reg <= p_read13;
        p_read14_int_reg <= p_read14;
        p_read1_int_reg <= p_read1;
        p_read2_int_reg <= p_read2;
        p_read3_int_reg <= p_read3;
        p_read4_int_reg <= p_read4;
        p_read5_int_reg <= p_read5;
        p_read6_int_reg <= p_read6;
        p_read7_int_reg <= p_read7;
        p_read8_int_reg <= p_read8;
        p_read9_int_reg <= p_read9;
    end
end

assign agg_result_fu_742_p37 = 'bx;

assign agg_result_fu_742_p38 = ((or_ln117_122_fu_730_p2[0:0] == 1'b1) ? select_ln117_124_reg_1017 : 5'd17);

assign and_ln102_139_fu_384_p2 = (xor_ln104_reg_918 & icmp_ln86_114_reg_836);

assign and_ln102_140_fu_447_p2 = (icmp_ln86_115_reg_842_pp0_iter1_reg & and_ln102_reg_924);

assign and_ln102_141_fu_409_p2 = (icmp_ln86_117_reg_853 & and_ln102_139_fu_384_p2);

assign and_ln102_142_fu_451_p2 = (icmp_ln86_118_reg_859_pp0_iter1_reg & and_ln104_22_reg_935);

assign and_ln102_143_fu_465_p2 = (icmp_ln86_119_reg_865_pp0_iter1_reg & and_ln104_reg_930);

assign and_ln102_144_fu_469_p2 = (icmp_ln86_116_reg_847_pp0_iter1_reg & and_ln102_143_fu_465_p2);

assign and_ln102_145_fu_474_p2 = (icmp_ln86_120_reg_870_pp0_iter1_reg & and_ln102_141_reg_941);

assign and_ln102_146_fu_478_p2 = (icmp_ln86_121_reg_876_pp0_iter1_reg & and_ln102_142_fu_451_p2);

assign and_ln102_147_fu_677_p2 = (icmp_ln86_122_reg_882_pp0_iter3_reg & and_ln104_25_reg_979_pp0_iter3_reg);

assign and_ln102_148_fu_483_p2 = (icmp_ln86_123_reg_888_pp0_iter1_reg & and_ln102_145_fu_474_p2);

assign and_ln102_149_fu_583_p2 = (xor_ln104_59_fu_573_p2 & icmp_ln86_124_reg_893_pp0_iter2_reg);

assign and_ln102_150_fu_588_p2 = (and_ln102_149_fu_583_p2 & and_ln102_141_reg_941_pp0_iter2_reg);

assign and_ln102_151_fu_593_p2 = (icmp_ln86_125_reg_898_pp0_iter2_reg & and_ln102_146_reg_985);

assign and_ln102_152_fu_597_p2 = (xor_ln104_60_fu_578_p2 & icmp_ln86_126_reg_903_pp0_iter2_reg);

assign and_ln102_153_fu_602_p2 = (and_ln102_152_fu_597_p2 & and_ln102_142_reg_973);

assign and_ln102_154_fu_681_p2 = (icmp_ln86_127_reg_908_pp0_iter3_reg & and_ln102_147_fu_677_p2);

assign and_ln102_155_fu_720_p2 = (xor_ln104_61_fu_715_p2 & icmp_ln86_128_reg_913_pp0_iter4_reg);

assign and_ln102_156_fu_725_p2 = (and_ln104_25_reg_979_pp0_iter4_reg & and_ln102_155_fu_720_p2);

assign and_ln102_fu_370_p2 = (icmp_ln86_reg_822 & icmp_ln86_113_reg_830);

assign and_ln104_22_fu_393_p2 = (xor_ln104_reg_918 & xor_ln104_55_fu_388_p2);

assign and_ln104_23_fu_403_p2 = (xor_ln104_56_fu_398_p2 & and_ln104_fu_379_p2);

assign and_ln104_24_fu_419_p2 = (xor_ln104_57_fu_414_p2 & and_ln102_139_fu_384_p2);

assign and_ln104_25_fu_460_p2 = (xor_ln104_58_fu_455_p2 & and_ln104_22_reg_935);

assign and_ln104_fu_379_p2 = (xor_ln104_54_fu_374_p2 & icmp_ln86_reg_822);

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_return = agg_result_fu_742_p39;

assign icmp_ln86_113_fu_268_p2 = (($signed(p_read10_int_reg) < $signed(18'd13070)) ? 1'b1 : 1'b0);

assign icmp_ln86_114_fu_274_p2 = (($signed(p_read4_int_reg) < $signed(18'd4181)) ? 1'b1 : 1'b0);

assign icmp_ln86_115_fu_280_p2 = (($signed(p_read2_int_reg) < $signed(18'd6187)) ? 1'b1 : 1'b0);

assign icmp_ln86_116_fu_286_p2 = (($signed(p_read6_int_reg) < $signed(18'd440)) ? 1'b1 : 1'b0);

assign icmp_ln86_117_fu_292_p2 = (($signed(p_read12_int_reg) < $signed(18'd89183)) ? 1'b1 : 1'b0);

assign icmp_ln86_118_fu_298_p2 = (($signed(p_read11_int_reg) < $signed(18'd171206)) ? 1'b1 : 1'b0);

assign icmp_ln86_119_fu_304_p2 = (($signed(p_read14_int_reg) < $signed(18'd23041)) ? 1'b1 : 1'b0);

assign icmp_ln86_120_fu_310_p2 = (($signed(p_read5_int_reg) < $signed(18'd738)) ? 1'b1 : 1'b0);

assign icmp_ln86_121_fu_316_p2 = (($signed(p_read11_int_reg) < $signed(18'd157925)) ? 1'b1 : 1'b0);

assign icmp_ln86_122_fu_322_p2 = (($signed(p_read8_int_reg) < $signed(18'd30735)) ? 1'b1 : 1'b0);

assign icmp_ln86_123_fu_328_p2 = (($signed(p_read5_int_reg) < $signed(18'd626)) ? 1'b1 : 1'b0);

assign icmp_ln86_124_fu_334_p2 = (($signed(p_read1_int_reg) < $signed(18'd233055)) ? 1'b1 : 1'b0);

assign icmp_ln86_125_fu_340_p2 = (($signed(p_read13_int_reg) < $signed(18'd131131)) ? 1'b1 : 1'b0);

assign icmp_ln86_126_fu_346_p2 = (($signed(p_read9_int_reg) < $signed(18'd117)) ? 1'b1 : 1'b0);

assign icmp_ln86_127_fu_352_p2 = (($signed(p_read7_int_reg) < $signed(18'd180637)) ? 1'b1 : 1'b0);

assign icmp_ln86_128_fu_358_p2 = (($signed(p_read12_int_reg) < $signed(18'd175512)) ? 1'b1 : 1'b0);

assign icmp_ln86_fu_262_p2 = (($signed(p_read3_int_reg) < $signed(18'd5147)) ? 1'b1 : 1'b0);

assign or_ln117_109_fu_431_p2 = (or_ln117_fu_425_p2 | and_ln104_24_fu_419_p2);

assign or_ln117_110_fu_516_p2 = (or_ln117_109_reg_952 | and_ln102_144_fu_469_p2);

assign or_ln117_111_fu_437_p2 = (icmp_ln86_reg_822 | and_ln104_24_fu_419_p2);

assign or_ln117_112_fu_536_p2 = (or_ln117_111_reg_958 | and_ln102_148_fu_483_p2);

assign or_ln117_113_fu_548_p2 = (or_ln117_111_reg_958 | and_ln102_145_fu_474_p2);

assign or_ln117_114_fu_607_p2 = (or_ln117_113_reg_991 | and_ln102_150_fu_588_p2);

assign or_ln117_115_fu_442_p2 = (icmp_ln86_reg_822 | and_ln102_139_fu_384_p2);

assign or_ln117_116_fu_619_p2 = (or_ln117_115_reg_965_pp0_iter2_reg | and_ln102_151_fu_593_p2);

assign or_ln117_117_fu_631_p2 = (or_ln117_115_reg_965_pp0_iter2_reg | and_ln102_146_reg_985);

assign or_ln117_118_fu_643_p2 = (or_ln117_117_fu_631_p2 | and_ln102_153_fu_602_p2);

assign or_ln117_119_fu_657_p2 = (or_ln117_115_reg_965_pp0_iter2_reg | and_ln102_142_reg_973);

assign or_ln117_120_fu_686_p2 = (or_ln117_119_reg_1001 | and_ln102_154_fu_681_p2);

assign or_ln117_121_fu_691_p2 = (or_ln117_119_reg_1001 | and_ln102_147_fu_677_p2);

assign or_ln117_122_fu_730_p2 = (or_ln117_121_reg_1012 | and_ln102_156_fu_725_p2);

assign or_ln117_fu_425_p2 = (and_ln104_23_fu_403_p2 | and_ln102_fu_370_p2);

assign select_ln117_111_fu_505_p3 = ((or_ln117_reg_947[0:0] == 1'b1) ? select_ln117_fu_498_p3 : 2'd3);

assign select_ln117_112_fu_521_p3 = ((or_ln117_109_reg_952[0:0] == 1'b1) ? zext_ln117_13_fu_512_p1 : 3'd4);

assign select_ln117_113_fu_528_p3 = ((or_ln117_110_fu_516_p2[0:0] == 1'b1) ? select_ln117_112_fu_521_p3 : 3'd5);

assign select_ln117_114_fu_541_p3 = ((or_ln117_111_reg_958[0:0] == 1'b1) ? select_ln117_113_fu_528_p3 : 3'd6);

assign select_ln117_115_fu_553_p3 = ((or_ln117_112_fu_536_p2[0:0] == 1'b1) ? select_ln117_114_fu_541_p3 : 3'd7);

assign select_ln117_116_fu_565_p3 = ((or_ln117_113_fu_548_p2[0:0] == 1'b1) ? zext_ln117_14_fu_561_p1 : 4'd8);

assign select_ln117_117_fu_612_p3 = ((or_ln117_114_fu_607_p2[0:0] == 1'b1) ? select_ln117_116_reg_996 : 4'd9);

assign select_ln117_118_fu_624_p3 = ((or_ln117_115_reg_965_pp0_iter2_reg[0:0] == 1'b1) ? select_ln117_117_fu_612_p3 : 4'd10);

assign select_ln117_119_fu_635_p3 = ((or_ln117_116_fu_619_p2[0:0] == 1'b1) ? select_ln117_118_fu_624_p3 : 4'd11);

assign select_ln117_120_fu_649_p3 = ((or_ln117_117_fu_631_p2[0:0] == 1'b1) ? select_ln117_119_fu_635_p3 : 4'd12);

assign select_ln117_121_fu_661_p3 = ((or_ln117_118_fu_643_p2[0:0] == 1'b1) ? select_ln117_120_fu_649_p3 : 4'd13);

assign select_ln117_122_fu_669_p3 = ((or_ln117_119_fu_657_p2[0:0] == 1'b1) ? select_ln117_121_fu_661_p3 : 4'd14);

assign select_ln117_123_fu_696_p3 = ((or_ln117_120_fu_686_p2[0:0] == 1'b1) ? select_ln117_122_reg_1007 : 4'd15);

assign select_ln117_124_fu_707_p3 = ((or_ln117_121_fu_691_p2[0:0] == 1'b1) ? zext_ln117_15_fu_703_p1 : 5'd16);

assign select_ln117_fu_498_p3 = ((and_ln102_reg_924[0:0] == 1'b1) ? zext_ln117_fu_494_p1 : 2'd2);

assign xor_ln104_54_fu_374_p2 = (icmp_ln86_113_reg_830 ^ 1'd1);

assign xor_ln104_55_fu_388_p2 = (icmp_ln86_114_reg_836 ^ 1'd1);

assign xor_ln104_56_fu_398_p2 = (icmp_ln86_116_reg_847 ^ 1'd1);

assign xor_ln104_57_fu_414_p2 = (icmp_ln86_117_reg_853 ^ 1'd1);

assign xor_ln104_58_fu_455_p2 = (icmp_ln86_118_reg_859_pp0_iter1_reg ^ 1'd1);

assign xor_ln104_59_fu_573_p2 = (icmp_ln86_120_reg_870_pp0_iter2_reg ^ 1'd1);

assign xor_ln104_60_fu_578_p2 = (icmp_ln86_121_reg_876_pp0_iter2_reg ^ 1'd1);

assign xor_ln104_61_fu_715_p2 = (icmp_ln86_122_reg_882_pp0_iter4_reg ^ 1'd1);

assign xor_ln104_fu_364_p2 = (icmp_ln86_fu_262_p2 ^ 1'd1);

assign xor_ln117_fu_488_p2 = (1'd1 ^ and_ln102_140_fu_447_p2);

assign zext_ln117_13_fu_512_p1 = select_ln117_111_fu_505_p3;

assign zext_ln117_14_fu_561_p1 = select_ln117_115_fu_553_p3;

assign zext_ln117_15_fu_703_p1 = select_ln117_123_fu_696_p3;

assign zext_ln117_fu_494_p1 = xor_ln117_fu_488_p2;

endmodule //conifer_jettag_accelerator_decision_function_95

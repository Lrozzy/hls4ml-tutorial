// ==============================================================
// Generated by Vitis HLS v2024.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module conifer_jettag_accelerator_decision_function_34 (
        ap_clk,
        ap_rst,
        p_read1,
        p_read2,
        p_read3,
        p_read4,
        p_read5,
        p_read6,
        p_read7,
        p_read8,
        p_read9,
        p_read10,
        p_read11,
        p_read12,
        p_read13,
        ap_return,
        ap_ce
);


input   ap_clk;
input   ap_rst;
input  [17:0] p_read1;
input  [17:0] p_read2;
input  [17:0] p_read3;
input  [17:0] p_read4;
input  [17:0] p_read5;
input  [17:0] p_read6;
input  [17:0] p_read7;
input  [17:0] p_read8;
input  [17:0] p_read9;
input  [17:0] p_read10;
input  [17:0] p_read11;
input  [17:0] p_read12;
input  [17:0] p_read13;
output  [11:0] ap_return;
input   ap_ce;

wire   [0:0] icmp_ln86_fu_262_p2;
reg   [0:0] icmp_ln86_reg_854;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln86_reg_854_pp0_iter1_reg;
wire   [0:0] icmp_ln86_905_fu_268_p2;
reg   [0:0] icmp_ln86_905_reg_862;
wire   [0:0] icmp_ln86_906_fu_274_p2;
reg   [0:0] icmp_ln86_906_reg_868;
wire   [0:0] icmp_ln86_907_fu_280_p2;
reg   [0:0] icmp_ln86_907_reg_874;
reg   [0:0] icmp_ln86_907_reg_874_pp0_iter1_reg;
wire   [0:0] icmp_ln86_908_fu_286_p2;
reg   [0:0] icmp_ln86_908_reg_879;
wire   [0:0] icmp_ln86_909_fu_292_p2;
reg   [0:0] icmp_ln86_909_reg_884;
reg   [0:0] icmp_ln86_909_reg_884_pp0_iter1_reg;
wire   [0:0] icmp_ln86_910_fu_298_p2;
reg   [0:0] icmp_ln86_910_reg_890;
wire   [0:0] icmp_ln86_911_fu_304_p2;
reg   [0:0] icmp_ln86_911_reg_896;
reg   [0:0] icmp_ln86_911_reg_896_pp0_iter1_reg;
wire   [0:0] icmp_ln86_912_fu_310_p2;
reg   [0:0] icmp_ln86_912_reg_902;
reg   [0:0] icmp_ln86_912_reg_902_pp0_iter1_reg;
reg   [0:0] icmp_ln86_912_reg_902_pp0_iter2_reg;
wire   [0:0] icmp_ln86_913_fu_316_p2;
reg   [0:0] icmp_ln86_913_reg_908;
wire   [0:0] icmp_ln86_914_fu_322_p2;
reg   [0:0] icmp_ln86_914_reg_914;
reg   [0:0] icmp_ln86_914_reg_914_pp0_iter1_reg;
reg   [0:0] icmp_ln86_914_reg_914_pp0_iter2_reg;
reg   [0:0] icmp_ln86_914_reg_914_pp0_iter3_reg;
reg   [0:0] icmp_ln86_914_reg_914_pp0_iter4_reg;
wire   [0:0] icmp_ln86_915_fu_328_p2;
reg   [0:0] icmp_ln86_915_reg_920;
reg   [0:0] icmp_ln86_915_reg_920_pp0_iter1_reg;
wire   [0:0] icmp_ln86_916_fu_334_p2;
reg   [0:0] icmp_ln86_916_reg_925;
reg   [0:0] icmp_ln86_916_reg_925_pp0_iter1_reg;
wire   [0:0] icmp_ln86_917_fu_340_p2;
reg   [0:0] icmp_ln86_917_reg_930;
reg   [0:0] icmp_ln86_917_reg_930_pp0_iter1_reg;
reg   [0:0] icmp_ln86_917_reg_930_pp0_iter2_reg;
wire   [0:0] icmp_ln86_918_fu_346_p2;
reg   [0:0] icmp_ln86_918_reg_935;
reg   [0:0] icmp_ln86_918_reg_935_pp0_iter1_reg;
reg   [0:0] icmp_ln86_918_reg_935_pp0_iter2_reg;
wire   [0:0] icmp_ln86_919_fu_352_p2;
reg   [0:0] icmp_ln86_919_reg_940;
reg   [0:0] icmp_ln86_919_reg_940_pp0_iter1_reg;
reg   [0:0] icmp_ln86_919_reg_940_pp0_iter2_reg;
wire   [0:0] icmp_ln86_920_fu_358_p2;
reg   [0:0] icmp_ln86_920_reg_945;
reg   [0:0] icmp_ln86_920_reg_945_pp0_iter1_reg;
reg   [0:0] icmp_ln86_920_reg_945_pp0_iter2_reg;
reg   [0:0] icmp_ln86_920_reg_945_pp0_iter3_reg;
wire   [0:0] icmp_ln86_921_fu_364_p2;
reg   [0:0] icmp_ln86_921_reg_950;
reg   [0:0] icmp_ln86_921_reg_950_pp0_iter1_reg;
reg   [0:0] icmp_ln86_921_reg_950_pp0_iter2_reg;
reg   [0:0] icmp_ln86_921_reg_950_pp0_iter3_reg;
reg   [0:0] icmp_ln86_921_reg_950_pp0_iter4_reg;
wire   [0:0] xor_ln104_fu_370_p2;
reg   [0:0] xor_ln104_reg_955;
wire   [0:0] and_ln102_fu_376_p2;
reg   [0:0] and_ln102_reg_961;
wire   [0:0] and_ln102_870_fu_385_p2;
reg   [0:0] and_ln102_870_reg_967;
wire   [0:0] and_ln102_873_fu_409_p2;
reg   [0:0] and_ln102_873_reg_973;
wire   [0:0] and_ln104_179_fu_424_p2;
reg   [0:0] and_ln104_179_reg_979;
reg   [0:0] and_ln104_179_reg_979_pp0_iter2_reg;
reg   [0:0] and_ln104_179_reg_979_pp0_iter3_reg;
reg   [0:0] and_ln104_179_reg_979_pp0_iter4_reg;
reg   [0:0] and_ln104_179_reg_979_pp0_iter5_reg;
wire   [0:0] and_ln102_875_fu_430_p2;
reg   [0:0] and_ln102_875_reg_986;
wire   [0:0] and_ln104_180_fu_445_p2;
reg   [0:0] and_ln104_180_reg_992;
reg   [0:0] and_ln104_180_reg_992_pp0_iter2_reg;
wire   [0:0] or_ln117_fu_451_p2;
reg   [0:0] or_ln117_reg_998;
wire   [0:0] or_ln117_830_fu_457_p2;
reg   [0:0] or_ln117_830_reg_1003;
wire   [0:0] and_ln104_178_fu_471_p2;
reg   [0:0] and_ln104_178_reg_1012;
wire   [0:0] and_ln102_876_fu_481_p2;
reg   [0:0] and_ln102_876_reg_1017;
wire   [0:0] or_ln117_834_fu_577_p2;
reg   [0:0] or_ln117_834_reg_1022;
wire   [3:0] select_ln117_883_fu_589_p3;
reg   [3:0] select_ln117_883_reg_1027;
wire   [0:0] or_ln117_836_fu_597_p2;
reg   [0:0] or_ln117_836_reg_1032;
wire   [0:0] or_ln117_838_fu_603_p2;
reg   [0:0] or_ln117_838_reg_1038;
wire   [0:0] or_ln117_840_fu_674_p2;
reg   [0:0] or_ln117_840_reg_1045;
reg   [0:0] or_ln117_840_reg_1045_pp0_iter4_reg;
reg   [0:0] or_ln117_840_reg_1045_pp0_iter5_reg;
wire   [3:0] select_ln117_889_fu_686_p3;
reg   [3:0] select_ln117_889_reg_1052;
wire   [0:0] or_ln117_842_fu_711_p2;
reg   [0:0] or_ln117_842_reg_1057;
wire   [4:0] select_ln117_891_fu_724_p3;
reg   [4:0] select_ln117_891_reg_1062;
wire   [11:0] tmp_fu_759_p41;
reg   [11:0] tmp_reg_1067;
wire    ap_block_pp0_stage0;
wire   [0:0] xor_ln104_435_fu_389_p2;
wire   [0:0] xor_ln104_434_fu_380_p2;
wire   [0:0] and_ln102_886_fu_399_p2;
wire   [0:0] and_ln104_fu_394_p2;
wire   [0:0] xor_ln104_437_fu_419_p2;
wire   [0:0] and_ln102_874_fu_414_p2;
wire   [0:0] xor_ln104_440_fu_440_p2;
wire   [0:0] and_ln102_872_fu_404_p2;
wire   [0:0] and_ln102_877_fu_435_p2;
wire   [0:0] xor_ln104_436_fu_466_p2;
wire   [0:0] xor_ln104_438_fu_476_p2;
wire   [0:0] and_ln102_887_fu_490_p2;
wire   [0:0] and_ln102_871_fu_462_p2;
wire   [0:0] xor_ln117_fu_500_p2;
wire   [1:0] zext_ln117_fu_506_p1;
wire   [1:0] select_ln117_fu_510_p3;
wire   [1:0] select_ln117_877_fu_517_p3;
wire   [2:0] zext_ln117_99_fu_524_p1;
wire   [0:0] and_ln102_879_fu_486_p2;
wire   [2:0] select_ln117_878_fu_528_p3;
wire   [0:0] or_ln117_831_fu_535_p2;
wire   [2:0] select_ln117_879_fu_540_p3;
wire   [0:0] or_ln117_832_fu_547_p2;
wire   [0:0] and_ln102_880_fu_495_p2;
wire   [2:0] select_ln117_880_fu_551_p3;
wire   [2:0] select_ln117_881_fu_565_p3;
wire   [0:0] or_ln117_833_fu_559_p2;
wire   [3:0] zext_ln117_100_fu_573_p1;
wire   [3:0] select_ln117_882_fu_581_p3;
wire   [0:0] xor_ln104_439_fu_607_p2;
wire   [0:0] and_ln102_888_fu_616_p2;
wire   [0:0] and_ln102_881_fu_612_p2;
wire   [0:0] or_ln117_835_fu_630_p2;
wire   [0:0] and_ln102_882_fu_621_p2;
wire   [3:0] select_ln117_884_fu_635_p3;
wire   [0:0] or_ln117_837_fu_642_p2;
wire   [3:0] select_ln117_885_fu_647_p3;
wire   [0:0] and_ln102_883_fu_626_p2;
wire   [3:0] select_ln117_886_fu_654_p3;
wire   [0:0] or_ln117_839_fu_662_p2;
wire   [3:0] select_ln117_887_fu_667_p3;
wire   [3:0] select_ln117_888_fu_678_p3;
wire   [0:0] and_ln102_878_fu_694_p2;
wire   [0:0] and_ln102_884_fu_698_p2;
wire   [0:0] or_ln117_841_fu_703_p2;
wire   [4:0] zext_ln117_101_fu_708_p1;
wire   [4:0] select_ln117_890_fu_716_p3;
wire   [0:0] xor_ln104_441_fu_732_p2;
wire   [0:0] and_ln102_889_fu_737_p2;
wire   [0:0] and_ln102_885_fu_742_p2;
wire   [0:0] or_ln117_843_fu_747_p2;
wire   [11:0] tmp_fu_759_p39;
wire   [4:0] tmp_fu_759_p40;
wire   [0:0] or_ln117_844_fu_843_p2;
reg   [17:0] p_read1_int_reg;
reg   [17:0] p_read2_int_reg;
reg   [17:0] p_read3_int_reg;
reg   [17:0] p_read4_int_reg;
reg   [17:0] p_read5_int_reg;
reg   [17:0] p_read6_int_reg;
reg   [17:0] p_read7_int_reg;
reg   [17:0] p_read8_int_reg;
reg   [17:0] p_read9_int_reg;
reg   [17:0] p_read10_int_reg;
reg   [17:0] p_read11_int_reg;
reg   [17:0] p_read12_int_reg;
reg   [17:0] p_read13_int_reg;
wire   [4:0] tmp_fu_759_p1;
wire   [4:0] tmp_fu_759_p3;
wire   [4:0] tmp_fu_759_p5;
wire   [4:0] tmp_fu_759_p7;
wire   [4:0] tmp_fu_759_p9;
wire   [4:0] tmp_fu_759_p11;
wire   [4:0] tmp_fu_759_p13;
wire   [4:0] tmp_fu_759_p15;
wire   [4:0] tmp_fu_759_p17;
wire   [4:0] tmp_fu_759_p19;
wire   [4:0] tmp_fu_759_p21;
wire   [4:0] tmp_fu_759_p23;
wire   [4:0] tmp_fu_759_p25;
wire   [4:0] tmp_fu_759_p27;
wire   [4:0] tmp_fu_759_p29;
wire   [4:0] tmp_fu_759_p31;
wire  signed [4:0] tmp_fu_759_p33;
wire  signed [4:0] tmp_fu_759_p35;
wire  signed [4:0] tmp_fu_759_p37;
wire    ap_ce_reg;

(* dissolve_hierarchy = "yes" *) conifer_jettag_accelerator_sparsemux_39_5_12_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 5'h0 ),
    .din0_WIDTH( 12 ),
    .CASE1( 5'h1 ),
    .din1_WIDTH( 12 ),
    .CASE2( 5'h2 ),
    .din2_WIDTH( 12 ),
    .CASE3( 5'h3 ),
    .din3_WIDTH( 12 ),
    .CASE4( 5'h4 ),
    .din4_WIDTH( 12 ),
    .CASE5( 5'h5 ),
    .din5_WIDTH( 12 ),
    .CASE6( 5'h6 ),
    .din6_WIDTH( 12 ),
    .CASE7( 5'h7 ),
    .din7_WIDTH( 12 ),
    .CASE8( 5'h8 ),
    .din8_WIDTH( 12 ),
    .CASE9( 5'h9 ),
    .din9_WIDTH( 12 ),
    .CASE10( 5'hA ),
    .din10_WIDTH( 12 ),
    .CASE11( 5'hB ),
    .din11_WIDTH( 12 ),
    .CASE12( 5'hC ),
    .din12_WIDTH( 12 ),
    .CASE13( 5'hD ),
    .din13_WIDTH( 12 ),
    .CASE14( 5'hE ),
    .din14_WIDTH( 12 ),
    .CASE15( 5'hF ),
    .din15_WIDTH( 12 ),
    .CASE16( 5'h10 ),
    .din16_WIDTH( 12 ),
    .CASE17( 5'h11 ),
    .din17_WIDTH( 12 ),
    .CASE18( 5'h12 ),
    .din18_WIDTH( 12 ),
    .def_WIDTH( 12 ),
    .sel_WIDTH( 5 ),
    .dout_WIDTH( 12 ))
sparsemux_39_5_12_1_1_U1597(
    .din0(12'd3744),
    .din1(12'd679),
    .din2(12'd223),
    .din3(12'd3577),
    .din4(12'd1602),
    .din5(12'd530),
    .din6(12'd3918),
    .din7(12'd57),
    .din8(12'd4078),
    .din9(12'd58),
    .din10(12'd3609),
    .din11(12'd511),
    .din12(12'd4028),
    .din13(12'd3961),
    .din14(12'd1139),
    .din15(12'd802),
    .din16(12'd4091),
    .din17(12'd3797),
    .din18(12'd4087),
    .def(tmp_fu_759_p39),
    .sel(tmp_fu_759_p40),
    .dout(tmp_fu_759_p41)
);

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce))) begin
        and_ln102_870_reg_967 <= and_ln102_870_fu_385_p2;
        and_ln102_873_reg_973 <= and_ln102_873_fu_409_p2;
        and_ln102_875_reg_986 <= and_ln102_875_fu_430_p2;
        and_ln102_876_reg_1017 <= and_ln102_876_fu_481_p2;
        and_ln102_reg_961 <= and_ln102_fu_376_p2;
        and_ln104_178_reg_1012 <= and_ln104_178_fu_471_p2;
        and_ln104_179_reg_979 <= and_ln104_179_fu_424_p2;
        and_ln104_179_reg_979_pp0_iter2_reg <= and_ln104_179_reg_979;
        and_ln104_179_reg_979_pp0_iter3_reg <= and_ln104_179_reg_979_pp0_iter2_reg;
        and_ln104_179_reg_979_pp0_iter4_reg <= and_ln104_179_reg_979_pp0_iter3_reg;
        and_ln104_179_reg_979_pp0_iter5_reg <= and_ln104_179_reg_979_pp0_iter4_reg;
        and_ln104_180_reg_992 <= and_ln104_180_fu_445_p2;
        and_ln104_180_reg_992_pp0_iter2_reg <= and_ln104_180_reg_992;
        icmp_ln86_905_reg_862 <= icmp_ln86_905_fu_268_p2;
        icmp_ln86_906_reg_868 <= icmp_ln86_906_fu_274_p2;
        icmp_ln86_907_reg_874 <= icmp_ln86_907_fu_280_p2;
        icmp_ln86_907_reg_874_pp0_iter1_reg <= icmp_ln86_907_reg_874;
        icmp_ln86_908_reg_879 <= icmp_ln86_908_fu_286_p2;
        icmp_ln86_909_reg_884 <= icmp_ln86_909_fu_292_p2;
        icmp_ln86_909_reg_884_pp0_iter1_reg <= icmp_ln86_909_reg_884;
        icmp_ln86_910_reg_890 <= icmp_ln86_910_fu_298_p2;
        icmp_ln86_911_reg_896 <= icmp_ln86_911_fu_304_p2;
        icmp_ln86_911_reg_896_pp0_iter1_reg <= icmp_ln86_911_reg_896;
        icmp_ln86_912_reg_902 <= icmp_ln86_912_fu_310_p2;
        icmp_ln86_912_reg_902_pp0_iter1_reg <= icmp_ln86_912_reg_902;
        icmp_ln86_912_reg_902_pp0_iter2_reg <= icmp_ln86_912_reg_902_pp0_iter1_reg;
        icmp_ln86_913_reg_908 <= icmp_ln86_913_fu_316_p2;
        icmp_ln86_914_reg_914 <= icmp_ln86_914_fu_322_p2;
        icmp_ln86_914_reg_914_pp0_iter1_reg <= icmp_ln86_914_reg_914;
        icmp_ln86_914_reg_914_pp0_iter2_reg <= icmp_ln86_914_reg_914_pp0_iter1_reg;
        icmp_ln86_914_reg_914_pp0_iter3_reg <= icmp_ln86_914_reg_914_pp0_iter2_reg;
        icmp_ln86_914_reg_914_pp0_iter4_reg <= icmp_ln86_914_reg_914_pp0_iter3_reg;
        icmp_ln86_915_reg_920 <= icmp_ln86_915_fu_328_p2;
        icmp_ln86_915_reg_920_pp0_iter1_reg <= icmp_ln86_915_reg_920;
        icmp_ln86_916_reg_925 <= icmp_ln86_916_fu_334_p2;
        icmp_ln86_916_reg_925_pp0_iter1_reg <= icmp_ln86_916_reg_925;
        icmp_ln86_917_reg_930 <= icmp_ln86_917_fu_340_p2;
        icmp_ln86_917_reg_930_pp0_iter1_reg <= icmp_ln86_917_reg_930;
        icmp_ln86_917_reg_930_pp0_iter2_reg <= icmp_ln86_917_reg_930_pp0_iter1_reg;
        icmp_ln86_918_reg_935 <= icmp_ln86_918_fu_346_p2;
        icmp_ln86_918_reg_935_pp0_iter1_reg <= icmp_ln86_918_reg_935;
        icmp_ln86_918_reg_935_pp0_iter2_reg <= icmp_ln86_918_reg_935_pp0_iter1_reg;
        icmp_ln86_919_reg_940 <= icmp_ln86_919_fu_352_p2;
        icmp_ln86_919_reg_940_pp0_iter1_reg <= icmp_ln86_919_reg_940;
        icmp_ln86_919_reg_940_pp0_iter2_reg <= icmp_ln86_919_reg_940_pp0_iter1_reg;
        icmp_ln86_920_reg_945 <= icmp_ln86_920_fu_358_p2;
        icmp_ln86_920_reg_945_pp0_iter1_reg <= icmp_ln86_920_reg_945;
        icmp_ln86_920_reg_945_pp0_iter2_reg <= icmp_ln86_920_reg_945_pp0_iter1_reg;
        icmp_ln86_920_reg_945_pp0_iter3_reg <= icmp_ln86_920_reg_945_pp0_iter2_reg;
        icmp_ln86_921_reg_950 <= icmp_ln86_921_fu_364_p2;
        icmp_ln86_921_reg_950_pp0_iter1_reg <= icmp_ln86_921_reg_950;
        icmp_ln86_921_reg_950_pp0_iter2_reg <= icmp_ln86_921_reg_950_pp0_iter1_reg;
        icmp_ln86_921_reg_950_pp0_iter3_reg <= icmp_ln86_921_reg_950_pp0_iter2_reg;
        icmp_ln86_921_reg_950_pp0_iter4_reg <= icmp_ln86_921_reg_950_pp0_iter3_reg;
        icmp_ln86_reg_854 <= icmp_ln86_fu_262_p2;
        icmp_ln86_reg_854_pp0_iter1_reg <= icmp_ln86_reg_854;
        or_ln117_830_reg_1003 <= or_ln117_830_fu_457_p2;
        or_ln117_834_reg_1022 <= or_ln117_834_fu_577_p2;
        or_ln117_836_reg_1032 <= or_ln117_836_fu_597_p2;
        or_ln117_838_reg_1038 <= or_ln117_838_fu_603_p2;
        or_ln117_840_reg_1045 <= or_ln117_840_fu_674_p2;
        or_ln117_840_reg_1045_pp0_iter4_reg <= or_ln117_840_reg_1045;
        or_ln117_840_reg_1045_pp0_iter5_reg <= or_ln117_840_reg_1045_pp0_iter4_reg;
        or_ln117_842_reg_1057 <= or_ln117_842_fu_711_p2;
        or_ln117_reg_998 <= or_ln117_fu_451_p2;
        select_ln117_883_reg_1027 <= select_ln117_883_fu_589_p3;
        select_ln117_889_reg_1052 <= select_ln117_889_fu_686_p3;
        select_ln117_891_reg_1062 <= select_ln117_891_fu_724_p3;
        tmp_reg_1067 <= tmp_fu_759_p41;
        xor_ln104_reg_955 <= xor_ln104_fu_370_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        p_read10_int_reg <= p_read10;
        p_read11_int_reg <= p_read11;
        p_read12_int_reg <= p_read12;
        p_read13_int_reg <= p_read13;
        p_read1_int_reg <= p_read1;
        p_read2_int_reg <= p_read2;
        p_read3_int_reg <= p_read3;
        p_read4_int_reg <= p_read4;
        p_read5_int_reg <= p_read5;
        p_read6_int_reg <= p_read6;
        p_read7_int_reg <= p_read7;
        p_read8_int_reg <= p_read8;
        p_read9_int_reg <= p_read9;
    end
end

assign and_ln102_870_fu_385_p2 = (xor_ln104_reg_955 & icmp_ln86_906_reg_868);

assign and_ln102_871_fu_462_p2 = (icmp_ln86_907_reg_874_pp0_iter1_reg & and_ln102_reg_961);

assign and_ln102_872_fu_404_p2 = (icmp_ln86_reg_854 & and_ln102_886_fu_399_p2);

assign and_ln102_873_fu_409_p2 = (icmp_ln86_909_reg_884 & and_ln102_870_fu_385_p2);

assign and_ln102_874_fu_414_p2 = (icmp_ln86_910_reg_890 & and_ln104_fu_394_p2);

assign and_ln102_875_fu_430_p2 = (icmp_ln86_911_reg_896 & and_ln102_873_fu_409_p2);

assign and_ln102_876_fu_481_p2 = (icmp_ln86_912_reg_902_pp0_iter1_reg & and_ln104_178_fu_471_p2);

assign and_ln102_877_fu_435_p2 = (icmp_ln86_913_reg_908 & and_ln102_874_fu_414_p2);

assign and_ln102_878_fu_694_p2 = (icmp_ln86_914_reg_914_pp0_iter3_reg & and_ln104_179_reg_979_pp0_iter3_reg);

assign and_ln102_879_fu_486_p2 = (icmp_ln86_915_reg_920_pp0_iter1_reg & and_ln102_875_reg_986);

assign and_ln102_880_fu_495_p2 = (and_ln102_887_fu_490_p2 & and_ln102_873_reg_973);

assign and_ln102_881_fu_612_p2 = (icmp_ln86_917_reg_930_pp0_iter2_reg & and_ln102_876_reg_1017);

assign and_ln102_882_fu_621_p2 = (and_ln104_178_reg_1012 & and_ln102_888_fu_616_p2);

assign and_ln102_883_fu_626_p2 = (icmp_ln86_919_reg_940_pp0_iter2_reg & and_ln104_180_reg_992_pp0_iter2_reg);

assign and_ln102_884_fu_698_p2 = (icmp_ln86_920_reg_945_pp0_iter3_reg & and_ln102_878_fu_694_p2);

assign and_ln102_885_fu_742_p2 = (and_ln104_179_reg_979_pp0_iter4_reg & and_ln102_889_fu_737_p2);

assign and_ln102_886_fu_399_p2 = (xor_ln104_434_fu_380_p2 & icmp_ln86_908_reg_879);

assign and_ln102_887_fu_490_p2 = (xor_ln104_438_fu_476_p2 & icmp_ln86_916_reg_925_pp0_iter1_reg);

assign and_ln102_888_fu_616_p2 = (xor_ln104_439_fu_607_p2 & icmp_ln86_918_reg_935_pp0_iter2_reg);

assign and_ln102_889_fu_737_p2 = (xor_ln104_441_fu_732_p2 & icmp_ln86_921_reg_950_pp0_iter4_reg);

assign and_ln102_fu_376_p2 = (icmp_ln86_reg_854 & icmp_ln86_905_reg_862);

assign and_ln104_178_fu_471_p2 = (xor_ln104_436_fu_466_p2 & and_ln102_870_reg_967);

assign and_ln104_179_fu_424_p2 = (xor_ln104_437_fu_419_p2 & and_ln104_fu_394_p2);

assign and_ln104_180_fu_445_p2 = (xor_ln104_440_fu_440_p2 & and_ln102_874_fu_414_p2);

assign and_ln104_fu_394_p2 = (xor_ln104_reg_955 & xor_ln104_435_fu_389_p2);

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_return = ((or_ln117_844_fu_843_p2[0:0] == 1'b1) ? tmp_reg_1067 : 12'd0);

assign icmp_ln86_905_fu_268_p2 = (($signed(p_read10_int_reg) < $signed(18'd12)) ? 1'b1 : 1'b0);

assign icmp_ln86_906_fu_274_p2 = (($signed(p_read9_int_reg) < $signed(18'd3013)) ? 1'b1 : 1'b0);

assign icmp_ln86_907_fu_280_p2 = (($signed(p_read12_int_reg) < $signed(18'd89015)) ? 1'b1 : 1'b0);

assign icmp_ln86_908_fu_286_p2 = (($signed(p_read7_int_reg) < $signed(18'd221)) ? 1'b1 : 1'b0);

assign icmp_ln86_909_fu_292_p2 = (($signed(p_read8_int_reg) < $signed(18'd3676)) ? 1'b1 : 1'b0);

assign icmp_ln86_910_fu_298_p2 = (($signed(p_read1_int_reg) < $signed(18'd217047)) ? 1'b1 : 1'b0);

assign icmp_ln86_911_fu_304_p2 = (($signed(p_read13_int_reg) < $signed(18'd12747)) ? 1'b1 : 1'b0);

assign icmp_ln86_912_fu_310_p2 = (($signed(p_read2_int_reg) < $signed(18'd76592)) ? 1'b1 : 1'b0);

assign icmp_ln86_913_fu_316_p2 = (($signed(p_read5_int_reg) < $signed(18'd60)) ? 1'b1 : 1'b0);

assign icmp_ln86_914_fu_322_p2 = (($signed(p_read1_int_reg) < $signed(18'd219517)) ? 1'b1 : 1'b0);

assign icmp_ln86_915_fu_328_p2 = (($signed(p_read3_int_reg) < $signed(18'd4833)) ? 1'b1 : 1'b0);

assign icmp_ln86_916_fu_334_p2 = (($signed(p_read12_int_reg) < $signed(18'd87628)) ? 1'b1 : 1'b0);

assign icmp_ln86_917_fu_340_p2 = (($signed(p_read5_int_reg) < $signed(18'd438)) ? 1'b1 : 1'b0);

assign icmp_ln86_918_fu_346_p2 = (($signed(p_read11_int_reg) < $signed(18'd87577)) ? 1'b1 : 1'b0);

assign icmp_ln86_919_fu_352_p2 = (($signed(p_read6_int_reg) < $signed(18'd988)) ? 1'b1 : 1'b0);

assign icmp_ln86_920_fu_358_p2 = (($signed(p_read1_int_reg) < $signed(18'd217257)) ? 1'b1 : 1'b0);

assign icmp_ln86_921_fu_364_p2 = (($signed(p_read4_int_reg) < $signed(18'd5177)) ? 1'b1 : 1'b0);

assign icmp_ln86_fu_262_p2 = (($signed(p_read1_int_reg) < $signed(18'd70370)) ? 1'b1 : 1'b0);

assign or_ln117_830_fu_457_p2 = (icmp_ln86_reg_854 | and_ln102_877_fu_435_p2);

assign or_ln117_831_fu_535_p2 = (or_ln117_830_reg_1003 | and_ln102_879_fu_486_p2);

assign or_ln117_832_fu_547_p2 = (or_ln117_830_reg_1003 | and_ln102_875_reg_986);

assign or_ln117_833_fu_559_p2 = (or_ln117_832_fu_547_p2 | and_ln102_880_fu_495_p2);

assign or_ln117_834_fu_577_p2 = (or_ln117_830_reg_1003 | and_ln102_873_reg_973);

assign or_ln117_835_fu_630_p2 = (or_ln117_834_reg_1022 | and_ln102_881_fu_612_p2);

assign or_ln117_836_fu_597_p2 = (or_ln117_834_fu_577_p2 | and_ln102_876_fu_481_p2);

assign or_ln117_837_fu_642_p2 = (or_ln117_836_reg_1032 | and_ln102_882_fu_621_p2);

assign or_ln117_838_fu_603_p2 = (or_ln117_830_reg_1003 | and_ln102_870_reg_967);

assign or_ln117_839_fu_662_p2 = (or_ln117_838_reg_1038 | and_ln102_883_fu_626_p2);

assign or_ln117_840_fu_674_p2 = (or_ln117_838_reg_1038 | and_ln104_180_reg_992_pp0_iter2_reg);

assign or_ln117_841_fu_703_p2 = (or_ln117_840_reg_1045 | and_ln102_884_fu_698_p2);

assign or_ln117_842_fu_711_p2 = (or_ln117_840_reg_1045 | and_ln102_878_fu_694_p2);

assign or_ln117_843_fu_747_p2 = (or_ln117_842_reg_1057 | and_ln102_885_fu_742_p2);

assign or_ln117_844_fu_843_p2 = (or_ln117_840_reg_1045_pp0_iter5_reg | and_ln104_179_reg_979_pp0_iter5_reg);

assign or_ln117_fu_451_p2 = (and_ln102_fu_376_p2 | and_ln102_872_fu_404_p2);

assign select_ln117_877_fu_517_p3 = ((or_ln117_reg_998[0:0] == 1'b1) ? select_ln117_fu_510_p3 : 2'd3);

assign select_ln117_878_fu_528_p3 = ((icmp_ln86_reg_854_pp0_iter1_reg[0:0] == 1'b1) ? zext_ln117_99_fu_524_p1 : 3'd4);

assign select_ln117_879_fu_540_p3 = ((or_ln117_830_reg_1003[0:0] == 1'b1) ? select_ln117_878_fu_528_p3 : 3'd5);

assign select_ln117_880_fu_551_p3 = ((or_ln117_831_fu_535_p2[0:0] == 1'b1) ? select_ln117_879_fu_540_p3 : 3'd6);

assign select_ln117_881_fu_565_p3 = ((or_ln117_832_fu_547_p2[0:0] == 1'b1) ? select_ln117_880_fu_551_p3 : 3'd7);

assign select_ln117_882_fu_581_p3 = ((or_ln117_833_fu_559_p2[0:0] == 1'b1) ? zext_ln117_100_fu_573_p1 : 4'd8);

assign select_ln117_883_fu_589_p3 = ((or_ln117_834_fu_577_p2[0:0] == 1'b1) ? select_ln117_882_fu_581_p3 : 4'd9);

assign select_ln117_884_fu_635_p3 = ((or_ln117_835_fu_630_p2[0:0] == 1'b1) ? select_ln117_883_reg_1027 : 4'd10);

assign select_ln117_885_fu_647_p3 = ((or_ln117_836_reg_1032[0:0] == 1'b1) ? select_ln117_884_fu_635_p3 : 4'd11);

assign select_ln117_886_fu_654_p3 = ((or_ln117_837_fu_642_p2[0:0] == 1'b1) ? select_ln117_885_fu_647_p3 : 4'd12);

assign select_ln117_887_fu_667_p3 = ((or_ln117_838_reg_1038[0:0] == 1'b1) ? select_ln117_886_fu_654_p3 : 4'd13);

assign select_ln117_888_fu_678_p3 = ((or_ln117_839_fu_662_p2[0:0] == 1'b1) ? select_ln117_887_fu_667_p3 : 4'd14);

assign select_ln117_889_fu_686_p3 = ((or_ln117_840_fu_674_p2[0:0] == 1'b1) ? select_ln117_888_fu_678_p3 : 4'd15);

assign select_ln117_890_fu_716_p3 = ((or_ln117_841_fu_703_p2[0:0] == 1'b1) ? zext_ln117_101_fu_708_p1 : 5'd16);

assign select_ln117_891_fu_724_p3 = ((or_ln117_842_fu_711_p2[0:0] == 1'b1) ? select_ln117_890_fu_716_p3 : 5'd17);

assign select_ln117_fu_510_p3 = ((and_ln102_reg_961[0:0] == 1'b1) ? zext_ln117_fu_506_p1 : 2'd2);

assign tmp_fu_759_p39 = 'bx;

assign tmp_fu_759_p40 = ((or_ln117_843_fu_747_p2[0:0] == 1'b1) ? select_ln117_891_reg_1062 : 5'd18);

assign xor_ln104_434_fu_380_p2 = (icmp_ln86_905_reg_862 ^ 1'd1);

assign xor_ln104_435_fu_389_p2 = (icmp_ln86_906_reg_868 ^ 1'd1);

assign xor_ln104_436_fu_466_p2 = (icmp_ln86_909_reg_884_pp0_iter1_reg ^ 1'd1);

assign xor_ln104_437_fu_419_p2 = (icmp_ln86_910_reg_890 ^ 1'd1);

assign xor_ln104_438_fu_476_p2 = (icmp_ln86_911_reg_896_pp0_iter1_reg ^ 1'd1);

assign xor_ln104_439_fu_607_p2 = (icmp_ln86_912_reg_902_pp0_iter2_reg ^ 1'd1);

assign xor_ln104_440_fu_440_p2 = (icmp_ln86_913_reg_908 ^ 1'd1);

assign xor_ln104_441_fu_732_p2 = (icmp_ln86_914_reg_914_pp0_iter4_reg ^ 1'd1);

assign xor_ln104_fu_370_p2 = (icmp_ln86_fu_262_p2 ^ 1'd1);

assign xor_ln117_fu_500_p2 = (1'd1 ^ and_ln102_871_fu_462_p2);

assign zext_ln117_100_fu_573_p1 = select_ln117_881_fu_565_p3;

assign zext_ln117_101_fu_708_p1 = select_ln117_889_reg_1052;

assign zext_ln117_99_fu_524_p1 = select_ln117_877_fu_517_p3;

assign zext_ln117_fu_506_p1 = xor_ln117_fu_500_p2;

endmodule //conifer_jettag_accelerator_decision_function_34

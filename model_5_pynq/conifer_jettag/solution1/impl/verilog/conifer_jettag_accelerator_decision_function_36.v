// ==============================================================
// Generated by Vitis HLS v2024.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module conifer_jettag_accelerator_decision_function_36 (
        ap_clk,
        ap_rst,
        p_read1,
        p_read2,
        p_read3,
        p_read4,
        p_read5,
        p_read6,
        p_read7,
        p_read8,
        p_read9,
        p_read10,
        p_read11,
        p_read12,
        ap_return,
        ap_ce
);


input   ap_clk;
input   ap_rst;
input  [17:0] p_read1;
input  [17:0] p_read2;
input  [17:0] p_read3;
input  [17:0] p_read4;
input  [17:0] p_read5;
input  [17:0] p_read6;
input  [17:0] p_read7;
input  [17:0] p_read8;
input  [17:0] p_read9;
input  [17:0] p_read10;
input  [17:0] p_read11;
input  [17:0] p_read12;
output  [11:0] ap_return;
input   ap_ce;

wire   [0:0] icmp_ln86_fu_208_p2;
reg   [0:0] icmp_ln86_reg_621;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln86_reg_621_pp0_iter1_reg;
wire   [0:0] icmp_ln86_947_fu_214_p2;
reg   [0:0] icmp_ln86_947_reg_630;
wire   [0:0] icmp_ln86_948_fu_220_p2;
reg   [0:0] icmp_ln86_948_reg_636;
reg   [0:0] icmp_ln86_948_reg_636_pp0_iter1_reg;
wire   [0:0] icmp_ln86_949_fu_226_p2;
reg   [0:0] icmp_ln86_949_reg_642;
wire   [0:0] icmp_ln86_950_fu_232_p2;
reg   [0:0] icmp_ln86_950_reg_648;
reg   [0:0] icmp_ln86_950_reg_648_pp0_iter1_reg;
reg   [0:0] icmp_ln86_950_reg_648_pp0_iter2_reg;
wire   [0:0] icmp_ln86_951_fu_238_p2;
reg   [0:0] icmp_ln86_951_reg_654;
reg   [0:0] icmp_ln86_951_reg_654_pp0_iter1_reg;
reg   [0:0] icmp_ln86_951_reg_654_pp0_iter2_reg;
reg   [0:0] tmp_reg_660;
reg   [0:0] tmp_reg_660_pp0_iter1_reg;
reg   [0:0] tmp_reg_660_pp0_iter2_reg;
reg   [0:0] tmp_reg_660_pp0_iter3_reg;
wire   [0:0] icmp_ln86_953_fu_252_p2;
reg   [0:0] icmp_ln86_953_reg_666;
reg   [0:0] icmp_ln86_953_reg_666_pp0_iter1_reg;
wire   [0:0] icmp_ln86_954_fu_258_p2;
reg   [0:0] icmp_ln86_954_reg_671;
reg   [0:0] icmp_ln86_954_reg_671_pp0_iter1_reg;
reg   [0:0] icmp_ln86_954_reg_671_pp0_iter2_reg;
wire   [0:0] icmp_ln86_955_fu_264_p2;
reg   [0:0] icmp_ln86_955_reg_676;
reg   [0:0] icmp_ln86_955_reg_676_pp0_iter1_reg;
reg   [0:0] icmp_ln86_955_reg_676_pp0_iter2_reg;
wire   [0:0] icmp_ln86_956_fu_270_p2;
reg   [0:0] icmp_ln86_956_reg_681;
reg   [0:0] icmp_ln86_956_reg_681_pp0_iter1_reg;
reg   [0:0] icmp_ln86_956_reg_681_pp0_iter2_reg;
wire   [0:0] icmp_ln86_957_fu_276_p2;
reg   [0:0] icmp_ln86_957_reg_686;
reg   [0:0] icmp_ln86_957_reg_686_pp0_iter1_reg;
reg   [0:0] icmp_ln86_957_reg_686_pp0_iter2_reg;
reg   [0:0] icmp_ln86_957_reg_686_pp0_iter3_reg;
wire   [0:0] xor_ln104_454_fu_292_p2;
reg   [0:0] xor_ln104_454_reg_691;
wire   [0:0] and_ln102_910_fu_303_p2;
reg   [0:0] and_ln102_910_reg_696;
reg   [0:0] and_ln102_910_reg_696_pp0_iter2_reg;
wire   [0:0] and_ln104_186_fu_317_p2;
reg   [0:0] and_ln104_186_reg_703;
reg   [0:0] and_ln104_186_reg_703_pp0_iter2_reg;
reg   [0:0] and_ln104_186_reg_703_pp0_iter3_reg;
wire   [0:0] or_ln117_fu_323_p2;
reg   [0:0] or_ln117_reg_709;
wire   [0:0] and_ln104_185_fu_334_p2;
reg   [0:0] and_ln104_185_reg_715;
wire   [0:0] and_ln102_913_fu_343_p2;
reg   [0:0] and_ln102_913_reg_720;
wire   [0:0] or_ln117_869_fu_395_p2;
reg   [0:0] or_ln117_869_reg_726;
wire   [2:0] select_ln117_919_fu_409_p3;
reg   [2:0] select_ln117_919_reg_731;
wire   [0:0] or_ln117_871_fu_417_p2;
reg   [0:0] or_ln117_871_reg_736;
wire   [0:0] or_ln117_875_fu_422_p2;
reg   [0:0] or_ln117_875_reg_743;
reg   [0:0] or_ln117_875_reg_743_pp0_iter3_reg;
wire   [4:0] select_ln117_925_fu_527_p3;
reg   [4:0] select_ln117_925_reg_749;
wire    ap_block_pp0_stage0;
wire   [0:0] xor_ln104_fu_282_p2;
wire   [0:0] and_ln104_fu_297_p2;
wire   [0:0] xor_ln104_456_fu_312_p2;
wire   [0:0] and_ln102_fu_287_p2;
wire   [0:0] and_ln102_911_fu_307_p2;
wire   [0:0] xor_ln104_455_fu_329_p2;
wire   [0:0] and_ln102_912_fu_339_p2;
wire   [0:0] or_ln117_877_fu_357_p2;
wire   [0:0] and_ln102_914_fu_348_p2;
wire   [1:0] zext_ln117_fu_361_p1;
wire   [0:0] or_ln117_867_fu_365_p2;
wire   [0:0] and_ln102_915_fu_352_p2;
wire   [1:0] select_ln117_fu_370_p3;
wire   [1:0] select_ln117_917_fu_383_p3;
wire   [0:0] or_ln117_868_fu_377_p2;
wire   [2:0] zext_ln117_105_fu_391_p1;
wire   [2:0] select_ln117_918_fu_401_p3;
wire   [0:0] xor_ln104_457_fu_427_p2;
wire   [0:0] and_ln102_920_fu_437_p2;
wire   [0:0] xor_ln104_458_fu_432_p2;
wire   [0:0] and_ln102_921_fu_451_p2;
wire   [0:0] and_ln102_916_fu_442_p2;
wire   [0:0] or_ln117_870_fu_461_p2;
wire   [0:0] and_ln102_917_fu_447_p2;
wire   [2:0] select_ln117_920_fu_466_p3;
wire   [2:0] select_ln117_921_fu_478_p3;
wire   [0:0] or_ln117_872_fu_473_p2;
wire   [3:0] zext_ln117_106_fu_485_p1;
wire   [0:0] or_ln117_873_fu_489_p2;
wire   [0:0] and_ln102_918_fu_456_p2;
wire   [3:0] select_ln117_922_fu_493_p3;
wire   [0:0] or_ln117_874_fu_501_p2;
wire   [3:0] select_ln117_923_fu_507_p3;
wire   [3:0] select_ln117_924_fu_515_p3;
wire   [4:0] zext_ln117_107_fu_523_p1;
wire   [0:0] xor_ln104_459_fu_534_p2;
wire   [0:0] and_ln102_922_fu_539_p2;
wire   [0:0] and_ln102_919_fu_544_p2;
wire   [0:0] or_ln117_876_fu_549_p2;
wire   [11:0] agg_result_fu_561_p27;
wire   [4:0] agg_result_fu_561_p28;
wire   [11:0] agg_result_fu_561_p29;
reg   [17:0] p_read1_int_reg;
reg   [17:0] p_read2_int_reg;
reg   [17:0] p_read3_int_reg;
reg   [17:0] p_read4_int_reg;
reg   [17:0] p_read5_int_reg;
reg   [17:0] p_read6_int_reg;
reg   [17:0] p_read7_int_reg;
reg   [17:0] p_read8_int_reg;
reg   [17:0] p_read9_int_reg;
reg   [17:0] p_read10_int_reg;
reg   [17:0] p_read11_int_reg;
reg   [17:0] p_read12_int_reg;
wire   [4:0] agg_result_fu_561_p1;
wire   [4:0] agg_result_fu_561_p3;
wire   [4:0] agg_result_fu_561_p5;
wire   [4:0] agg_result_fu_561_p7;
wire   [4:0] agg_result_fu_561_p9;
wire   [4:0] agg_result_fu_561_p11;
wire   [4:0] agg_result_fu_561_p13;
wire   [4:0] agg_result_fu_561_p15;
wire   [4:0] agg_result_fu_561_p17;
wire   [4:0] agg_result_fu_561_p19;
wire   [4:0] agg_result_fu_561_p21;
wire  signed [4:0] agg_result_fu_561_p23;
wire  signed [4:0] agg_result_fu_561_p25;
wire    ap_ce_reg;

(* dissolve_hierarchy = "yes" *) conifer_jettag_accelerator_sparsemux_27_5_12_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 5'h0 ),
    .din0_WIDTH( 12 ),
    .CASE1( 5'h1 ),
    .din1_WIDTH( 12 ),
    .CASE2( 5'h2 ),
    .din2_WIDTH( 12 ),
    .CASE3( 5'h3 ),
    .din3_WIDTH( 12 ),
    .CASE4( 5'h4 ),
    .din4_WIDTH( 12 ),
    .CASE5( 5'h5 ),
    .din5_WIDTH( 12 ),
    .CASE6( 5'h6 ),
    .din6_WIDTH( 12 ),
    .CASE7( 5'h7 ),
    .din7_WIDTH( 12 ),
    .CASE8( 5'h8 ),
    .din8_WIDTH( 12 ),
    .CASE9( 5'h9 ),
    .din9_WIDTH( 12 ),
    .CASE10( 5'hA ),
    .din10_WIDTH( 12 ),
    .CASE11( 5'h13 ),
    .din11_WIDTH( 12 ),
    .CASE12( 5'h14 ),
    .din12_WIDTH( 12 ),
    .def_WIDTH( 12 ),
    .sel_WIDTH( 5 ),
    .dout_WIDTH( 12 ))
sparsemux_27_5_12_1_1_U1563(
    .din0(12'd413),
    .din1(12'd177),
    .din2(12'd2),
    .din3(12'd3955),
    .din4(12'd4077),
    .din5(12'd4088),
    .din6(12'd74),
    .din7(12'd1585),
    .din8(12'd4078),
    .din9(12'd83),
    .din10(12'd3881),
    .din11(12'd3877),
    .din12(12'd3538),
    .def(agg_result_fu_561_p27),
    .sel(agg_result_fu_561_p28),
    .dout(agg_result_fu_561_p29)
);

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce))) begin
        and_ln102_910_reg_696 <= and_ln102_910_fu_303_p2;
        and_ln102_910_reg_696_pp0_iter2_reg <= and_ln102_910_reg_696;
        and_ln102_913_reg_720 <= and_ln102_913_fu_343_p2;
        and_ln104_185_reg_715 <= and_ln104_185_fu_334_p2;
        and_ln104_186_reg_703 <= and_ln104_186_fu_317_p2;
        and_ln104_186_reg_703_pp0_iter2_reg <= and_ln104_186_reg_703;
        and_ln104_186_reg_703_pp0_iter3_reg <= and_ln104_186_reg_703_pp0_iter2_reg;
        icmp_ln86_947_reg_630 <= icmp_ln86_947_fu_214_p2;
        icmp_ln86_948_reg_636 <= icmp_ln86_948_fu_220_p2;
        icmp_ln86_948_reg_636_pp0_iter1_reg <= icmp_ln86_948_reg_636;
        icmp_ln86_949_reg_642 <= icmp_ln86_949_fu_226_p2;
        icmp_ln86_950_reg_648 <= icmp_ln86_950_fu_232_p2;
        icmp_ln86_950_reg_648_pp0_iter1_reg <= icmp_ln86_950_reg_648;
        icmp_ln86_950_reg_648_pp0_iter2_reg <= icmp_ln86_950_reg_648_pp0_iter1_reg;
        icmp_ln86_951_reg_654 <= icmp_ln86_951_fu_238_p2;
        icmp_ln86_951_reg_654_pp0_iter1_reg <= icmp_ln86_951_reg_654;
        icmp_ln86_951_reg_654_pp0_iter2_reg <= icmp_ln86_951_reg_654_pp0_iter1_reg;
        icmp_ln86_953_reg_666 <= icmp_ln86_953_fu_252_p2;
        icmp_ln86_953_reg_666_pp0_iter1_reg <= icmp_ln86_953_reg_666;
        icmp_ln86_954_reg_671 <= icmp_ln86_954_fu_258_p2;
        icmp_ln86_954_reg_671_pp0_iter1_reg <= icmp_ln86_954_reg_671;
        icmp_ln86_954_reg_671_pp0_iter2_reg <= icmp_ln86_954_reg_671_pp0_iter1_reg;
        icmp_ln86_955_reg_676 <= icmp_ln86_955_fu_264_p2;
        icmp_ln86_955_reg_676_pp0_iter1_reg <= icmp_ln86_955_reg_676;
        icmp_ln86_955_reg_676_pp0_iter2_reg <= icmp_ln86_955_reg_676_pp0_iter1_reg;
        icmp_ln86_956_reg_681 <= icmp_ln86_956_fu_270_p2;
        icmp_ln86_956_reg_681_pp0_iter1_reg <= icmp_ln86_956_reg_681;
        icmp_ln86_956_reg_681_pp0_iter2_reg <= icmp_ln86_956_reg_681_pp0_iter1_reg;
        icmp_ln86_957_reg_686 <= icmp_ln86_957_fu_276_p2;
        icmp_ln86_957_reg_686_pp0_iter1_reg <= icmp_ln86_957_reg_686;
        icmp_ln86_957_reg_686_pp0_iter2_reg <= icmp_ln86_957_reg_686_pp0_iter1_reg;
        icmp_ln86_957_reg_686_pp0_iter3_reg <= icmp_ln86_957_reg_686_pp0_iter2_reg;
        icmp_ln86_reg_621 <= icmp_ln86_fu_208_p2;
        icmp_ln86_reg_621_pp0_iter1_reg <= icmp_ln86_reg_621;
        or_ln117_869_reg_726 <= or_ln117_869_fu_395_p2;
        or_ln117_871_reg_736 <= or_ln117_871_fu_417_p2;
        or_ln117_875_reg_743 <= or_ln117_875_fu_422_p2;
        or_ln117_875_reg_743_pp0_iter3_reg <= or_ln117_875_reg_743;
        or_ln117_reg_709 <= or_ln117_fu_323_p2;
        select_ln117_919_reg_731 <= select_ln117_919_fu_409_p3;
        select_ln117_925_reg_749 <= select_ln117_925_fu_527_p3;
        tmp_reg_660 <= p_read11_int_reg[32'd17];
        tmp_reg_660_pp0_iter1_reg <= tmp_reg_660;
        tmp_reg_660_pp0_iter2_reg <= tmp_reg_660_pp0_iter1_reg;
        tmp_reg_660_pp0_iter3_reg <= tmp_reg_660_pp0_iter2_reg;
        xor_ln104_454_reg_691 <= xor_ln104_454_fu_292_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        p_read10_int_reg <= p_read10;
        p_read11_int_reg <= p_read11;
        p_read12_int_reg <= p_read12;
        p_read1_int_reg <= p_read1;
        p_read2_int_reg <= p_read2;
        p_read3_int_reg <= p_read3;
        p_read4_int_reg <= p_read4;
        p_read5_int_reg <= p_read5;
        p_read6_int_reg <= p_read6;
        p_read7_int_reg <= p_read7;
        p_read8_int_reg <= p_read8;
        p_read9_int_reg <= p_read9;
    end
end

assign agg_result_fu_561_p27 = 'bx;

assign agg_result_fu_561_p28 = ((or_ln117_876_fu_549_p2[0:0] == 1'b1) ? select_ln117_925_reg_749 : 5'd20);

assign and_ln102_910_fu_303_p2 = (icmp_ln86_reg_621 & icmp_ln86_948_reg_636);

assign and_ln102_911_fu_307_p2 = (icmp_ln86_949_reg_642 & and_ln104_fu_297_p2);

assign and_ln102_912_fu_339_p2 = (icmp_ln86_950_reg_648_pp0_iter1_reg & and_ln102_910_reg_696);

assign and_ln102_913_fu_343_p2 = (icmp_ln86_951_reg_654_pp0_iter1_reg & and_ln104_185_fu_334_p2);

assign and_ln102_914_fu_348_p2 = (tmp_reg_660_pp0_iter1_reg & and_ln104_186_reg_703);

assign and_ln102_915_fu_352_p2 = (icmp_ln86_953_reg_666_pp0_iter1_reg & and_ln102_912_fu_339_p2);

assign and_ln102_916_fu_442_p2 = (and_ln102_920_fu_437_p2 & and_ln102_910_reg_696_pp0_iter2_reg);

assign and_ln102_917_fu_447_p2 = (icmp_ln86_955_reg_676_pp0_iter2_reg & and_ln102_913_reg_720);

assign and_ln102_918_fu_456_p2 = (and_ln104_185_reg_715 & and_ln102_921_fu_451_p2);

assign and_ln102_919_fu_544_p2 = (and_ln104_186_reg_703_pp0_iter3_reg & and_ln102_922_fu_539_p2);

assign and_ln102_920_fu_437_p2 = (xor_ln104_457_fu_427_p2 & icmp_ln86_954_reg_671_pp0_iter2_reg);

assign and_ln102_921_fu_451_p2 = (xor_ln104_458_fu_432_p2 & icmp_ln86_956_reg_681_pp0_iter2_reg);

assign and_ln102_922_fu_539_p2 = (xor_ln104_459_fu_534_p2 & icmp_ln86_957_reg_686_pp0_iter3_reg);

assign and_ln102_fu_287_p2 = (xor_ln104_fu_282_p2 & icmp_ln86_947_reg_630);

assign and_ln104_185_fu_334_p2 = (xor_ln104_455_fu_329_p2 & icmp_ln86_reg_621_pp0_iter1_reg);

assign and_ln104_186_fu_317_p2 = (xor_ln104_456_fu_312_p2 & and_ln104_fu_297_p2);

assign and_ln104_fu_297_p2 = (xor_ln104_fu_282_p2 & xor_ln104_454_fu_292_p2);

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_return = agg_result_fu_561_p29;

assign icmp_ln86_947_fu_214_p2 = (($signed(p_read4_int_reg) < $signed(18'd362)) ? 1'b1 : 1'b0);

assign icmp_ln86_948_fu_220_p2 = (($signed(p_read3_int_reg) < $signed(18'd20777)) ? 1'b1 : 1'b0);

assign icmp_ln86_949_fu_226_p2 = (($signed(p_read2_int_reg) < $signed(18'd261163)) ? 1'b1 : 1'b0);

assign icmp_ln86_950_fu_232_p2 = (($signed(p_read6_int_reg) < $signed(18'd260035)) ? 1'b1 : 1'b0);

assign icmp_ln86_951_fu_238_p2 = (($signed(p_read8_int_reg) < $signed(18'd745)) ? 1'b1 : 1'b0);

assign icmp_ln86_953_fu_252_p2 = (($signed(p_read9_int_reg) < $signed(18'd11)) ? 1'b1 : 1'b0);

assign icmp_ln86_954_fu_258_p2 = (($signed(p_read10_int_reg) < $signed(18'd36847)) ? 1'b1 : 1'b0);

assign icmp_ln86_955_fu_264_p2 = (($signed(p_read7_int_reg) < $signed(18'd60)) ? 1'b1 : 1'b0);

assign icmp_ln86_956_fu_270_p2 = (($signed(p_read12_int_reg) < $signed(18'd109057)) ? 1'b1 : 1'b0);

assign icmp_ln86_957_fu_276_p2 = (($signed(p_read5_int_reg) < $signed(18'd633)) ? 1'b1 : 1'b0);

assign icmp_ln86_fu_208_p2 = (($signed(p_read1_int_reg) < $signed(18'd184174)) ? 1'b1 : 1'b0);

assign or_ln117_867_fu_365_p2 = (or_ln117_reg_709 | and_ln102_914_fu_348_p2);

assign or_ln117_868_fu_377_p2 = (or_ln117_867_fu_365_p2 | and_ln102_915_fu_352_p2);

assign or_ln117_869_fu_395_p2 = (or_ln117_867_fu_365_p2 | and_ln102_912_fu_339_p2);

assign or_ln117_870_fu_461_p2 = (or_ln117_869_reg_726 | and_ln102_916_fu_442_p2);

assign or_ln117_871_fu_417_p2 = (or_ln117_867_fu_365_p2 | and_ln102_910_reg_696);

assign or_ln117_872_fu_473_p2 = (or_ln117_871_reg_736 | and_ln102_917_fu_447_p2);

assign or_ln117_873_fu_489_p2 = (or_ln117_871_reg_736 | and_ln102_913_reg_720);

assign or_ln117_874_fu_501_p2 = (or_ln117_873_fu_489_p2 | and_ln102_918_fu_456_p2);

assign or_ln117_875_fu_422_p2 = (or_ln117_867_fu_365_p2 | icmp_ln86_reg_621_pp0_iter1_reg);

assign or_ln117_876_fu_549_p2 = (or_ln117_875_reg_743_pp0_iter3_reg | and_ln102_919_fu_544_p2);

assign or_ln117_877_fu_357_p2 = (xor_ln104_454_reg_691 | icmp_ln86_reg_621_pp0_iter1_reg);

assign or_ln117_fu_323_p2 = (and_ln102_fu_287_p2 | and_ln102_911_fu_307_p2);

assign select_ln117_917_fu_383_p3 = ((or_ln117_867_fu_365_p2[0:0] == 1'b1) ? select_ln117_fu_370_p3 : 2'd3);

assign select_ln117_918_fu_401_p3 = ((or_ln117_868_fu_377_p2[0:0] == 1'b1) ? zext_ln117_105_fu_391_p1 : 3'd4);

assign select_ln117_919_fu_409_p3 = ((or_ln117_869_fu_395_p2[0:0] == 1'b1) ? select_ln117_918_fu_401_p3 : 3'd5);

assign select_ln117_920_fu_466_p3 = ((or_ln117_870_fu_461_p2[0:0] == 1'b1) ? select_ln117_919_reg_731 : 3'd6);

assign select_ln117_921_fu_478_p3 = ((or_ln117_871_reg_736[0:0] == 1'b1) ? select_ln117_920_fu_466_p3 : 3'd7);

assign select_ln117_922_fu_493_p3 = ((or_ln117_872_fu_473_p2[0:0] == 1'b1) ? zext_ln117_106_fu_485_p1 : 4'd8);

assign select_ln117_923_fu_507_p3 = ((or_ln117_873_fu_489_p2[0:0] == 1'b1) ? select_ln117_922_fu_493_p3 : 4'd9);

assign select_ln117_924_fu_515_p3 = ((or_ln117_874_fu_501_p2[0:0] == 1'b1) ? select_ln117_923_fu_507_p3 : 4'd10);

assign select_ln117_925_fu_527_p3 = ((or_ln117_875_reg_743[0:0] == 1'b1) ? zext_ln117_107_fu_523_p1 : 5'd19);

assign select_ln117_fu_370_p3 = ((or_ln117_reg_709[0:0] == 1'b1) ? zext_ln117_fu_361_p1 : 2'd2);

assign xor_ln104_454_fu_292_p2 = (icmp_ln86_947_reg_630 ^ 1'd1);

assign xor_ln104_455_fu_329_p2 = (icmp_ln86_948_reg_636_pp0_iter1_reg ^ 1'd1);

assign xor_ln104_456_fu_312_p2 = (icmp_ln86_949_reg_642 ^ 1'd1);

assign xor_ln104_457_fu_427_p2 = (icmp_ln86_950_reg_648_pp0_iter2_reg ^ 1'd1);

assign xor_ln104_458_fu_432_p2 = (icmp_ln86_951_reg_654_pp0_iter2_reg ^ 1'd1);

assign xor_ln104_459_fu_534_p2 = (tmp_reg_660_pp0_iter3_reg ^ 1'd1);

assign xor_ln104_fu_282_p2 = (icmp_ln86_reg_621 ^ 1'd1);

assign zext_ln117_105_fu_391_p1 = select_ln117_917_fu_383_p3;

assign zext_ln117_106_fu_485_p1 = select_ln117_921_fu_478_p3;

assign zext_ln117_107_fu_523_p1 = select_ln117_924_fu_515_p3;

assign zext_ln117_fu_361_p1 = or_ln117_877_fu_357_p2;

endmodule //conifer_jettag_accelerator_decision_function_36

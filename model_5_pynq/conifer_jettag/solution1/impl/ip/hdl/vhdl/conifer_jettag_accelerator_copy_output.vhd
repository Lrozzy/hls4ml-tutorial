-- ==============================================================
-- Generated by Vitis HLS v2024.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity conifer_jettag_accelerator_copy_output is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    m_axi_gmem0_AWVALID : OUT STD_LOGIC;
    m_axi_gmem0_AWREADY : IN STD_LOGIC;
    m_axi_gmem0_AWADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_WVALID : OUT STD_LOGIC;
    m_axi_gmem0_WREADY : IN STD_LOGIC;
    m_axi_gmem0_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem0_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_WLAST : OUT STD_LOGIC;
    m_axi_gmem0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_ARVALID : OUT STD_LOGIC;
    m_axi_gmem0_ARREADY : IN STD_LOGIC;
    m_axi_gmem0_ARADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_RVALID : IN STD_LOGIC;
    m_axi_gmem0_RREADY : OUT STD_LOGIC;
    m_axi_gmem0_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem0_RLAST : IN STD_LOGIC;
    m_axi_gmem0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
    m_axi_gmem0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_BVALID : IN STD_LOGIC;
    m_axi_gmem0_BREADY : OUT STD_LOGIC;
    m_axi_gmem0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    ap_ce : IN STD_LOGIC;
    n : IN STD_LOGIC_VECTOR (30 downto 0);
    score_int_0_read : IN STD_LOGIC_VECTOR (17 downto 0);
    score_int_1_read : IN STD_LOGIC_VECTOR (17 downto 0);
    score_int_2_read : IN STD_LOGIC_VECTOR (17 downto 0);
    score_int_3_read : IN STD_LOGIC_VECTOR (17 downto 0);
    score_int_4_read : IN STD_LOGIC_VECTOR (17 downto 0);
    score_out : IN STD_LOGIC_VECTOR (31 downto 0);
    gmem0_blk_n_AW : OUT STD_LOGIC;
    gmem0_blk_n_W : OUT STD_LOGIC;
    gmem0_blk_n_B : OUT STD_LOGIC );
end;


architecture behav of conifer_jettag_accelerator_copy_output is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv18_0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv5_B : STD_LOGIC_VECTOR (4 downto 0) := "01011";
    constant ap_const_lv32_FFFFFFE7 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111100111";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_FFFFFFE8 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111101000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv18_3FFFF : STD_LOGIC_VECTOR (17 downto 0) := "111111111111111111";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv8_8 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_const_lv8_7F : STD_LOGIC_VECTOR (7 downto 0) := "01111111";
    constant ap_const_lv8_7E : STD_LOGIC_VECTOR (7 downto 0) := "01111110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal score_int_0_read_1_reg_1633 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal tmp_reg_1639 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_1639_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln21_fu_216_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal sub_ln21_reg_1645 : STD_LOGIC_VECTOR (17 downto 0);
    signal score_int_1_read_1_reg_1650 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal icmp_ln21_fu_222_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln21_reg_1656 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln21_reg_1656_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln21_fu_227_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal select_ln21_reg_1661 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_3_fu_254_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_reg_1668 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln21_fu_262_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln21_reg_1673 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_44_reg_1678 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_44_reg_1678_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln21_3_fu_274_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal sub_ln21_3_reg_1684 : STD_LOGIC_VECTOR (17 downto 0);
    signal score_int_2_read_1_reg_1689 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_block_state18_pp0_stage2_iter3 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal sub_ln21_1_fu_280_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln21_1_reg_1695 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln21_1_fu_285_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln21_1_reg_1702 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln21_4_fu_289_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln21_4_reg_1707 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln21_4_reg_1707_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln21_2_fu_294_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal select_ln21_2_reg_1712 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_4_fu_321_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_reg_1719 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln21_4_fu_329_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln21_4_reg_1724 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_49_reg_1729 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_49_reg_1729_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln21_6_fu_341_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal sub_ln21_6_reg_1735 : STD_LOGIC_VECTOR (17 downto 0);
    signal score_int_3_read_1_reg_1740 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal sub_ln21_20_fu_347_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal sub_ln21_20_reg_1746 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln21_1_fu_352_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln21_1_reg_1751 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln21_2_fu_357_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln21_2_reg_1756 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln21_4_fu_386_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln21_4_reg_1761 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln21_4_fu_392_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln21_4_reg_1766 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln21_6_fu_397_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln21_6_reg_1773 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln21_8_fu_401_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln21_8_reg_1778 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln21_8_reg_1778_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln21_4_fu_406_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal select_ln21_4_reg_1783 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_10_fu_433_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_reg_1790 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln21_7_fu_441_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln21_7_reg_1795 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_54_reg_1800 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_54_reg_1800_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln21_9_fu_453_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal sub_ln21_9_reg_1806 : STD_LOGIC_VECTOR (17 downto 0);
    signal score_int_4_read_1_reg_1811 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal add_ln21_fu_459_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln21_reg_1817 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_40_reg_1824 : STD_LOGIC_VECTOR (30 downto 0);
    signal lshr_ln21_10_fu_477_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal lshr_ln21_10_reg_1829 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln21_fu_483_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sub_ln21_21_fu_509_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal sub_ln21_21_reg_1850 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln21_7_fu_514_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln21_7_reg_1855 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln21_5_fu_519_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln21_5_reg_1860 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln21_7_fu_524_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln21_7_reg_1865 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln21_8_fu_529_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln21_8_reg_1872 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln21_12_fu_533_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln21_12_reg_1877 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln21_12_reg_1877_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln21_6_fu_538_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal select_ln21_6_reg_1882 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_14_fu_565_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_14_reg_1889 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln21_9_fu_573_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln21_9_reg_1894 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_59_reg_1899 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_59_reg_1899_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln21_12_fu_585_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal sub_ln21_12_reg_1905 : STD_LOGIC_VECTOR (17 downto 0);
    signal trunc_ln21_5_reg_1910 : STD_LOGIC_VECTOR (29 downto 0);
    signal or_ln_fu_653_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_ln_reg_1915 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln21_3_fu_661_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln21_3_reg_1920 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_489_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal lshr_ln21_reg_1925 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_498_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln21_reg_1930 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln21_6_fu_666_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln21_6_reg_1935 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_45_reg_1942 : STD_LOGIC_VECTOR (30 downto 0);
    signal lshr_ln21_11_fu_684_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal lshr_ln21_11_reg_1947 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln21_4_fu_690_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sub_ln21_22_fu_711_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal sub_ln21_22_reg_1968 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln21_11_fu_716_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln21_11_reg_1973 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln21_8_fu_721_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln21_8_reg_1978 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln21_10_fu_726_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln21_10_reg_1983 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln21_10_fu_731_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln21_10_reg_1990 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln21_16_fu_735_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln21_16_reg_1995 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln21_16_reg_1995_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln21_8_fu_740_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal select_ln21_8_reg_2000 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_18_fu_767_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_reg_2007 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln21_11_fu_775_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln21_11_reg_2012 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln21_2_fu_787_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln21_2_reg_2017 : STD_LOGIC_VECTOR (63 downto 0);
    signal lshr_ln21_1_reg_2022 : STD_LOGIC_VECTOR (62 downto 0);
    signal sub_ln21_15_fu_803_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln21_15_reg_2027 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln21_1_fu_860_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_ln21_1_reg_2032 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln21_7_fu_868_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln21_7_reg_2037 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_696_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal lshr_ln21_2_reg_2042 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_705_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln21_1_reg_2047 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln21_10_fu_873_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln21_10_reg_2052 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_50_reg_2059 : STD_LOGIC_VECTOR (30 downto 0);
    signal lshr_ln21_12_fu_891_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal lshr_ln21_12_reg_2064 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln21_8_fu_897_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sub_ln21_23_fu_918_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal sub_ln21_23_reg_2085 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln21_15_fu_923_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln21_15_reg_2090 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln21_11_fu_928_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln21_11_reg_2095 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln21_13_fu_933_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln21_13_reg_2100 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln21_12_fu_938_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln21_12_reg_2107 : STD_LOGIC_VECTOR (4 downto 0);
    signal empty_fu_988_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_reg_2112 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln21_8_fu_1003_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln21_8_reg_2117 : STD_LOGIC_VECTOR (63 downto 0);
    signal lshr_ln21_3_reg_2122 : STD_LOGIC_VECTOR (62 downto 0);
    signal sub_ln21_16_fu_1019_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln21_16_reg_2127 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln21_2_fu_1076_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_ln21_2_reg_2132 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln21_11_fu_1084_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln21_11_reg_2137 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_903_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal lshr_ln21_4_reg_2142 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_912_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln21_2_reg_2147 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln21_14_fu_1089_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln21_14_reg_2152 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_55_reg_2159 : STD_LOGIC_VECTOR (30 downto 0);
    signal lshr_ln21_13_fu_1107_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal lshr_ln21_13_reg_2164 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln21_12_fu_1113_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sub_ln21_24_fu_1134_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal sub_ln21_24_reg_2185 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln21_19_fu_1139_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln21_19_reg_2190 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln21_14_fu_1144_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln21_14_reg_2195 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_28_fu_1205_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_28_reg_2210 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln21_12_fu_1220_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln21_12_reg_2215 : STD_LOGIC_VECTOR (63 downto 0);
    signal lshr_ln21_5_reg_2220 : STD_LOGIC_VECTOR (62 downto 0);
    signal sub_ln21_17_fu_1236_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln21_17_reg_2225 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln21_3_fu_1293_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_ln21_3_reg_2230 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln21_15_fu_1301_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln21_15_reg_2235 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1119_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal lshr_ln21_6_reg_2240 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1128_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln21_3_reg_2245 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln21_18_fu_1306_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln21_18_reg_2250 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_60_reg_2257 : STD_LOGIC_VECTOR (30 downto 0);
    signal lshr_ln21_14_fu_1324_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal lshr_ln21_14_reg_2262 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln21_16_fu_1330_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_29_fu_1397_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_29_reg_2283 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln21_16_fu_1412_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln21_16_reg_2288 : STD_LOGIC_VECTOR (63 downto 0);
    signal lshr_ln21_7_reg_2293 : STD_LOGIC_VECTOR (62 downto 0);
    signal sub_ln21_18_fu_1428_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln21_18_reg_2298 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln21_4_fu_1485_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_ln21_4_reg_2303 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln21_19_fu_1493_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln21_19_reg_2308 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1336_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal lshr_ln21_8_reg_2313 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1345_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln21_4_reg_2318 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_30_fu_1544_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_30_reg_2323 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln21_20_fu_1559_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln21_20_reg_2328 : STD_LOGIC_VECTOR (63 downto 0);
    signal lshr_ln21_9_reg_2333 : STD_LOGIC_VECTOR (62 downto 0);
    signal sub_ln21_19_fu_1575_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln21_19_reg_2338 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_31_fu_1626_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_31_reg_2343 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_port_reg_n : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_port_reg_score_int_1_read : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_port_reg_score_int_2_read : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_port_reg_score_int_3_read : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_port_reg_score_int_4_read : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_port_reg_score_out : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln21_fu_1149_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage3_01001 : BOOLEAN;
    signal ap_block_pp0_stage4_01001 : BOOLEAN;
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal ap_block_pp0_stage1_01001 : BOOLEAN;
    signal ap_block_pp0_stage2_01001 : BOOLEAN;
    signal tmp_1_fu_232_p4 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_2_fu_242_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln21_1_fu_250_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_299_p4 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_8_fu_309_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln21_2_fu_317_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln21_2_fu_362_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal trunc_ln21_3_fu_374_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal p_shl_fu_366_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_shl1_fu_378_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_fu_411_p4 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_9_fu_421_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln21_3_fu_429_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln21_25_fu_474_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_489_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_498_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_12_fu_543_p4 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_13_fu_553_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln21_4_fu_561_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln21_5_fu_504_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln21_5_fu_606_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal icmp_ln21_1_fu_601_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln21_2_fu_610_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_41_fu_622_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_42_fu_635_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln21_fu_629_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln21_fu_641_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal phi_ln21_fu_616_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln21_5_fu_647_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln21_26_fu_681_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_696_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_705_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_16_fu_745_p4 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_17_fu_755_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln21_5_fu_763_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal cond50_i_i_fu_779_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln21_3_fu_784_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln21_6_fu_813_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal icmp_ln21_5_fu_808_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln21_6_fu_817_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_46_fu_829_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_47_fu_842_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln21_1_fu_836_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln21_1_fu_848_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal phi_ln21_1_fu_823_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln21_fu_854_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln21_27_fu_888_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_903_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_912_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_43_fu_945_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln21_1_fu_952_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln21_3_fu_960_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln21_20_fu_942_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_7_fu_965_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal pi_assign_fu_972_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal LD_fu_984_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal cond50_i_i_1_fu_995_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln21_7_fu_1000_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln21_7_fu_1029_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal icmp_ln21_9_fu_1024_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln21_10_fu_1033_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_51_fu_1045_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_52_fu_1058_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln21_2_fu_1052_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln21_2_fu_1064_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal phi_ln21_2_fu_1039_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln21_6_fu_1070_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln21_28_fu_1104_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1119_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1128_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_48_fu_1162_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln21_3_fu_1169_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln21_9_fu_1177_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln21_21_fu_1159_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_5_fu_1182_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal pi_assign_1_fu_1189_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal LD_1_fu_1201_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal cond50_i_i_2_fu_1212_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln21_11_fu_1217_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln21_8_fu_1246_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal icmp_ln21_13_fu_1241_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln21_14_fu_1250_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_56_fu_1262_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_57_fu_1275_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln21_3_fu_1269_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln21_3_fu_1281_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal phi_ln21_3_fu_1256_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln21_7_fu_1287_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln21_29_fu_1321_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1336_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1345_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_53_fu_1354_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln21_5_fu_1361_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln21_13_fu_1369_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln21_22_fu_1351_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_11_fu_1374_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal pi_assign_2_fu_1381_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal LD_2_fu_1393_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal cond50_i_i_3_fu_1404_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln21_15_fu_1409_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln21_9_fu_1438_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal icmp_ln21_17_fu_1433_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln21_18_fu_1442_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_61_fu_1454_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_62_fu_1467_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln21_4_fu_1461_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln21_4_fu_1473_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal phi_ln21_4_fu_1448_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln21_8_fu_1479_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_58_fu_1501_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln21_7_fu_1508_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln21_17_fu_1516_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln21_23_fu_1498_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_15_fu_1521_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal pi_assign_3_fu_1528_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal LD_3_fu_1540_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal cond50_i_i_4_fu_1551_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln21_19_fu_1556_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_63_fu_1583_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln21_9_fu_1590_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln21_21_fu_1598_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln21_24_fu_1580_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_19_fu_1603_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal pi_assign_4_fu_1610_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal LD_4_fu_1622_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_489_ce : STD_LOGIC;
    signal grp_fu_498_ce : STD_LOGIC;
    signal grp_fu_696_ce : STD_LOGIC;
    signal grp_fu_705_ce : STD_LOGIC;
    signal grp_fu_903_ce : STD_LOGIC;
    signal grp_fu_912_ce : STD_LOGIC;
    signal grp_fu_1119_ce : STD_LOGIC;
    signal grp_fu_1128_ce : STD_LOGIC;
    signal grp_fu_1336_ce : STD_LOGIC;
    signal grp_fu_1345_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_idle_pp0_1to3 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_idle_pp0_0to2 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_523 : BOOLEAN;
    signal ap_condition_532 : BOOLEAN;
    signal ap_condition_541 : BOOLEAN;
    signal ap_condition_550 : BOOLEAN;
    signal ap_condition_559 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component conifer_jettag_accelerator_lshr_64ns_32ns_64_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        OP : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component conifer_jettag_accelerator_shl_64ns_32ns_64_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        OP : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;



begin
    lshr_64ns_32ns_64_2_1_U2882 : component conifer_jettag_accelerator_lshr_64ns_32ns_64_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        OP => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => zext_ln21_fu_483_p1,
        din1 => grp_fu_489_p1,
        ce => grp_fu_489_ce,
        dout => grp_fu_489_p2);

    shl_64ns_32ns_64_2_1_U2883 : component conifer_jettag_accelerator_shl_64ns_32ns_64_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        OP => 0,
        din0_WIDTH => 64,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => zext_ln21_fu_483_p1,
        din1 => grp_fu_498_p1,
        ce => grp_fu_498_ce,
        dout => grp_fu_498_p2);

    lshr_64ns_32ns_64_2_1_U2884 : component conifer_jettag_accelerator_lshr_64ns_32ns_64_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        OP => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => zext_ln21_4_fu_690_p1,
        din1 => grp_fu_696_p1,
        ce => grp_fu_696_ce,
        dout => grp_fu_696_p2);

    shl_64ns_32ns_64_2_1_U2885 : component conifer_jettag_accelerator_shl_64ns_32ns_64_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        OP => 0,
        din0_WIDTH => 64,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => zext_ln21_4_fu_690_p1,
        din1 => grp_fu_705_p1,
        ce => grp_fu_705_ce,
        dout => grp_fu_705_p2);

    lshr_64ns_32ns_64_2_1_U2886 : component conifer_jettag_accelerator_lshr_64ns_32ns_64_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        OP => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => zext_ln21_8_fu_897_p1,
        din1 => grp_fu_903_p1,
        ce => grp_fu_903_ce,
        dout => grp_fu_903_p2);

    shl_64ns_32ns_64_2_1_U2887 : component conifer_jettag_accelerator_shl_64ns_32ns_64_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        OP => 0,
        din0_WIDTH => 64,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => zext_ln21_8_fu_897_p1,
        din1 => grp_fu_912_p1,
        ce => grp_fu_912_ce,
        dout => grp_fu_912_p2);

    lshr_64ns_32ns_64_2_1_U2888 : component conifer_jettag_accelerator_lshr_64ns_32ns_64_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        OP => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => zext_ln21_12_fu_1113_p1,
        din1 => grp_fu_1119_p1,
        ce => grp_fu_1119_ce,
        dout => grp_fu_1119_p2);

    shl_64ns_32ns_64_2_1_U2889 : component conifer_jettag_accelerator_shl_64ns_32ns_64_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        OP => 0,
        din0_WIDTH => 64,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => zext_ln21_12_fu_1113_p1,
        din1 => grp_fu_1128_p1,
        ce => grp_fu_1128_ce,
        dout => grp_fu_1128_p2);

    lshr_64ns_32ns_64_2_1_U2890 : component conifer_jettag_accelerator_lshr_64ns_32ns_64_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        OP => 1,
        din0_WIDTH => 64,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => zext_ln21_16_fu_1330_p1,
        din1 => grp_fu_1336_p1,
        ce => grp_fu_1336_ce,
        dout => grp_fu_1336_p2);

    shl_64ns_32ns_64_2_1_U2891 : component conifer_jettag_accelerator_shl_64ns_32ns_64_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        OP => 0,
        din0_WIDTH => 64,
        din1_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => zext_ln21_16_fu_1330_p1,
        din1 => grp_fu_1345_p1,
        ce => grp_fu_1345_ce,
        dout => grp_fu_1345_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone))) then 
                    ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                add_ln21_10_reg_2052 <= add_ln21_10_fu_873_p2;
                add_ln21_15_reg_2090 <= add_ln21_15_fu_923_p2;
                add_ln21_2_reg_2017 <= add_ln21_2_fu_787_p2;
                empty_31_reg_2343 <= empty_31_fu_1626_p3;
                icmp_ln21_7_reg_2037 <= icmp_ln21_7_fu_868_p2;
                icmp_ln21_reg_1656 <= icmp_ln21_fu_222_p2;
                icmp_ln21_reg_1656_pp0_iter1_reg <= icmp_ln21_reg_1656;
                lshr_ln21_12_reg_2064 <= lshr_ln21_12_fu_891_p2;
                lshr_ln21_1_reg_2022 <= add_ln21_2_fu_787_p2(63 downto 1);
                lshr_ln21_2_reg_2042 <= grp_fu_696_p2;
                    or_ln21_1_reg_2032(0) <= or_ln21_1_fu_860_p3(0);
                score_int_1_read_1_reg_1650 <= ap_port_reg_score_int_1_read;
                select_ln21_reg_1661 <= select_ln21_fu_227_p3;
                shl_ln21_1_reg_2047 <= grp_fu_705_p2;
                sub_ln21_11_reg_2095 <= sub_ln21_11_fu_928_p2;
                sub_ln21_13_reg_2100 <= sub_ln21_13_fu_933_p2;
                sub_ln21_15_reg_2027 <= sub_ln21_15_fu_803_p2;
                sub_ln21_23_reg_2085 <= sub_ln21_23_fu_918_p2;
                sub_ln21_3_reg_1684 <= sub_ln21_3_fu_274_p2;
                tmp_3_reg_1668 <= tmp_3_fu_254_p3;
                tmp_44_reg_1678 <= ap_port_reg_score_int_1_read(17 downto 17);
                tmp_44_reg_1678_pp0_iter1_reg <= tmp_44_reg_1678;
                tmp_50_reg_2059 <= add_ln21_10_fu_873_p2(31 downto 1);
                trunc_ln21_12_reg_2107 <= trunc_ln21_12_fu_938_p1;
                trunc_ln21_reg_1673 <= trunc_ln21_fu_262_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln21_11_reg_1973 <= add_ln21_11_fu_716_p2;
                add_ln21_20_reg_2328 <= add_ln21_20_fu_1559_p2;
                add_ln21_6_reg_1935 <= add_ln21_6_fu_666_p2;
                empty_30_reg_2323 <= empty_30_fu_1544_p3;
                icmp_ln21_16_reg_1995 <= icmp_ln21_16_fu_735_p2;
                icmp_ln21_16_reg_1995_pp0_iter2_reg <= icmp_ln21_16_reg_1995;
                icmp_ln21_3_reg_1920 <= icmp_ln21_3_fu_661_p2;
                lshr_ln21_11_reg_1947 <= lshr_ln21_11_fu_684_p2;
                lshr_ln21_9_reg_2333 <= add_ln21_20_fu_1559_p2(63 downto 1);
                lshr_ln21_reg_1925 <= grp_fu_489_p2;
                    or_ln_reg_1915(0) <= or_ln_fu_653_p3(0);
                score_int_0_read_1_reg_1633 <= score_int_0_read;
                select_ln21_8_reg_2000 <= select_ln21_8_fu_740_p3;
                shl_ln21_reg_1930 <= grp_fu_498_p2;
                sub_ln21_10_reg_1983 <= sub_ln21_10_fu_726_p2;
                sub_ln21_19_reg_2338 <= sub_ln21_19_fu_1575_p2;
                sub_ln21_22_reg_1968 <= sub_ln21_22_fu_711_p2;
                sub_ln21_8_reg_1978 <= sub_ln21_8_fu_721_p2;
                sub_ln21_reg_1645 <= sub_ln21_fu_216_p2;
                tmp_18_reg_2007 <= tmp_18_fu_767_p3;
                tmp_45_reg_1942 <= add_ln21_6_fu_666_p2(31 downto 1);
                tmp_reg_1639 <= score_int_0_read(17 downto 17);
                tmp_reg_1639_pp0_iter1_reg <= tmp_reg_1639;
                trunc_ln21_10_reg_1990 <= trunc_ln21_10_fu_731_p1;
                trunc_ln21_11_reg_2012 <= trunc_ln21_11_fu_775_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then
                add_ln21_12_reg_2215 <= add_ln21_12_fu_1220_p2;
                add_ln21_18_reg_2250 <= add_ln21_18_fu_1306_p2;
                add_ln21_1_reg_1751 <= add_ln21_1_fu_352_p2;
                    add_ln21_4_reg_1761(31 downto 2) <= add_ln21_4_fu_386_p2(31 downto 2);
                empty_28_reg_2210 <= empty_28_fu_1205_p3;
                icmp_ln21_15_reg_2235 <= icmp_ln21_15_fu_1301_p2;
                icmp_ln21_8_reg_1778 <= icmp_ln21_8_fu_401_p2;
                icmp_ln21_8_reg_1778_pp0_iter1_reg <= icmp_ln21_8_reg_1778;
                lshr_ln21_14_reg_2262 <= lshr_ln21_14_fu_1324_p2;
                lshr_ln21_5_reg_2220 <= add_ln21_12_fu_1220_p2(63 downto 1);
                lshr_ln21_6_reg_2240 <= grp_fu_1119_p2;
                    or_ln21_3_reg_2230(0) <= or_ln21_3_fu_1293_p3(0);
                score_int_3_read_1_reg_1740 <= ap_port_reg_score_int_3_read;
                select_ln21_4_reg_1783 <= select_ln21_4_fu_406_p3;
                shl_ln21_3_reg_2245 <= grp_fu_1128_p2;
                sub_ln21_17_reg_2225 <= sub_ln21_17_fu_1236_p2;
                sub_ln21_20_reg_1746 <= sub_ln21_20_fu_347_p2;
                sub_ln21_2_reg_1756 <= sub_ln21_2_fu_357_p2;
                sub_ln21_4_reg_1766 <= sub_ln21_4_fu_392_p2;
                sub_ln21_9_reg_1806 <= sub_ln21_9_fu_453_p2;
                tmp_10_reg_1790 <= tmp_10_fu_433_p3;
                tmp_54_reg_1800 <= ap_port_reg_score_int_3_read(17 downto 17);
                tmp_54_reg_1800_pp0_iter1_reg <= tmp_54_reg_1800;
                tmp_60_reg_2257 <= add_ln21_18_fu_1306_p2(31 downto 1);
                trunc_ln21_6_reg_1773 <= trunc_ln21_6_fu_397_p1;
                trunc_ln21_7_reg_1795 <= trunc_ln21_7_fu_441_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                add_ln21_14_reg_2152 <= add_ln21_14_fu_1089_p2;
                add_ln21_19_reg_2190 <= add_ln21_19_fu_1139_p2;
                add_ln21_8_reg_2117 <= add_ln21_8_fu_1003_p2;
                empty_reg_2112 <= empty_fu_988_p3;
                icmp_ln21_11_reg_2137 <= icmp_ln21_11_fu_1084_p2;
                icmp_ln21_4_reg_1707 <= icmp_ln21_4_fu_289_p2;
                icmp_ln21_4_reg_1707_pp0_iter1_reg <= icmp_ln21_4_reg_1707;
                lshr_ln21_13_reg_2164 <= lshr_ln21_13_fu_1107_p2;
                lshr_ln21_3_reg_2122 <= add_ln21_8_fu_1003_p2(63 downto 1);
                lshr_ln21_4_reg_2142 <= grp_fu_903_p2;
                    or_ln21_2_reg_2132(0) <= or_ln21_2_fu_1076_p3(0);
                score_int_2_read_1_reg_1689 <= ap_port_reg_score_int_2_read;
                select_ln21_2_reg_1712 <= select_ln21_2_fu_294_p3;
                shl_ln21_2_reg_2147 <= grp_fu_912_p2;
                sub_ln21_14_reg_2195 <= sub_ln21_14_fu_1144_p2;
                sub_ln21_16_reg_2127 <= sub_ln21_16_fu_1019_p2;
                sub_ln21_1_reg_1695 <= sub_ln21_1_fu_280_p2;
                sub_ln21_24_reg_2185 <= sub_ln21_24_fu_1134_p2;
                sub_ln21_6_reg_1735 <= sub_ln21_6_fu_341_p2;
                tmp_49_reg_1729 <= ap_port_reg_score_int_2_read(17 downto 17);
                tmp_49_reg_1729_pp0_iter1_reg <= tmp_49_reg_1729;
                tmp_4_reg_1719 <= tmp_4_fu_321_p3;
                tmp_55_reg_2159 <= add_ln21_14_fu_1089_p2(31 downto 1);
                trunc_ln21_1_reg_1702 <= trunc_ln21_1_fu_285_p1;
                trunc_ln21_4_reg_1724 <= trunc_ln21_4_fu_329_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then
                add_ln21_16_reg_2288 <= add_ln21_16_fu_1412_p2;
                add_ln21_7_reg_1855 <= add_ln21_7_fu_514_p2;
                add_ln21_reg_1817 <= add_ln21_fu_459_p2;
                empty_29_reg_2283 <= empty_29_fu_1397_p3;
                icmp_ln21_12_reg_1877 <= icmp_ln21_12_fu_533_p2;
                icmp_ln21_12_reg_1877_pp0_iter1_reg <= icmp_ln21_12_reg_1877;
                icmp_ln21_19_reg_2308 <= icmp_ln21_19_fu_1493_p2;
                lshr_ln21_10_reg_1829 <= lshr_ln21_10_fu_477_p2;
                lshr_ln21_7_reg_2293 <= add_ln21_16_fu_1412_p2(63 downto 1);
                lshr_ln21_8_reg_2313 <= grp_fu_1336_p2;
                    or_ln21_4_reg_2303(0) <= or_ln21_4_fu_1485_p3(0);
                score_int_4_read_1_reg_1811 <= ap_port_reg_score_int_4_read;
                select_ln21_6_reg_1882 <= select_ln21_6_fu_538_p3;
                shl_ln21_4_reg_2318 <= grp_fu_1345_p2;
                sub_ln21_12_reg_1905 <= sub_ln21_12_fu_585_p2;
                sub_ln21_18_reg_2298 <= sub_ln21_18_fu_1428_p2;
                sub_ln21_21_reg_1850 <= sub_ln21_21_fu_509_p2;
                sub_ln21_5_reg_1860 <= sub_ln21_5_fu_519_p2;
                sub_ln21_7_reg_1865 <= sub_ln21_7_fu_524_p2;
                tmp_14_reg_1889 <= tmp_14_fu_565_p3;
                tmp_40_reg_1824 <= add_ln21_fu_459_p2(31 downto 1);
                tmp_59_reg_1899 <= ap_port_reg_score_int_4_read(17 downto 17);
                tmp_59_reg_1899_pp0_iter1_reg <= tmp_59_reg_1899;
                trunc_ln21_5_reg_1910 <= add_ln21_5_fu_504_p2(31 downto 2);
                trunc_ln21_8_reg_1872 <= trunc_ln21_8_fu_529_p1;
                trunc_ln21_9_reg_1894 <= trunc_ln21_9_fu_573_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_port_reg_n <= n;
                ap_port_reg_score_int_1_read <= score_int_1_read;
                ap_port_reg_score_int_2_read <= score_int_2_read;
                ap_port_reg_score_int_3_read <= score_int_3_read;
                ap_port_reg_score_int_4_read <= score_int_4_read;
                ap_port_reg_score_out <= score_out;
            end if;
        end if;
    end process;
    add_ln21_4_reg_1761(1 downto 0) <= "00";
    or_ln_reg_1915(1) <= '0';
    or_ln21_1_reg_2032(1) <= '0';
    or_ln21_2_reg_2132(1) <= '0';
    or_ln21_3_reg_2230(1) <= '0';
    or_ln21_4_reg_2303(1) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_block_pp0_stage4_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage0_subdone, ap_idle_pp0_1to3, ap_block_pp0_stage1_subdone, ap_reset_idle_pp0, ap_block_pp0_stage3_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_idle_pp0_1to3 = ap_const_logic_1) and (ap_start = ap_const_logic_0))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if (((ap_reset_idle_pp0 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                elsif (((ap_reset_idle_pp0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXX";
        end case;
    end process;
    LD_1_fu_1201_p1 <= pi_assign_1_fu_1189_p5(32 - 1 downto 0);
    LD_2_fu_1393_p1 <= pi_assign_2_fu_1381_p5(32 - 1 downto 0);
    LD_3_fu_1540_p1 <= pi_assign_3_fu_1528_p5(32 - 1 downto 0);
    LD_4_fu_1622_p1 <= pi_assign_4_fu_1610_p5(32 - 1 downto 0);
    LD_fu_984_p1 <= pi_assign_fu_972_p5(32 - 1 downto 0);
    add_ln21_10_fu_873_p2 <= std_logic_vector(unsigned(sub_ln21_7_reg_1865) + unsigned(ap_const_lv32_FFFFFFE8));
    add_ln21_11_fu_716_p2 <= std_logic_vector(unsigned(sub_ln21_7_reg_1865) + unsigned(ap_const_lv32_FFFFFFE7));
    add_ln21_12_fu_1220_p2 <= std_logic_vector(unsigned(cond50_i_i_2_fu_1212_p3) + unsigned(zext_ln21_11_fu_1217_p1));
    add_ln21_13_fu_1369_p2 <= std_logic_vector(unsigned(sub_ln21_17_reg_2225) + unsigned(select_ln21_5_fu_1361_p3));
    add_ln21_14_fu_1089_p2 <= std_logic_vector(unsigned(sub_ln21_10_reg_1983) + unsigned(ap_const_lv32_FFFFFFE8));
    add_ln21_15_fu_923_p2 <= std_logic_vector(unsigned(sub_ln21_10_reg_1983) + unsigned(ap_const_lv32_FFFFFFE7));
    add_ln21_16_fu_1412_p2 <= std_logic_vector(unsigned(cond50_i_i_3_fu_1404_p3) + unsigned(zext_ln21_15_fu_1409_p1));
    add_ln21_17_fu_1516_p2 <= std_logic_vector(unsigned(sub_ln21_18_reg_2298) + unsigned(select_ln21_7_fu_1508_p3));
    add_ln21_18_fu_1306_p2 <= std_logic_vector(unsigned(sub_ln21_13_reg_2100) + unsigned(ap_const_lv32_FFFFFFE8));
    add_ln21_19_fu_1139_p2 <= std_logic_vector(unsigned(sub_ln21_13_reg_2100) + unsigned(ap_const_lv32_FFFFFFE7));
    add_ln21_1_fu_352_p2 <= std_logic_vector(unsigned(sub_ln21_1_reg_1695) + unsigned(ap_const_lv32_FFFFFFE7));
    add_ln21_20_fu_1559_p2 <= std_logic_vector(unsigned(cond50_i_i_4_fu_1551_p3) + unsigned(zext_ln21_19_fu_1556_p1));
    add_ln21_21_fu_1598_p2 <= std_logic_vector(unsigned(sub_ln21_19_reg_2338) + unsigned(select_ln21_9_fu_1590_p3));
    add_ln21_2_fu_787_p2 <= std_logic_vector(unsigned(cond50_i_i_fu_779_p3) + unsigned(zext_ln21_3_fu_784_p1));
    add_ln21_3_fu_960_p2 <= std_logic_vector(unsigned(sub_ln21_15_reg_2027) + unsigned(select_ln21_1_fu_952_p3));
    add_ln21_4_fu_386_p2 <= std_logic_vector(unsigned(p_shl_fu_366_p3) + unsigned(p_shl1_fu_378_p3));
    add_ln21_5_fu_504_p2 <= std_logic_vector(unsigned(add_ln21_4_reg_1761) + unsigned(ap_port_reg_score_out));
    add_ln21_6_fu_666_p2 <= std_logic_vector(unsigned(sub_ln21_4_reg_1766) + unsigned(ap_const_lv32_FFFFFFE8));
    add_ln21_7_fu_514_p2 <= std_logic_vector(unsigned(sub_ln21_4_reg_1766) + unsigned(ap_const_lv32_FFFFFFE7));
    add_ln21_8_fu_1003_p2 <= std_logic_vector(unsigned(cond50_i_i_1_fu_995_p3) + unsigned(zext_ln21_7_fu_1000_p1));
    add_ln21_9_fu_1177_p2 <= std_logic_vector(unsigned(sub_ln21_16_reg_2127) + unsigned(select_ln21_3_fu_1169_p3));
    add_ln21_fu_459_p2 <= std_logic_vector(unsigned(sub_ln21_1_reg_1695) + unsigned(ap_const_lv32_FFFFFFE8));
    and_ln21_1_fu_848_p2 <= (xor_ln21_1_fu_836_p2 and tmp_47_fu_842_p3);
    and_ln21_2_fu_1064_p2 <= (xor_ln21_2_fu_1052_p2 and tmp_52_fu_1058_p3);
    and_ln21_3_fu_1281_p2 <= (xor_ln21_3_fu_1269_p2 and tmp_57_fu_1275_p3);
    and_ln21_4_fu_1473_p2 <= (xor_ln21_4_fu_1461_p2 and tmp_62_fu_1467_p3);
    and_ln21_5_fu_606_p2 <= (select_ln21_reg_1661 and lshr_ln21_10_reg_1829);
    and_ln21_6_fu_813_p2 <= (select_ln21_2_reg_1712 and lshr_ln21_11_reg_1947);
    and_ln21_7_fu_1029_p2 <= (select_ln21_4_reg_1783 and lshr_ln21_12_reg_2064);
    and_ln21_8_fu_1246_p2 <= (select_ln21_6_reg_1882 and lshr_ln21_13_reg_2164);
    and_ln21_9_fu_1438_p2 <= (select_ln21_8_reg_2000 and lshr_ln21_14_reg_2262);
    and_ln21_fu_641_p2 <= (xor_ln21_fu_629_p2 and tmp_42_fu_635_p3);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(4);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter2, m_axi_gmem0_WREADY)
    begin
                ap_block_pp0_stage0_11001 <= ((m_axi_gmem0_WREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter2, m_axi_gmem0_WREADY, ap_ce)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_const_logic_0 = ap_ce) or ((m_axi_gmem0_WREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_11001_assign_proc : process(ap_enable_reg_pp0_iter2, m_axi_gmem0_WREADY)
    begin
                ap_block_pp0_stage1_11001 <= ((m_axi_gmem0_WREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage1_subdone_assign_proc : process(ap_enable_reg_pp0_iter2, m_axi_gmem0_WREADY, ap_ce)
    begin
                ap_block_pp0_stage1_subdone <= ((ap_const_logic_0 = ap_ce) or ((m_axi_gmem0_WREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)));
    end process;

        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage2_01001_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_state18_pp0_stage2_iter3)
    begin
                ap_block_pp0_stage2_01001 <= ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state18_pp0_stage2_iter3));
    end process;


    ap_block_pp0_stage2_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, m_axi_gmem0_AWREADY, m_axi_gmem0_WREADY, ap_block_state18_pp0_stage2_iter3)
    begin
                ap_block_pp0_stage2_11001 <= (((m_axi_gmem0_WREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((m_axi_gmem0_AWREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state18_pp0_stage2_iter3)));
    end process;


    ap_block_pp0_stage2_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, m_axi_gmem0_AWREADY, m_axi_gmem0_WREADY, ap_ce, ap_block_state18_pp0_stage2_iter3)
    begin
                ap_block_pp0_stage2_subdone <= ((ap_const_logic_0 = ap_ce) or ((m_axi_gmem0_WREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((m_axi_gmem0_AWREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state18_pp0_stage2_iter3)));
    end process;

        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage3_11001_assign_proc : process(ap_enable_reg_pp0_iter1, m_axi_gmem0_WREADY)
    begin
                ap_block_pp0_stage3_11001 <= ((m_axi_gmem0_WREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage3_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, m_axi_gmem0_WREADY, ap_ce)
    begin
                ap_block_pp0_stage3_subdone <= ((ap_const_logic_0 = ap_ce) or ((m_axi_gmem0_WREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;

        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage4_11001_assign_proc : process(ap_enable_reg_pp0_iter1, m_axi_gmem0_WREADY)
    begin
                ap_block_pp0_stage4_11001 <= ((m_axi_gmem0_WREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage4_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, m_axi_gmem0_WREADY, ap_ce)
    begin
                ap_block_pp0_stage4_subdone <= ((ap_const_logic_0 = ap_ce) or ((m_axi_gmem0_WREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_state18_pp0_stage2_iter3_assign_proc : process(m_axi_gmem0_BVALID)
    begin
                ap_block_state18_pp0_stage2_iter3 <= (m_axi_gmem0_BVALID = ap_const_logic_0);
    end process;


    ap_condition_523_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_01001)
    begin
                ap_condition_523 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_01001));
    end process;


    ap_condition_532_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_01001)
    begin
                ap_condition_532 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_01001));
    end process;


    ap_condition_541_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_01001)
    begin
                ap_condition_541 <= ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001));
    end process;


    ap_condition_550_assign_proc : process(ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_01001)
    begin
                ap_condition_550 <= ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_01001));
    end process;


    ap_condition_559_assign_proc : process(ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_01001)
    begin
                ap_condition_559 <= ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_01001));
    end process;


    ap_done_assign_proc : process(ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_subdone)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to2_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to2 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to3_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0_1to3 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_subdone)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to2)
    begin
        if (((ap_idle_pp0_0to2 = ap_const_logic_1) and (ap_start = ap_const_logic_0))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    cond50_i_i_1_fu_995_p3 <= 
        lshr_ln21_2_reg_2042 when (icmp_ln21_7_reg_2037(0) = '1') else 
        shl_ln21_1_reg_2047;
    cond50_i_i_2_fu_1212_p3 <= 
        lshr_ln21_4_reg_2142 when (icmp_ln21_11_reg_2137(0) = '1') else 
        shl_ln21_2_reg_2147;
    cond50_i_i_3_fu_1404_p3 <= 
        lshr_ln21_6_reg_2240 when (icmp_ln21_15_reg_2235(0) = '1') else 
        shl_ln21_3_reg_2245;
    cond50_i_i_4_fu_1551_p3 <= 
        lshr_ln21_8_reg_2313 when (icmp_ln21_19_reg_2308(0) = '1') else 
        shl_ln21_4_reg_2318;
    cond50_i_i_fu_779_p3 <= 
        lshr_ln21_reg_1925 when (icmp_ln21_3_reg_1920(0) = '1') else 
        shl_ln21_reg_1930;
    empty_28_fu_1205_p3 <= 
        ap_const_lv32_0 when (icmp_ln21_4_reg_1707_pp0_iter1_reg(0) = '1') else 
        LD_1_fu_1201_p1;
    empty_29_fu_1397_p3 <= 
        ap_const_lv32_0 when (icmp_ln21_8_reg_1778_pp0_iter1_reg(0) = '1') else 
        LD_2_fu_1393_p1;
    empty_30_fu_1544_p3 <= 
        ap_const_lv32_0 when (icmp_ln21_12_reg_1877_pp0_iter1_reg(0) = '1') else 
        LD_3_fu_1540_p1;
    empty_31_fu_1626_p3 <= 
        ap_const_lv32_0 when (icmp_ln21_16_reg_1995_pp0_iter2_reg(0) = '1') else 
        LD_4_fu_1622_p1;
    empty_fu_988_p3 <= 
        ap_const_lv32_0 when (icmp_ln21_reg_1656_pp0_iter1_reg(0) = '1') else 
        LD_fu_984_p1;

    gmem0_blk_n_AW_assign_proc : process(ap_enable_reg_pp0_iter1, m_axi_gmem0_AWREADY, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            gmem0_blk_n_AW <= m_axi_gmem0_AWREADY;
        else 
            gmem0_blk_n_AW <= ap_const_logic_1;
        end if; 
    end process;


    gmem0_blk_n_B_assign_proc : process(ap_enable_reg_pp0_iter3, m_axi_gmem0_BVALID, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
            gmem0_blk_n_B <= m_axi_gmem0_BVALID;
        else 
            gmem0_blk_n_B <= ap_const_logic_1;
        end if; 
    end process;


    gmem0_blk_n_W_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage4, m_axi_gmem0_WREADY, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2)))) then 
            gmem0_blk_n_W <= m_axi_gmem0_WREADY;
        else 
            gmem0_blk_n_W <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_1119_ce_assign_proc : process(ap_ce, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001)
    begin
        if (((ap_const_logic_1 = ap_ce) and (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))))) then 
            grp_fu_1119_ce <= ap_const_logic_1;
        else 
            grp_fu_1119_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1119_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln21_15_reg_2090),64));

    grp_fu_1128_ce_assign_proc : process(ap_ce, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001)
    begin
        if (((ap_const_logic_1 = ap_ce) and (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))))) then 
            grp_fu_1128_ce <= ap_const_logic_1;
        else 
            grp_fu_1128_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1128_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln21_11_reg_2095),64));

    grp_fu_1336_ce_assign_proc : process(ap_CS_fsm_pp0_stage4, ap_ce, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001)
    begin
        if (((ap_const_logic_1 = ap_ce) and (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))))) then 
            grp_fu_1336_ce <= ap_const_logic_1;
        else 
            grp_fu_1336_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1336_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln21_19_reg_2190),64));

    grp_fu_1345_ce_assign_proc : process(ap_CS_fsm_pp0_stage4, ap_ce, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001)
    begin
        if (((ap_const_logic_1 = ap_ce) and (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))))) then 
            grp_fu_1345_ce <= ap_const_logic_1;
        else 
            grp_fu_1345_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1345_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln21_14_reg_2195),64));

    grp_fu_489_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage4, ap_ce, ap_block_pp0_stage0_11001, ap_block_pp0_stage4_11001)
    begin
        if (((ap_const_logic_1 = ap_ce) and (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))))) then 
            grp_fu_489_ce <= ap_const_logic_1;
        else 
            grp_fu_489_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_489_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln21_1_reg_1751),64));

    grp_fu_498_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage4, ap_ce, ap_block_pp0_stage0_11001, ap_block_pp0_stage4_11001)
    begin
        if (((ap_const_logic_1 = ap_ce) and (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))))) then 
            grp_fu_498_ce <= ap_const_logic_1;
        else 
            grp_fu_498_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_498_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln21_2_reg_1756),64));

    grp_fu_696_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_ce, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_logic_1 = ap_ce) and (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))))) then 
            grp_fu_696_ce <= ap_const_logic_1;
        else 
            grp_fu_696_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_696_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln21_7_reg_1855),64));

    grp_fu_705_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_ce, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_logic_1 = ap_ce) and (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))))) then 
            grp_fu_705_ce <= ap_const_logic_1;
        else 
            grp_fu_705_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_705_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln21_5_reg_1860),64));

    grp_fu_903_ce_assign_proc : process(ap_ce, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_logic_1 = ap_ce) and (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))))) then 
            grp_fu_903_ce <= ap_const_logic_1;
        else 
            grp_fu_903_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_903_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln21_11_reg_1973),64));

    grp_fu_912_ce_assign_proc : process(ap_ce, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_logic_1 = ap_ce) and (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))))) then 
            grp_fu_912_ce <= ap_const_logic_1;
        else 
            grp_fu_912_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_912_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln21_8_reg_1978),64));
    icmp_ln21_10_fu_1033_p2 <= "0" when (and_ln21_7_fu_1029_p2 = ap_const_lv18_0) else "1";
    icmp_ln21_11_fu_1084_p2 <= "1" when (signed(add_ln21_10_reg_2052) > signed(ap_const_lv32_0)) else "0";
    icmp_ln21_12_fu_533_p2 <= "1" when (score_int_3_read_1_reg_1740 = ap_const_lv18_0) else "0";
    icmp_ln21_13_fu_1241_p2 <= "1" when (signed(tmp_55_reg_2159) > signed(ap_const_lv31_0)) else "0";
    icmp_ln21_14_fu_1250_p2 <= "0" when (and_ln21_8_fu_1246_p2 = ap_const_lv18_0) else "1";
    icmp_ln21_15_fu_1301_p2 <= "1" when (signed(add_ln21_14_reg_2152) > signed(ap_const_lv32_0)) else "0";
    icmp_ln21_16_fu_735_p2 <= "1" when (score_int_4_read_1_reg_1811 = ap_const_lv18_0) else "0";
    icmp_ln21_17_fu_1433_p2 <= "1" when (signed(tmp_60_reg_2257) > signed(ap_const_lv31_0)) else "0";
    icmp_ln21_18_fu_1442_p2 <= "0" when (and_ln21_9_fu_1438_p2 = ap_const_lv18_0) else "1";
    icmp_ln21_19_fu_1493_p2 <= "1" when (signed(add_ln21_18_reg_2250) > signed(ap_const_lv32_0)) else "0";
    icmp_ln21_1_fu_601_p2 <= "1" when (signed(tmp_40_reg_1824) > signed(ap_const_lv31_0)) else "0";
    icmp_ln21_2_fu_610_p2 <= "0" when (and_ln21_5_fu_606_p2 = ap_const_lv18_0) else "1";
    icmp_ln21_3_fu_661_p2 <= "1" when (signed(add_ln21_reg_1817) > signed(ap_const_lv32_0)) else "0";
    icmp_ln21_4_fu_289_p2 <= "1" when (score_int_1_read_1_reg_1650 = ap_const_lv18_0) else "0";
    icmp_ln21_5_fu_808_p2 <= "1" when (signed(tmp_45_reg_1942) > signed(ap_const_lv31_0)) else "0";
    icmp_ln21_6_fu_817_p2 <= "0" when (and_ln21_6_fu_813_p2 = ap_const_lv18_0) else "1";
    icmp_ln21_7_fu_868_p2 <= "1" when (signed(add_ln21_6_reg_1935) > signed(ap_const_lv32_0)) else "0";
    icmp_ln21_8_fu_401_p2 <= "1" when (score_int_2_read_1_reg_1689 = ap_const_lv18_0) else "0";
    icmp_ln21_9_fu_1024_p2 <= "1" when (signed(tmp_50_reg_2059) > signed(ap_const_lv31_0)) else "0";
    icmp_ln21_fu_222_p2 <= "1" when (score_int_0_read_1_reg_1633 = ap_const_lv18_0) else "0";
    lshr_ln21_10_fu_477_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv18_3FFFF),to_integer(unsigned('0' & zext_ln21_25_fu_474_p1(18-1 downto 0)))));
    lshr_ln21_11_fu_684_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv18_3FFFF),to_integer(unsigned('0' & zext_ln21_26_fu_681_p1(18-1 downto 0)))));
    lshr_ln21_12_fu_891_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv18_3FFFF),to_integer(unsigned('0' & zext_ln21_27_fu_888_p1(18-1 downto 0)))));
    lshr_ln21_13_fu_1107_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv18_3FFFF),to_integer(unsigned('0' & zext_ln21_28_fu_1104_p1(18-1 downto 0)))));
    lshr_ln21_14_fu_1324_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv18_3FFFF),to_integer(unsigned('0' & zext_ln21_29_fu_1321_p1(18-1 downto 0)))));
    m_axi_gmem0_ARADDR <= ap_const_lv32_0;
    m_axi_gmem0_ARBURST <= ap_const_lv2_0;
    m_axi_gmem0_ARCACHE <= ap_const_lv4_0;
    m_axi_gmem0_ARID <= ap_const_lv1_0;
    m_axi_gmem0_ARLEN <= ap_const_lv32_0;
    m_axi_gmem0_ARLOCK <= ap_const_lv2_0;
    m_axi_gmem0_ARPROT <= ap_const_lv3_0;
    m_axi_gmem0_ARQOS <= ap_const_lv4_0;
    m_axi_gmem0_ARREGION <= ap_const_lv4_0;
    m_axi_gmem0_ARSIZE <= ap_const_lv3_0;
    m_axi_gmem0_ARUSER <= ap_const_lv1_0;
    m_axi_gmem0_ARVALID <= ap_const_logic_0;
    m_axi_gmem0_AWADDR <= sext_ln21_fu_1149_p1;
    m_axi_gmem0_AWBURST <= ap_const_lv2_0;
    m_axi_gmem0_AWCACHE <= ap_const_lv4_0;
    m_axi_gmem0_AWID <= ap_const_lv1_0;
    m_axi_gmem0_AWLEN <= ap_const_lv32_5;
    m_axi_gmem0_AWLOCK <= ap_const_lv2_0;
    m_axi_gmem0_AWPROT <= ap_const_lv3_0;
    m_axi_gmem0_AWQOS <= ap_const_lv4_0;
    m_axi_gmem0_AWREGION <= ap_const_lv4_0;
    m_axi_gmem0_AWSIZE <= ap_const_lv3_0;
    m_axi_gmem0_AWUSER <= ap_const_lv1_0;

    m_axi_gmem0_AWVALID_assign_proc : process(ap_enable_reg_pp0_iter1, ap_ce, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then 
            m_axi_gmem0_AWVALID <= ap_const_logic_1;
        else 
            m_axi_gmem0_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    m_axi_gmem0_BREADY_assign_proc : process(ap_enable_reg_pp0_iter3, ap_ce, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then 
            m_axi_gmem0_BREADY <= ap_const_logic_1;
        else 
            m_axi_gmem0_BREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem0_RREADY <= ap_const_logic_0;

    m_axi_gmem0_WDATA_assign_proc : process(ap_ce, empty_reg_2112, empty_28_reg_2210, empty_29_reg_2283, empty_30_reg_2323, empty_31_reg_2343, ap_condition_523, ap_condition_532, ap_condition_541, ap_condition_550, ap_condition_559)
    begin
        if ((ap_const_logic_1 = ap_ce)) then
            if ((ap_const_boolean_1 = ap_condition_559)) then 
                m_axi_gmem0_WDATA <= empty_31_reg_2343;
            elsif ((ap_const_boolean_1 = ap_condition_550)) then 
                m_axi_gmem0_WDATA <= empty_30_reg_2323;
            elsif ((ap_const_boolean_1 = ap_condition_541)) then 
                m_axi_gmem0_WDATA <= empty_29_reg_2283;
            elsif ((ap_const_boolean_1 = ap_condition_532)) then 
                m_axi_gmem0_WDATA <= empty_28_reg_2210;
            elsif ((ap_const_boolean_1 = ap_condition_523)) then 
                m_axi_gmem0_WDATA <= empty_reg_2112;
            else 
                m_axi_gmem0_WDATA <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            m_axi_gmem0_WDATA <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    m_axi_gmem0_WID <= ap_const_lv1_0;
    m_axi_gmem0_WLAST <= ap_const_logic_0;
    m_axi_gmem0_WSTRB <= ap_const_lv4_F;
    m_axi_gmem0_WUSER <= ap_const_lv1_0;

    m_axi_gmem0_WVALID_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage4, ap_ce, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)))) then 
            m_axi_gmem0_WVALID <= ap_const_logic_1;
        else 
            m_axi_gmem0_WVALID <= ap_const_logic_0;
        end if; 
    end process;

    or_ln21_1_fu_860_p3 <= (ap_const_lv1_0 & or_ln21_fu_854_p2);
    or_ln21_2_fu_1076_p3 <= (ap_const_lv1_0 & or_ln21_6_fu_1070_p2);
    or_ln21_3_fu_1293_p3 <= (ap_const_lv1_0 & or_ln21_7_fu_1287_p2);
    or_ln21_4_fu_1485_p3 <= (ap_const_lv1_0 & or_ln21_8_fu_1479_p2);
    or_ln21_5_fu_647_p2 <= (phi_ln21_fu_616_p2 or and_ln21_fu_641_p2);
    or_ln21_6_fu_1070_p2 <= (phi_ln21_2_fu_1039_p2 or and_ln21_2_fu_1064_p2);
    or_ln21_7_fu_1287_p2 <= (phi_ln21_3_fu_1256_p2 or and_ln21_3_fu_1281_p2);
    or_ln21_8_fu_1479_p2 <= (phi_ln21_4_fu_1448_p2 or and_ln21_4_fu_1473_p2);
    or_ln21_fu_854_p2 <= (phi_ln21_1_fu_823_p2 or and_ln21_1_fu_848_p2);
    or_ln_fu_653_p3 <= (ap_const_lv1_0 & or_ln21_5_fu_647_p2);
    p_shl1_fu_378_p3 <= (trunc_ln21_3_fu_374_p1 & ap_const_lv2_0);
    p_shl_fu_366_p3 <= (trunc_ln21_2_fu_362_p1 & ap_const_lv4_0);
    phi_ln21_1_fu_823_p2 <= (icmp_ln21_6_fu_817_p2 and icmp_ln21_5_fu_808_p2);
    phi_ln21_2_fu_1039_p2 <= (icmp_ln21_9_fu_1024_p2 and icmp_ln21_10_fu_1033_p2);
    phi_ln21_3_fu_1256_p2 <= (icmp_ln21_14_fu_1250_p2 and icmp_ln21_13_fu_1241_p2);
    phi_ln21_4_fu_1448_p2 <= (icmp_ln21_18_fu_1442_p2 and icmp_ln21_17_fu_1433_p2);
    phi_ln21_fu_616_p2 <= (icmp_ln21_2_fu_610_p2 and icmp_ln21_1_fu_601_p2);
    pi_assign_1_fu_1189_p5 <= (zext_ln21_21_fu_1159_p1(63 downto 32) & tmp_5_fu_1182_p3 & zext_ln21_21_fu_1159_p1(22 downto 0));
    pi_assign_2_fu_1381_p5 <= (zext_ln21_22_fu_1351_p1(63 downto 32) & tmp_11_fu_1374_p3 & zext_ln21_22_fu_1351_p1(22 downto 0));
    pi_assign_3_fu_1528_p5 <= (zext_ln21_23_fu_1498_p1(63 downto 32) & tmp_15_fu_1521_p3 & zext_ln21_23_fu_1498_p1(22 downto 0));
    pi_assign_4_fu_1610_p5 <= (zext_ln21_24_fu_1580_p1(63 downto 32) & tmp_19_fu_1603_p3 & zext_ln21_24_fu_1580_p1(22 downto 0));
    pi_assign_fu_972_p5 <= (zext_ln21_20_fu_942_p1(63 downto 32) & tmp_7_fu_965_p3 & zext_ln21_20_fu_942_p1(22 downto 0));
    select_ln21_1_fu_952_p3 <= 
        ap_const_lv8_7F when (tmp_43_fu_945_p3(0) = '1') else 
        ap_const_lv8_7E;
    select_ln21_2_fu_294_p3 <= 
        sub_ln21_3_reg_1684 when (tmp_44_reg_1678(0) = '1') else 
        score_int_1_read_1_reg_1650;
    select_ln21_3_fu_1169_p3 <= 
        ap_const_lv8_7F when (tmp_48_fu_1162_p3(0) = '1') else 
        ap_const_lv8_7E;
    select_ln21_4_fu_406_p3 <= 
        sub_ln21_6_reg_1735 when (tmp_49_reg_1729(0) = '1') else 
        score_int_2_read_1_reg_1689;
    select_ln21_5_fu_1361_p3 <= 
        ap_const_lv8_7F when (tmp_53_fu_1354_p3(0) = '1') else 
        ap_const_lv8_7E;
    select_ln21_6_fu_538_p3 <= 
        sub_ln21_9_reg_1806 when (tmp_54_reg_1800(0) = '1') else 
        score_int_3_read_1_reg_1740;
    select_ln21_7_fu_1508_p3 <= 
        ap_const_lv8_7F when (tmp_58_fu_1501_p3(0) = '1') else 
        ap_const_lv8_7E;
    select_ln21_8_fu_740_p3 <= 
        sub_ln21_12_reg_1905 when (tmp_59_reg_1899(0) = '1') else 
        score_int_4_read_1_reg_1811;
    select_ln21_9_fu_1590_p3 <= 
        ap_const_lv8_7F when (tmp_63_fu_1583_p3(0) = '1') else 
        ap_const_lv8_7E;
    select_ln21_fu_227_p3 <= 
        sub_ln21_reg_1645 when (tmp_reg_1639(0) = '1') else 
        score_int_0_read_1_reg_1633;
        sext_ln21_1_fu_250_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_2_fu_242_p3),32));

        sext_ln21_2_fu_317_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_8_fu_309_p3),32));

        sext_ln21_3_fu_429_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_9_fu_421_p3),32));

        sext_ln21_4_fu_561_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_13_fu_553_p3),32));

        sext_ln21_5_fu_763_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_17_fu_755_p3),32));

        sext_ln21_fu_1149_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln21_5_reg_1910),32));

    sub_ln21_10_fu_726_p2 <= std_logic_vector(unsigned(ap_const_lv32_12) - unsigned(tmp_14_reg_1889));
    sub_ln21_11_fu_928_p2 <= std_logic_vector(unsigned(ap_const_lv32_19) - unsigned(sub_ln21_10_reg_1983));
    sub_ln21_12_fu_585_p2 <= std_logic_vector(unsigned(ap_const_lv18_0) - unsigned(ap_port_reg_score_int_4_read));
    sub_ln21_13_fu_933_p2 <= std_logic_vector(unsigned(ap_const_lv32_12) - unsigned(tmp_18_reg_2007));
    sub_ln21_14_fu_1144_p2 <= std_logic_vector(unsigned(ap_const_lv32_19) - unsigned(sub_ln21_13_reg_2100));
    sub_ln21_15_fu_803_p2 <= std_logic_vector(unsigned(ap_const_lv8_8) - unsigned(trunc_ln21_reg_1673));
    sub_ln21_16_fu_1019_p2 <= std_logic_vector(unsigned(ap_const_lv8_8) - unsigned(trunc_ln21_4_reg_1724));
    sub_ln21_17_fu_1236_p2 <= std_logic_vector(unsigned(ap_const_lv8_8) - unsigned(trunc_ln21_7_reg_1795));
    sub_ln21_18_fu_1428_p2 <= std_logic_vector(unsigned(ap_const_lv8_8) - unsigned(trunc_ln21_9_reg_1894));
    sub_ln21_19_fu_1575_p2 <= std_logic_vector(unsigned(ap_const_lv8_8) - unsigned(trunc_ln21_11_reg_2012));
    sub_ln21_1_fu_280_p2 <= std_logic_vector(unsigned(ap_const_lv32_12) - unsigned(tmp_3_reg_1668));
    sub_ln21_20_fu_347_p2 <= std_logic_vector(unsigned(ap_const_lv5_B) - unsigned(trunc_ln21_1_reg_1702));
    sub_ln21_21_fu_509_p2 <= std_logic_vector(unsigned(ap_const_lv5_B) - unsigned(trunc_ln21_6_reg_1773));
    sub_ln21_22_fu_711_p2 <= std_logic_vector(unsigned(ap_const_lv5_B) - unsigned(trunc_ln21_8_reg_1872));
    sub_ln21_23_fu_918_p2 <= std_logic_vector(unsigned(ap_const_lv5_B) - unsigned(trunc_ln21_10_reg_1990));
    sub_ln21_24_fu_1134_p2 <= std_logic_vector(unsigned(ap_const_lv5_B) - unsigned(trunc_ln21_12_reg_2107));
    sub_ln21_2_fu_357_p2 <= std_logic_vector(unsigned(ap_const_lv32_19) - unsigned(sub_ln21_1_reg_1695));
    sub_ln21_3_fu_274_p2 <= std_logic_vector(unsigned(ap_const_lv18_0) - unsigned(ap_port_reg_score_int_1_read));
    sub_ln21_4_fu_392_p2 <= std_logic_vector(unsigned(ap_const_lv32_12) - unsigned(tmp_4_reg_1719));
    sub_ln21_5_fu_519_p2 <= std_logic_vector(unsigned(ap_const_lv32_19) - unsigned(sub_ln21_4_reg_1766));
    sub_ln21_6_fu_341_p2 <= std_logic_vector(unsigned(ap_const_lv18_0) - unsigned(ap_port_reg_score_int_2_read));
    sub_ln21_7_fu_524_p2 <= std_logic_vector(unsigned(ap_const_lv32_12) - unsigned(tmp_10_reg_1790));
    sub_ln21_8_fu_721_p2 <= std_logic_vector(unsigned(ap_const_lv32_19) - unsigned(sub_ln21_7_reg_1865));
    sub_ln21_9_fu_453_p2 <= std_logic_vector(unsigned(ap_const_lv18_0) - unsigned(ap_port_reg_score_int_3_read));
    sub_ln21_fu_216_p2 <= std_logic_vector(unsigned(ap_const_lv18_0) - unsigned(score_int_0_read));
    
    tmp_10_fu_433_p3_proc : process(sext_ln21_3_fu_429_p1)
    begin
        tmp_10_fu_433_p3 <= std_logic_vector(to_unsigned(32, 32));
        for i in 0 to 32 - 1 loop
            if sext_ln21_3_fu_429_p1(i) = '1' then
                tmp_10_fu_433_p3 <= std_logic_vector(to_unsigned(i,32));
                exit;
            end if;
        end loop;
    end process;

    tmp_11_fu_1374_p3 <= (tmp_49_reg_1729_pp0_iter1_reg & add_ln21_13_fu_1369_p2);
    
    tmp_12_fu_543_p4_proc : process(select_ln21_6_fu_538_p3)
    variable vlo_cpy : STD_LOGIC_VECTOR(18+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(18+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(18 - 1 downto 0);
    variable tmp_12_fu_543_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(18 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(18 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(18 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(5 - 1 downto 0) := ap_const_lv32_11(5 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(5 - 1 downto 0) := ap_const_lv32_0(5 - 1 downto 0);
        v0_cpy := select_ln21_6_fu_538_p3;
        if (vlo_cpy(5 - 1 downto 0) > vhi_cpy(5 - 1 downto 0)) then
            vhi_cpy(5-1 downto 0) := std_logic_vector(18-1-unsigned(ap_const_lv32_0(5-1 downto 0)));
            vlo_cpy(5-1 downto 0) := std_logic_vector(18-1-unsigned(ap_const_lv32_11(5-1 downto 0)));
            for tmp_12_fu_543_p4_i in 0 to 18-1 loop
                v0_cpy(tmp_12_fu_543_p4_i) := select_ln21_6_fu_538_p3(18-1-tmp_12_fu_543_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(5-1 downto 0)))));

        section := (others=>'0');
        section(5-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(5-1 downto 0)) - unsigned(vlo_cpy(5-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(18-1 downto 0)))));
        res_mask := res_mask(18-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_12_fu_543_p4 <= resvalue(18-1 downto 0);
    end process;

    tmp_13_fu_553_p3 <= (ap_const_lv1_1 & tmp_12_fu_543_p4);
    
    tmp_14_fu_565_p3_proc : process(sext_ln21_4_fu_561_p1)
    begin
        tmp_14_fu_565_p3 <= std_logic_vector(to_unsigned(32, 32));
        for i in 0 to 32 - 1 loop
            if sext_ln21_4_fu_561_p1(i) = '1' then
                tmp_14_fu_565_p3 <= std_logic_vector(to_unsigned(i,32));
                exit;
            end if;
        end loop;
    end process;

    tmp_15_fu_1521_p3 <= (tmp_54_reg_1800_pp0_iter1_reg & add_ln21_17_fu_1516_p2);
    
    tmp_16_fu_745_p4_proc : process(select_ln21_8_fu_740_p3)
    variable vlo_cpy : STD_LOGIC_VECTOR(18+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(18+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(18 - 1 downto 0);
    variable tmp_16_fu_745_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(18 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(18 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(18 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(5 - 1 downto 0) := ap_const_lv32_11(5 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(5 - 1 downto 0) := ap_const_lv32_0(5 - 1 downto 0);
        v0_cpy := select_ln21_8_fu_740_p3;
        if (vlo_cpy(5 - 1 downto 0) > vhi_cpy(5 - 1 downto 0)) then
            vhi_cpy(5-1 downto 0) := std_logic_vector(18-1-unsigned(ap_const_lv32_0(5-1 downto 0)));
            vlo_cpy(5-1 downto 0) := std_logic_vector(18-1-unsigned(ap_const_lv32_11(5-1 downto 0)));
            for tmp_16_fu_745_p4_i in 0 to 18-1 loop
                v0_cpy(tmp_16_fu_745_p4_i) := select_ln21_8_fu_740_p3(18-1-tmp_16_fu_745_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(5-1 downto 0)))));

        section := (others=>'0');
        section(5-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(5-1 downto 0)) - unsigned(vlo_cpy(5-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(18-1 downto 0)))));
        res_mask := res_mask(18-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_16_fu_745_p4 <= resvalue(18-1 downto 0);
    end process;

    tmp_17_fu_755_p3 <= (ap_const_lv1_1 & tmp_16_fu_745_p4);
    
    tmp_18_fu_767_p3_proc : process(sext_ln21_5_fu_763_p1)
    begin
        tmp_18_fu_767_p3 <= std_logic_vector(to_unsigned(32, 32));
        for i in 0 to 32 - 1 loop
            if sext_ln21_5_fu_763_p1(i) = '1' then
                tmp_18_fu_767_p3 <= std_logic_vector(to_unsigned(i,32));
                exit;
            end if;
        end loop;
    end process;

    tmp_19_fu_1603_p3 <= (tmp_59_reg_1899_pp0_iter1_reg & add_ln21_21_fu_1598_p2);
    
    tmp_1_fu_232_p4_proc : process(select_ln21_fu_227_p3)
    variable vlo_cpy : STD_LOGIC_VECTOR(18+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(18+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(18 - 1 downto 0);
    variable tmp_1_fu_232_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(18 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(18 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(18 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(5 - 1 downto 0) := ap_const_lv32_11(5 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(5 - 1 downto 0) := ap_const_lv32_0(5 - 1 downto 0);
        v0_cpy := select_ln21_fu_227_p3;
        if (vlo_cpy(5 - 1 downto 0) > vhi_cpy(5 - 1 downto 0)) then
            vhi_cpy(5-1 downto 0) := std_logic_vector(18-1-unsigned(ap_const_lv32_0(5-1 downto 0)));
            vlo_cpy(5-1 downto 0) := std_logic_vector(18-1-unsigned(ap_const_lv32_11(5-1 downto 0)));
            for tmp_1_fu_232_p4_i in 0 to 18-1 loop
                v0_cpy(tmp_1_fu_232_p4_i) := select_ln21_fu_227_p3(18-1-tmp_1_fu_232_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(5-1 downto 0)))));

        section := (others=>'0');
        section(5-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(5-1 downto 0)) - unsigned(vlo_cpy(5-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(18-1 downto 0)))));
        res_mask := res_mask(18-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_1_fu_232_p4 <= resvalue(18-1 downto 0);
    end process;

    tmp_2_fu_242_p3 <= (ap_const_lv1_1 & tmp_1_fu_232_p4);
    
    tmp_3_fu_254_p3_proc : process(sext_ln21_1_fu_250_p1)
    begin
        tmp_3_fu_254_p3 <= std_logic_vector(to_unsigned(32, 32));
        for i in 0 to 32 - 1 loop
            if sext_ln21_1_fu_250_p1(i) = '1' then
                tmp_3_fu_254_p3 <= std_logic_vector(to_unsigned(i,32));
                exit;
            end if;
        end loop;
    end process;

    tmp_41_fu_622_p3 <= add_ln21_reg_1817(31 downto 31);
    tmp_42_fu_635_p3 <= select_ln21_reg_1661(to_integer(unsigned(add_ln21_reg_1817)) downto to_integer(unsigned(add_ln21_reg_1817))) when (to_integer(unsigned(add_ln21_reg_1817)) >= 0 and to_integer(unsigned(add_ln21_reg_1817)) <=17) else "-";
    tmp_43_fu_945_p3 <= add_ln21_2_reg_2017(25 downto 25);
    tmp_46_fu_829_p3 <= add_ln21_6_reg_1935(31 downto 31);
    tmp_47_fu_842_p3 <= select_ln21_2_reg_1712(to_integer(unsigned(add_ln21_6_reg_1935)) downto to_integer(unsigned(add_ln21_6_reg_1935))) when (to_integer(unsigned(add_ln21_6_reg_1935)) >= 0 and to_integer(unsigned(add_ln21_6_reg_1935)) <=17) else "-";
    tmp_48_fu_1162_p3 <= add_ln21_8_reg_2117(25 downto 25);
    
    tmp_4_fu_321_p3_proc : process(sext_ln21_2_fu_317_p1)
    begin
        tmp_4_fu_321_p3 <= std_logic_vector(to_unsigned(32, 32));
        for i in 0 to 32 - 1 loop
            if sext_ln21_2_fu_317_p1(i) = '1' then
                tmp_4_fu_321_p3 <= std_logic_vector(to_unsigned(i,32));
                exit;
            end if;
        end loop;
    end process;

    tmp_51_fu_1045_p3 <= add_ln21_10_reg_2052(31 downto 31);
    tmp_52_fu_1058_p3 <= select_ln21_4_reg_1783(to_integer(unsigned(add_ln21_10_reg_2052)) downto to_integer(unsigned(add_ln21_10_reg_2052))) when (to_integer(unsigned(add_ln21_10_reg_2052)) >= 0 and to_integer(unsigned(add_ln21_10_reg_2052)) <=17) else "-";
    tmp_53_fu_1354_p3 <= add_ln21_12_reg_2215(25 downto 25);
    tmp_56_fu_1262_p3 <= add_ln21_14_reg_2152(31 downto 31);
    tmp_57_fu_1275_p3 <= select_ln21_6_reg_1882(to_integer(unsigned(add_ln21_14_reg_2152)) downto to_integer(unsigned(add_ln21_14_reg_2152))) when (to_integer(unsigned(add_ln21_14_reg_2152)) >= 0 and to_integer(unsigned(add_ln21_14_reg_2152)) <=17) else "-";
    tmp_58_fu_1501_p3 <= add_ln21_16_reg_2288(25 downto 25);
    tmp_5_fu_1182_p3 <= (tmp_44_reg_1678_pp0_iter1_reg & add_ln21_9_fu_1177_p2);
    tmp_61_fu_1454_p3 <= add_ln21_18_reg_2250(31 downto 31);
    tmp_62_fu_1467_p3 <= select_ln21_8_reg_2000(to_integer(unsigned(add_ln21_18_reg_2250)) downto to_integer(unsigned(add_ln21_18_reg_2250))) when (to_integer(unsigned(add_ln21_18_reg_2250)) >= 0 and to_integer(unsigned(add_ln21_18_reg_2250)) <=17) else "-";
    tmp_63_fu_1583_p3 <= add_ln21_20_reg_2328(25 downto 25);
    
    tmp_6_fu_411_p4_proc : process(select_ln21_4_fu_406_p3)
    variable vlo_cpy : STD_LOGIC_VECTOR(18+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(18+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(18 - 1 downto 0);
    variable tmp_6_fu_411_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(18 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(18 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(18 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(5 - 1 downto 0) := ap_const_lv32_11(5 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(5 - 1 downto 0) := ap_const_lv32_0(5 - 1 downto 0);
        v0_cpy := select_ln21_4_fu_406_p3;
        if (vlo_cpy(5 - 1 downto 0) > vhi_cpy(5 - 1 downto 0)) then
            vhi_cpy(5-1 downto 0) := std_logic_vector(18-1-unsigned(ap_const_lv32_0(5-1 downto 0)));
            vlo_cpy(5-1 downto 0) := std_logic_vector(18-1-unsigned(ap_const_lv32_11(5-1 downto 0)));
            for tmp_6_fu_411_p4_i in 0 to 18-1 loop
                v0_cpy(tmp_6_fu_411_p4_i) := select_ln21_4_fu_406_p3(18-1-tmp_6_fu_411_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(5-1 downto 0)))));

        section := (others=>'0');
        section(5-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(5-1 downto 0)) - unsigned(vlo_cpy(5-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(18-1 downto 0)))));
        res_mask := res_mask(18-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_6_fu_411_p4 <= resvalue(18-1 downto 0);
    end process;

    tmp_7_fu_965_p3 <= (tmp_reg_1639_pp0_iter1_reg & add_ln21_3_fu_960_p2);
    tmp_8_fu_309_p3 <= (ap_const_lv1_1 & tmp_s_fu_299_p4);
    tmp_9_fu_421_p3 <= (ap_const_lv1_1 & tmp_6_fu_411_p4);
    
    tmp_s_fu_299_p4_proc : process(select_ln21_2_fu_294_p3)
    variable vlo_cpy : STD_LOGIC_VECTOR(18+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(18+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(18 - 1 downto 0);
    variable tmp_s_fu_299_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(18 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(18 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(18 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(5 - 1 downto 0) := ap_const_lv32_11(5 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(5 - 1 downto 0) := ap_const_lv32_0(5 - 1 downto 0);
        v0_cpy := select_ln21_2_fu_294_p3;
        if (vlo_cpy(5 - 1 downto 0) > vhi_cpy(5 - 1 downto 0)) then
            vhi_cpy(5-1 downto 0) := std_logic_vector(18-1-unsigned(ap_const_lv32_0(5-1 downto 0)));
            vlo_cpy(5-1 downto 0) := std_logic_vector(18-1-unsigned(ap_const_lv32_11(5-1 downto 0)));
            for tmp_s_fu_299_p4_i in 0 to 18-1 loop
                v0_cpy(tmp_s_fu_299_p4_i) := select_ln21_2_fu_294_p3(18-1-tmp_s_fu_299_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(5-1 downto 0)))));

        section := (others=>'0');
        section(5-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(5-1 downto 0)) - unsigned(vlo_cpy(5-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(18-1 downto 0)))));
        res_mask := res_mask(18-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_s_fu_299_p4 <= resvalue(18-1 downto 0);
    end process;

    trunc_ln21_10_fu_731_p1 <= sub_ln21_10_fu_726_p2(5 - 1 downto 0);
    trunc_ln21_11_fu_775_p1 <= tmp_18_fu_767_p3(8 - 1 downto 0);
    trunc_ln21_12_fu_938_p1 <= sub_ln21_13_fu_933_p2(5 - 1 downto 0);
    trunc_ln21_1_fu_285_p1 <= sub_ln21_1_fu_280_p2(5 - 1 downto 0);
    trunc_ln21_2_fu_362_p1 <= ap_port_reg_n(28 - 1 downto 0);
    trunc_ln21_3_fu_374_p1 <= ap_port_reg_n(30 - 1 downto 0);
    trunc_ln21_4_fu_329_p1 <= tmp_4_fu_321_p3(8 - 1 downto 0);
    trunc_ln21_6_fu_397_p1 <= sub_ln21_4_fu_392_p2(5 - 1 downto 0);
    trunc_ln21_7_fu_441_p1 <= tmp_10_fu_433_p3(8 - 1 downto 0);
    trunc_ln21_8_fu_529_p1 <= sub_ln21_7_fu_524_p2(5 - 1 downto 0);
    trunc_ln21_9_fu_573_p1 <= tmp_14_fu_565_p3(8 - 1 downto 0);
    trunc_ln21_fu_262_p1 <= tmp_3_fu_254_p3(8 - 1 downto 0);
    xor_ln21_1_fu_836_p2 <= (tmp_46_fu_829_p3 xor ap_const_lv1_1);
    xor_ln21_2_fu_1052_p2 <= (tmp_51_fu_1045_p3 xor ap_const_lv1_1);
    xor_ln21_3_fu_1269_p2 <= (tmp_56_fu_1262_p3 xor ap_const_lv1_1);
    xor_ln21_4_fu_1461_p2 <= (tmp_61_fu_1454_p3 xor ap_const_lv1_1);
    xor_ln21_fu_629_p2 <= (tmp_41_fu_622_p3 xor ap_const_lv1_1);
    zext_ln21_11_fu_1217_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln21_2_reg_2132),64));
    zext_ln21_12_fu_1113_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln21_6_reg_1882),64));
    zext_ln21_15_fu_1409_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln21_3_reg_2230),64));
    zext_ln21_16_fu_1330_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln21_8_reg_2000),64));
    zext_ln21_19_fu_1556_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln21_4_reg_2303),64));
    zext_ln21_20_fu_942_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln21_1_reg_2022),64));
    zext_ln21_21_fu_1159_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln21_3_reg_2122),64));
    zext_ln21_22_fu_1351_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln21_5_reg_2220),64));
    zext_ln21_23_fu_1498_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln21_7_reg_2293),64));
    zext_ln21_24_fu_1580_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln21_9_reg_2333),64));
    zext_ln21_25_fu_474_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln21_20_reg_1746),18));
    zext_ln21_26_fu_681_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln21_21_reg_1850),18));
    zext_ln21_27_fu_888_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln21_22_reg_1968),18));
    zext_ln21_28_fu_1104_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln21_23_reg_2085),18));
    zext_ln21_29_fu_1321_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln21_24_reg_2185),18));
    zext_ln21_3_fu_784_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln_reg_1915),64));
    zext_ln21_4_fu_690_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln21_2_reg_1712),64));
    zext_ln21_7_fu_1000_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln21_1_reg_2032),64));
    zext_ln21_8_fu_897_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln21_4_reg_1783),64));
    zext_ln21_fu_483_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln21_reg_1661),64));
end behav;
